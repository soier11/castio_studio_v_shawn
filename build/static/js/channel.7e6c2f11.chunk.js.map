{"version":3,"sources":["components/common/VideoPlayer.js","containers/pages/ChannelPageHeading.js","containers/pages/TagsInput.js","components/pages/SingleLightbox.js","views/studio/channel.js","containers/navs/Breadcrumb.js"],"names":["VideoPlayer","React","Component","componentDidMount","this","player","videojs","videoNode","props","componentWillUnmount","dispose","render","data-vjs-player","ref","node","poster","className","ChannelPageHeading","constructor","super","toggle","setState","prevState","tooltipOpen","changeMode","switchChecked","state","match","heading","Row","xxs","IntlMessages","id","checked","onChange","Tooltip","placement","isOpen","target","Breadcrumb","injectIntl","TagsInputExample","handleTagChange","tags","messages","intl","value","inputProps","placeholder","SingleLightbox","onThumbClick","bind","photoIndex","to","location","onClick","src","thumb","alt","mainSrc","large","onCloseRequest","ChannelPage","data","type","name","date","profilePic","detail","image","video","renderContent","autoplay","controls","sources","Card","CardBody","Input","defaultValue","TagsInput","getMenuTitle","sub","getUrl","path","index","split","BreadcrumbItems","console","log","substr","paths","includes","filter","x","indexOf","length","map","key","active","BreadcrumbContainer"],"mappings":"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","file":"static/js/channel.7e6c2f11.chunk.js","sourcesContent":["import React from 'react';\r\nimport videojs from 'video.js'\r\nexport default class VideoPlayer extends React.Component {\r\n  componentDidMount() {\r\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.player) {\r\n      this.player.dispose()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>    \r\n        <div data-vjs-player>\r\n          <video ref={ node => this.videoNode = node } poster={\"/assets/img/detail-1.jpg\"} className={this.props.className || \"\"}></video>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport Switch from \"rc-switch\";\nimport \"rc-switch/assets/index.css\";\nimport { injectIntl } from 'react-intl';\nimport { Tooltip } from \"reactstrap\";\n\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../navs/Breadcrumb';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nclass ChannelPageHeading extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      switchChecked: false,\n      tooltipOpen: false\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      tooltipOpen: !prevState.tooltipOpen\n    }));\n  };\n\n  changeMode = () => {\n    this.setState(prevState => ({\n      switchChecked: !prevState.switchChecked\n    }));\n  };\n\n  render() {\n    const {\n      match,\n      heading,\n    } = this.props;\n\n    return (\n      <Row>\n        <Colxx xxs=\"12\">\n          <div className=\"mb-2\">\n            <h1>\n              <IntlMessages id={heading} />\n            </h1>\n\n            <div className=\"text-zero top-right-button-container float-right\">\n              <div className=\"d-flex align-middle p-2 channel-settings-wrap\">\n                <IntlMessages id=\"채널상태\" />\n                <Switch\n                  id=\"Channel-Tooltip-Switch\"\n                  className=\"custom-switch custom-switch-primary custom-switch-small\"\n                  checked={this.state.switchChecked}\n                  onChange={this.changeMode}\n                />\n                <Tooltip\n                  placement=\"top\"\n                  isOpen={this.state.tooltipOpen}\n                  target={\"Channel-Tooltip-Switch\"}\n                  toggle={this.toggle}\n                >\n                  {this.state.switchChecked ? '공개' : '비공개'}\n                </Tooltip>\n              </div>\n            </div>\n            <Breadcrumb match={match} />\n          </div>\n\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n    );\n  }\n}\n\nexport default injectIntl(ChannelPageHeading);\n","import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport TagsInput from \"react-tagsinput\";\nimport \"react-tagsinput/react-tagsinput.css\";\n\nclass TagsInputExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: []\n    };\n  }\n  handleTagChange = tags => {\n    this.setState({ tags });\n  };\n  render() {\n    const { messages } = this.props.intl;\n\n    return (\n      <TagsInput\n        value={this.state.tags}\n        onChange={this.handleTagChange}\n        inputProps={{ placeholder: messages[\"pages.tags\"] }}\n      />\n    );\n  }\n}\nexport default injectIntl(TagsInputExample);\n","import React, { Component, Fragment }  from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Lightbox from 'react-image-lightbox';\r\n\r\nclass SingleLightbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onThumbClick = this.onThumbClick.bind(this);\r\n        this.state = {\r\n            photoIndex: 0,\r\n            isOpen: false,\r\n        };\r\n      }\r\n\r\n      onThumbClick() {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isOpen } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <NavLink to=\"#\" location={{}} onClick={() => this.onThumbClick()}>\r\n                    <img src={this.props.thumb} alt=\"thumbnail\" className={this.props.className}/>\r\n                </NavLink>\r\n\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={this.props.large}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                )}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleLightbox;","import React, { Component, Fragment } from 'react';\nimport { Row, Card, CardBody, CardTitle, Input } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport ChannelPageHeading from \"../../containers/pages/ChannelPageHeading\";\n\nimport TagsInput from \"../../containers/pages/TagsInput\";\nimport VideoPlayer from \"../../components/common/VideoPlayer\";\nimport SingleLightbox from \"../../components/pages/SingleLightbox\";\n\nexport default class ChannelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        type: \"video\",\n        // type: \"image\",\n        name: 'Mayra Sibley',\n        date: '10 minutes ago',\n        profilePic: '/assets/img/profile-pic-l.jpg',\n        detail: 'I’m a web developer. I spend my whole day, practically every day, experimenting with HTML, CSS, and JavaScript; dabbling with Python and Ruby; and inhaling a wide variety of potentially useless information through a few hundred RSS feeds. I build websites that delight and inform. I do it well.',\n        image: \"/assets/img/detail-5.jpg\",\n        video: \"http://distribution.bbb3d.renderfarming.net/video/mp4/bbb_sunflower_1080p_30fps_normal.mp4\",\n      }\n    };\n\n    this.renderContent = this.renderContent.bind(this);\n  }\n\n  renderContent() {\n    if (this.state.data.type === \"image\") {\n      return <SingleLightbox thumb={this.state.data.image} large={this.state.data.image} className=\"social-header card-img\" />\n    } else if (this.state.data.type === \"video\") {\n      return (\n        <VideoPlayer autoplay={false} controls={true} className=\"social-header video-js card-img video-content\" poster={this.state.data.image}\n          sources={[{\n            src: this.state.data.video,\n            type: 'video/mp4'\n        }]} />\n      )\n    }\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <Fragment>\n        <ChannelPageHeading\n          heading=\"menu.channel\"\n          match={match}\n        />\n        {/* <Row>\n          <Colxx xxs=\"12\" className=\"mb-4\">\n            <p>\n              <IntlMessages id=\"menu.channel\" />\n            </p>\n          </Colxx>\n        </Row> */}\n        <Row>\n          <Colxx xxs=\"12\" className=\"mb-5\">\n            <Card>\n              {/* <SingleLightbox thumb=\"/assets/img/social-header.jpg\" large=\"/assets/img/social-header.jpg\" className=\"social-header card-img\" /> */}\n              {this.renderContent()}\n            </Card>\n          </Colxx>\n          <Colxx xxs=\"12\" className=\"col-left\">\n            <SingleLightbox thumb={this.state.data.profilePic} large={this.state.data.profilePic} className=\"img-thumbnail card-img social-profile-img\" />\n            <Card className=\"mb-4\">\n              <CardBody>\n                <div className=\"text-center pt-4\">\n                  <p className=\"list-item-heading pt-2\">{this.state.data.name}</p>\n                </div>\n                <p className=\"text-muted text-small mb-2\"><IntlMessages id=\"크리레이터 소개 (약력 등)\" /></p>\n                <Input className=\"form-control mb-3\" type=\"textarea\" name=\"text\" id=\"exampleText\" defaultValue={this.state.data.detail}/>\n                <p className=\"text-muted text-small mb-2\"><IntlMessages id=\"pages.tags\" /></p>\n                <TagsInput />\n                <p className=\"text-muted text-small mt-3 mb-2\"><IntlMessages id=\"menu.contact\" /></p>\n                <div className=\"social-icons\">\n                  <ul className=\"list-unstyled list-inline\">\n                    <li className=\"list-inline-item\">\n                      <NavLink to=\"#\"><i className=\"simple-icon-social-facebook\"></i></NavLink>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <NavLink to=\"#\"><i className=\"simple-icon-social-twitter\"></i></NavLink>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <NavLink to=\"#\"><i className=\"simple-icon-social-instagram\"></i></NavLink>\n                    </li>\n                  </ul>\n                </div>\n              </CardBody>\n            </Card>\n          </Colxx>\n        </Row>\n        {/* <Row>\n          <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n            <Card>\n              <CardBody>\n                <CardTitle>\n                  <IntlMessages id=\"크리에이터 소개 영상\" />\n                </CardTitle>\n                <VideoPlayer autoplay={false} controls={true}\n                  className=\"video-js card-img video-content mb-3\"\n                  poster={\"/assets/img/subpage-video-poster.jpg\"}\n                  sources={[{\n                    src: \"http://distribution.bbb3d.renderfarming.net/video/mp4/bbb_sunflower_1080p_30fps_normal.mp4\",\n                    type: 'video/mp4'\n                  }]} />\n              </CardBody>\n            </Card>\n          </Colxx>\n          <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n            <Card>\n              <CardBody>\n                <CardTitle>\n                  <IntlMessages id=\"크리에이터 채널 소개 배너\" />\n                </CardTitle>\n                <SingleLightbox thumb={\"/assets/img/detail-5.jpg\"} large={\"/assets/img/detail-5.jpg\"} className=\"img-fluid border-0 border-radius mb-3\" />\n              </CardBody>\n            </Card>\n          </Colxx>\n        </Row>\n        <Row>\n          <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n            <Card>\n              <CardBody>\n                <CardTitle>\n                  <IntlMessages id=\"크리레이터 소개 (약력 등)\" />\n                </CardTitle>\n                <Input className=\"form-control\" type=\"textarea\" name=\"text\" id=\"exampleText\" />\n              </CardBody>\n            </Card>\n          </Colxx>\n          <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n            <Card>\n              <CardBody>\n                <CardTitle>\n                  <IntlMessages id=\"pages.tags\" />\n                </CardTitle>\n                <TagsInput />\n              </CardBody>\n            </Card>\n          </Colxx>\n        </Row> */}\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  console.log(match)\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (match.path.includes('/studio/class')) {\r\n    paths = paths.filter(x => x.indexOf(\"classes\") === -1);\r\n  } else if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  console.log(paths)\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n"],"sourceRoot":""}