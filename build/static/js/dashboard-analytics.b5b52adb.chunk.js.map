{"version":3,"sources":["containers/dashboards/SalesChartCard.js","containers/dashboards/ConversionRatesChartCard.js","containers/dashboards/SortableStaticticsRow.js","containers/dashboards/ProductCategoriesPolarArea.js","containers/dashboards/ProductCategoriesDoughnut.js","data/profileStatuses.js","containers/dashboards/ProfileStatuses.js","containers/dashboards/OrderStockRadarChart.js","views/studio/dashboards/analytics.js","containers/navs/Breadcrumb.js","data/charts.js","components/charts/util.js","components/charts/config.js","components/charts/Area.js","components/charts/Bar.js","components/charts/Doughnut.js","components/charts/Line.js","components/charts/Pie.js","components/charts/PolarArea.js","components/charts/Radar.js","components/charts/Scatter.js","components/charts/SmallLine.js","helpers/ThemeColors.js","containers/dashboards/WebsiteVisitsChartCard.js","components/cards/RadialProgressCard.js","containers/dashboards/SmallLineCharts.js"],"names":["SalesChartCard","className","color","right","id","shadow","data","lineChartData","ConversionRatesChartCard","caret","outline","conversionChartData","SortableStaticticsRow","messages","options","handle","xl","lg","title","percent","isSortable","ProductCategoriesPolarArea","chartClass","polarAreaChartData","ProductCategoriesDoughnut","doughnutChartData","total","status","ProfileStatuses","cardClass","Card","CardBody","CardTitle","IntlMessages","map","s","index","key","Progress","value","OrderStockRadarChart","radarChartData","DashboardAnalytics","Component","render","this","props","intl","Row","xxs","Breadcrumb","heading","match","sm","md","WebsiteVisitsChartCard","SmallLineCharts","itemClass","injectIntl","getMenuTitle","sub","getUrl","path","split","BreadcrumbItems","console","log","substr","paths","includes","filter","x","indexOf","length","active","to","BreadcrumbContainer","colors","ThemeColors","labels","datasets","label","borderColor","themeColor1","pointBackgroundColor","foregroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","fill","borderWidth","themeColor2","themeColor3","backgroundColor","themeColor1_10","themeColor2_10","themeColor3_10","areaChartData","smallChartData1","datalabels","align","anchor","smallChartData2","smallChartData3","smallChartData4","chartTooltip","titleFontColor","primaryColor","separatorColor","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","centerTextPlugin","afterDatasetsUpdate","chart","beforeDraw","width","chartArea","height","bottom","ctx","restore","activeLabel","activeValue","dataset","meta","_meta","Object","keys","activePercentage","parseFloat","toFixed","legend","legendItems","hidden","pointAvailable","pointIndex","pointDataIndex","font","fillStyle","textBaseline","text","textX","Math","round","measureText","textY","fillText","text2","textX2","textY2","save","beforeEvent","event","firstPoint","getElementAtEvent","_index","_datasetIndex","lineChartOptions","display","responsive","maintainAspectRatio","tooltips","plugins","scales","yAxes","gridLines","lineWidth","drawBorder","ticks","beginAtZero","stepSize","min","max","padding","xAxes","polarAreaChartOptions","position","usePointStyle","fontSize","scale","areaChartOptions","radarChartOptions","doughnutChartOptions","cutoutPercentage","layout","smallLineChartOptions","left","top","Area","React","constructor","super","Chart","defaults","lineWithShadow","line","controllers","extend","draw","ease","prototype","call","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","stroke","apply","arguments","ref","chart_instance","type","Doughnut","doughnutWithShadow","doughnut","Line","PolarArea","polarWithShadow","polarArea","radar","Radar","radarWithShadow","addCommas","nStr","x1","x2","rgx","test","replace","SmallLine","changeState","bind","state","currentValue","currentLabel","lineWithLine","tooltip","_active","activePoint","tooltipPosition","topY","bottomY","beginPath","moveTo","lineTo","strokeStyle","yLabel","xLabel","setState","intersect","enabled","custom","tooltipModel","dataPoints","body","lines","afterInit","rootStyle","getComputedStyle","document","getPropertyValue","trim","themeColor4","themeColor5","themeColor6","themeColor4_10","themeColor5_10","themeColor6_10","controls","RadialProgressCard","strokeWidth"],"mappings":"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","file":"static/js/dashboard-analytics.b5b52adb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu\r\n} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport {LineChart} from \"../../components/charts\"\r\n\r\nimport { lineChartData } from \"../../data/charts\";\r\n\r\nconst SalesChartCard = () => {\r\n  return (\r\n    <Card>\r\n      <div className=\"position-absolute card-top-buttons\">\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle color=\"\" className=\"btn btn-header-light icon-button\">\r\n            <i className=\"simple-icon-refresh\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu right>\r\n            <DropdownItem>\r\n              <IntlMessages id=\"dashboards.sales\" />\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n              <IntlMessages id=\"dashboards.orders\" />\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n              <IntlMessages id=\"dashboards.refunds\" />\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <IntlMessages id=\"dashboards.sales\" />\r\n        </CardTitle>\r\n        <div className=\"dashboard-line-chart\">\r\n          <LineChart shadow data={lineChartData} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesChartCard;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu\r\n} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport {AreaChart} from \"../../components/charts\";\r\n\r\nimport { conversionChartData } from \"../../data/charts\";\r\n\r\nconst ConversionRatesChartCard = () => {\r\n  return (\r\n    <Card className=\"dashboard-filled-line-chart\">\r\n      <CardBody>\r\n        <div className=\"float-left float-none-xs\">\r\n          <div className=\"d-inline-block\">\r\n            <h5 className=\"d-inline\">\r\n              <IntlMessages id=\"dashboards.conversion-rates\" />\r\n            </h5>\r\n            <span className=\"text-muted text-small d-block\">\r\n              <IntlMessages id=\"dashboards.per-session\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btn-group float-right float-none-xs mt-2\">\r\n          <UncontrolledDropdown>\r\n            <DropdownToggle caret color=\"secondary\" className=\"btn-xs\" outline>\r\n              <IntlMessages id=\"dashboards.this-week\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem>\r\n                <IntlMessages id=\"dashboards.last-week\" />\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <IntlMessages id=\"dashboards.this-month\" />\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </CardBody>\r\n\r\n      <div className=\"chart card-body pt-0\">\r\n        <AreaChart shadow data={conversionChartData} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ConversionRatesChartCard;\r\n","import React from 'react'\r\nimport Sortable from \"react-sortablejs\";\r\n\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport RadialProgressCard from \"../../components/cards/RadialProgressCard\";\r\n\r\n\r\nconst SortableStaticticsRow = ({messages}) => {\r\n  return (\r\n    <Sortable options={{handle: \".handle\"}} className=\"row\">\r\n    <Colxx xl=\"3\" lg=\"6\" className=\"mb-4\">\r\n      <RadialProgressCard\r\n        title={messages[\"dashboards.payment-status\"]}\r\n        percent={64}\r\n        isSortable={true}\r\n      />\r\n    </Colxx>\r\n    <Colxx xl=\"3\" lg=\"6\" className=\"mb-4\">\r\n      <RadialProgressCard\r\n        title={messages[\"dashboards.work-progress\"]}\r\n        percent={75}\r\n        isSortable={true}\r\n      />\r\n    </Colxx>\r\n    <Colxx xl=\"3\" lg=\"6\" className=\"mb-4\">\r\n      <RadialProgressCard\r\n        title={messages[\"dashboards.tasks-completed\"]}\r\n        percent={32}\r\n        isSortable={true}\r\n      />\r\n    </Colxx>\r\n    <Colxx xl=\"3\" lg=\"6\" className=\"mb-4\">\r\n      <RadialProgressCard\r\n        title={messages[\"dashboards.payments-done\"]}\r\n        percent={45}\r\n        isSortable={true}\r\n      />\r\n    </Colxx>\r\n  </Sortable>\r\n  )\r\n}\r\nexport default SortableStaticticsRow\r\n","import React from \"react\";\r\nimport {  Card,  CardBody,  CardTitle} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport {PolarAreaChart} from \"../../components/charts\"\r\n\r\nimport { polarAreaChartData } from \"../../data/charts\";\r\n\r\nconst ProductCategoriesPolarArea = ({chartClass=\"chart-container\"}) => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>\r\n        <IntlMessages id=\"dashboards.product-categories\" />\r\n        </CardTitle>\r\n        <div className={chartClass}>\r\n          <PolarAreaChart shadow data={polarAreaChartData} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCategoriesPolarArea;\r\n","import React from \"react\";\r\nimport {  Card,  CardBody,  CardTitle} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport {DoughnutChart} from \"../../components/charts\"\r\n\r\nimport { doughnutChartData } from \"../../data/charts\";\r\n\r\nconst ProductCategoriesDoughnut = () => {\r\n  return (\r\n    <Card className=\"h-100\">\r\n      <CardBody>\r\n        <CardTitle>\r\n        <IntlMessages id=\"dashboards.product-categories\" />\r\n        </CardTitle>\r\n        <div className=\"dashboard-donut-chart\" >\r\n          <DoughnutChart shadow data={doughnutChartData} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCategoriesDoughnut;\r\n","const data = [\r\n  {\r\n    title: 'Basic Information',\r\n    total: 18,\r\n    status: 12\r\n  },\r\n  {\r\n    title: 'Portfolio',\r\n    total: 8,\r\n    status: 1\r\n  },\r\n  {\r\n    title: 'Billing Details',\r\n    total: 6,\r\n    status: 2\r\n  },\r\n  {\r\n    title: 'Interests',\r\n    total: 10,\r\n    status: 0\r\n  },\r\n  {\r\n    title: 'Legal Documents',\r\n    total: 2,\r\n    status: 1\r\n  }\r\n]\r\nexport default data\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardTitle, Progress } from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport data from \"../../data/profileStatuses\";\r\n\r\nconst ProfileStatuses = ({cardClass=\"h-100\"}) => {\r\n  return (\r\n    <Card className={cardClass}>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <IntlMessages id=\"dashboards.profile-status\" />\r\n        </CardTitle>\r\n        {data.map((s, index) => {\r\n          return (\r\n            <div key={index} className=\"mb-4\">\r\n              <p className=\"mb-2\">\r\n                {s.title}\r\n                <span className=\"float-right text-muted\">\r\n                  {s.status}/{s.total}\r\n                </span>\r\n              </p>\r\n              <Progress value={(s.status / s.total) * 100} />\r\n            </div>\r\n          );\r\n        })}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default ProfileStatuses;\r\n","import React from \"react\";\r\nimport {  Card,  CardBody,  CardTitle} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport {RadarChart} from \"../../components/charts\"\r\n\r\nimport { radarChartData } from \"../../data/charts\";\r\n\r\nconst OrderStockRadarChart = () => {\r\n  return (\r\n    <Card className=\"h-100\">\r\n      <CardBody>\r\n        <CardTitle>\r\n        <IntlMessages id=\"dashboards.order-stock\" />\r\n        </CardTitle>\r\n        <div className=\"chart-container\" >\r\n          <RadarChart shadow data={radarChartData} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OrderStockRadarChart;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row } from \"reactstrap\";\r\n\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\n\r\nimport ProfileStatuses from \"../../../containers/dashboards/ProfileStatuses\";\r\nimport SortableStaticticsRow from \"../../../containers/dashboards/SortableStaticticsRow\";\r\nimport SmallLineCharts from \"../../../containers/dashboards/SmallLineCharts\";\r\nimport SalesChartCard from \"../../../containers/dashboards/SalesChartCard\";\r\nimport ProductCategoriesDoughnut from \"../../../containers/dashboards/ProductCategoriesDoughnut\";\r\nimport WebsiteVisitsChartCard from \"../../../containers/dashboards/WebsiteVisitsChartCard\";\r\nimport ConversionRatesChartCard from \"../../../containers/dashboards/ConversionRatesChartCard\";\r\nimport OrderStockRadarChart from \"../../../containers/dashboards/OrderStockRadarChart\";\r\nimport ProductCategoriesPolarArea from \"../../../containers/dashboards/ProductCategoriesPolarArea\";\r\n\r\nclass DashboardAnalytics extends Component {\r\n  render() {\r\n    const {messages} = this.props.intl;\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb heading=\"menu.analytics\" match={this.props.match}/>\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx sm=\"12\" md=\"6\" className=\"mb-4\">\r\n            <WebsiteVisitsChartCard/>\r\n          </Colxx>\r\n          <Colxx sm=\"12\" md=\"6\" className=\"mb-4\">\r\n            <ConversionRatesChartCard/>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Colxx xl=\"4\" lg=\"6\" md=\"12\" className=\"mb-4\">\r\n           <ProductCategoriesDoughnut/>\r\n          </Colxx>\r\n          <Colxx xl=\"4\" lg=\"6\" md=\"12\" className=\"mb-4\">\r\n           <ProfileStatuses cardClass=\"dashboard-progress\"/>\r\n          </Colxx>\r\n          <Colxx xl=\"4\" lg=\"12\" md=\"12\">\r\n           <SmallLineCharts itemClass=\"dashboard-small-chart-analytics\"/>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <SortableStaticticsRow messages={messages}/>\r\n\r\n        <Row>\r\n          <Colxx xxs=\"12\" lg=\"6\" className=\"mb-4\">\r\n            <OrderStockRadarChart/>\r\n          </Colxx>\r\n          <Colxx xxs=\"12\" lg=\"6\" className=\"mb-4\">\r\n            <ProductCategoriesPolarArea/>\r\n          </Colxx>\r\n        </Row>\r\n        \r\n        <Row>\r\n          <Colxx xxs=\"12\" className=\"mb-4\">\r\n            <SalesChartCard/>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(DashboardAnalytics);","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  console.log(match)\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (match.path.includes('/studio/class')) {\r\n    paths = paths.filter(x => x.indexOf(\"classes\") === -1);\r\n  } else if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  console.log(paths)\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import { ThemeColors } from '../helpers/ThemeColors'\r\nconst colors = ThemeColors()\r\n\r\nexport const lineChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [54, 63, 60, 65, 60, 68, 60],\r\n      borderColor: colors.themeColor1,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 6,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 8,\r\n      fill: false\r\n    }\r\n  ]\r\n}\r\n\r\nexport const polarAreaChartData = {\r\n  labels: ['Sales', 'Orders', \"Stock\"],\r\n  datasets: [\r\n    {\r\n      data: [80, 90, 70],\r\n      borderWidth: 2,\r\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\r\n      backgroundColor: [\r\n        colors.themeColor1_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor3_10\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const areaChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [54, 63, 60, 65, 60, 68, 60],\r\n      borderColor: colors.themeColor1,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 4,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 5,\r\n      fill: true,\r\n      borderWidth: 2,\r\n      backgroundColor: colors.themeColor1_10\r\n    }\r\n  ]\r\n}\r\n\r\nexport const scatterChartData = {\r\n  datasets: [\r\n    {\r\n      borderWidth: 2,\r\n      label: 'Cakes',\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [\r\n        { x: 62, y: -78 },\r\n        { x: -0, y: 74 },\r\n        { x: -67, y: 45 },\r\n        { x: -26, y: -43 },\r\n        { x: -15, y: -30 },\r\n        { x: 65, y: -68 },\r\n        { x: -28, y: -61 }\r\n      ]\r\n    },\r\n    {\r\n      borderWidth: 2,\r\n      label: 'Desserts',\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [\r\n        { x: 79, y: 62 },\r\n        { x: 62, y: 0 },\r\n        { x: -76, y: -81 },\r\n        { x: -51, y: 41 },\r\n        { x: -9, y: 9 },\r\n        { x: 72, y: -37 },\r\n        { x: 62, y: -26 }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const barChartData = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n  datasets: [\r\n    {\r\n      label: 'Cakes',\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [456, 479, 324, 569, 702, 600],\r\n      borderWidth: 2\r\n    },\r\n    {\r\n      label: 'Desserts',\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [364, 504, 605, 400, 345, 320],\r\n      borderWidth: 2\r\n    }\r\n  ]\r\n}\r\n\r\nexport const radarChartData = {\r\n  datasets: [\r\n    {\r\n      label: 'Stock',\r\n      borderWidth: 2,\r\n      pointBackgroundColor: colors.themeColor1,\r\n      borderColor: colors.themeColor1,\r\n      backgroundColor: colors.themeColor1_10,\r\n      data: [80, 90, 70]\r\n    },\r\n    {\r\n      label: 'Order',\r\n      borderWidth: 2,\r\n      pointBackgroundColor: colors.themeColor2,\r\n      borderColor: colors.themeColor2,\r\n      backgroundColor: colors.themeColor2_10,\r\n      data: [68, 80, 95]\r\n    }\r\n  ],\r\n  labels: ['Cakes', 'Desserts', 'Cupcakes']\r\n}\r\n\r\nexport const pieChartData = {\r\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\r\n      backgroundColor: [\r\n        colors.themeColor1_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor3_10\r\n      ],\r\n      borderWidth: 2,\r\n      data: [15, 25, 20]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const doughnutChartData = {\r\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      borderColor: [colors.themeColor3, colors.themeColor2, colors.themeColor1],\r\n      backgroundColor: [\r\n        colors.themeColor3_10,\r\n        colors.themeColor2_10,\r\n        colors.themeColor1_10\r\n      ],\r\n      borderWidth: 2,\r\n      data: [15, 25, 20]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const smallChartData1 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [1250, 1300, 1550, 921, 1810, 1106, 1610],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end'\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\nexport const smallChartData2 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Pending Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [115, 120, 300, 222, 105, 85, 36],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end'\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\nexport const smallChartData3 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [350, 452, 762, 952, 630, 85, 158],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end'\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\nexport const smallChartData4 = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: 'Total Orders',\r\n      borderColor: colors.themeColor1,\r\n      pointBorderColor: colors.themeColor1,\r\n      pointHoverBackgroundColor: colors.themeColor1,\r\n      pointHoverBorderColor: colors.themeColor1,\r\n      pointRadius: 2,\r\n      pointBorderWidth: 3,\r\n      pointHoverRadius: 2,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      data: [200, 452, 250, 630, 125, 85, 20],\r\n      datalabels: {\r\n        align: 'end',\r\n        anchor: 'end'\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\nexport const conversionChartData = {\r\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: [65, 60, 68, 60, 58, 63, 60],\r\n      borderColor: colors.themeColor2,\r\n      pointBackgroundColor: colors.foregroundColor,\r\n      pointBorderColor: colors.themeColor2,\r\n      pointHoverBackgroundColor: colors.themeColor2,\r\n      pointHoverBorderColor: colors.foregroundColor,\r\n      pointRadius: 4,\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 5,\r\n      fill: true,\r\n      borderWidth: 2,\r\n      backgroundColor: colors.themeColor2_10\r\n    }\r\n  ]\r\n}\r\n","\r\nimport { ThemeColors } from \"../../helpers/ThemeColors\";\r\n\r\nexport const chartTooltip = {\r\n    backgroundColor: ThemeColors().foregroundColor,\r\n    titleFontColor: ThemeColors().primaryColor,\r\n    borderColor: ThemeColors().separatorColor,\r\n    borderWidth: 0.5,\r\n    bodyFontColor: ThemeColors().primaryColor,\r\n    bodySpacing: 10,\r\n    xPadding: 15,\r\n    yPadding: 15,\r\n    cornerRadius: 0.15\r\n  }\r\n  \r\n  export const centerTextPlugin = {\r\n    afterDatasetsUpdate: function (chart) {},\r\n    beforeDraw: function (chart) {\r\n      var width = chart.chartArea.right\r\n      var height = chart.chartArea.bottom\r\n      var ctx = chart.chart.ctx\r\n      ctx.restore()\r\n  \r\n      var activeLabel = chart.data.labels[0]\r\n      var activeValue = chart.data.datasets[0].data[0]\r\n      var dataset = chart.data.datasets[0]\r\n      var meta = dataset._meta[Object.keys(dataset._meta)[0]]\r\n      var total = meta.total\r\n  \r\n      var activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1))\r\n      activePercentage = chart.legend.legendItems[0].hidden\r\n        ? 0\r\n        : activePercentage\r\n  \r\n      if (chart.pointAvailable) {\r\n        activeLabel = chart.data.labels[chart.pointIndex]\r\n        activeValue =\r\n          chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex]\r\n  \r\n        dataset = chart.data.datasets[chart.pointDataIndex]\r\n        meta = dataset._meta[Object.keys(dataset._meta)[0]]\r\n        total = meta.total\r\n        activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1))\r\n        activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\r\n          ? 0\r\n          : activePercentage\r\n      }\r\n  \r\n      ctx.font = '36px Nunito, sans-serif'\r\n      ctx.fillStyle = ThemeColors().primaryColor\r\n      ctx.textBaseline = 'middle'\r\n  \r\n      var text = activePercentage + '%'\r\n      var textX = Math.round((width - ctx.measureText(text).width) / 2)\r\n      var textY = height / 2\r\n      ctx.fillText(text, textX, textY)\r\n  \r\n      ctx.font = '14px Nunito, sans-serif'\r\n      ctx.textBaseline = 'middle'\r\n  \r\n      var text2 = activeLabel\r\n      var textX2 = Math.round((width - ctx.measureText(text2).width) / 2)\r\n      var textY2 = height / 2 - 30\r\n      ctx.fillText(text2, textX2, textY2)\r\n  \r\n      ctx.save()\r\n    },\r\n    beforeEvent: function (chart, event, options) {\r\n      var firstPoint = chart.getElementAtEvent(event)[0]\r\n  \r\n      if (firstPoint) {\r\n        chart.pointIndex = firstPoint._index\r\n        chart.pointDataIndex = firstPoint._datasetIndex\r\n        chart.pointAvailable = true\r\n      }\r\n    }\r\n  }\r\n  ","import { chartTooltip } from './util'\r\n\r\nexport const lineChartOptions = {\r\n  legend: {\r\n    display: false\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  tooltips: chartTooltip,\r\n  plugins: {\r\n    datalabels: {\r\n      display: false\r\n    }\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 5,\r\n          min: 50,\r\n          max: 70,\r\n          padding: 20\r\n        }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\nexport const polarAreaChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12\r\n    }\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scale: {\r\n    ticks: {\r\n      display: false\r\n    }\r\n  },\r\n  plugins: {\r\n    datalabels: {\r\n      display: false\r\n    }\r\n  },\r\n  tooltips: chartTooltip\r\n}\r\n\r\nexport const areaChartOptions = {\r\n  legend: {\r\n    display: false\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  tooltips: chartTooltip,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 5,\r\n          min: 50,\r\n          max: 70,\r\n          padding: 20\r\n        }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nexport const scatterChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12\r\n    }\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 20,\r\n          min: -80,\r\n          max: 80,\r\n          padding: 20\r\n        }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  tooltips: chartTooltip\r\n}\r\n\r\nexport const barChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12\r\n    }\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n          lineWidth: 1,\r\n          color: 'rgba(0,0,0,0.1)',\r\n          drawBorder: false\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          stepSize: 100,\r\n          min: 300,\r\n          max: 800,\r\n          padding: 20\r\n        }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  tooltips: chartTooltip\r\n}\r\n\r\nexport const radarChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12\r\n    }\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scale: {\r\n    ticks: {\r\n      display: false\r\n    }\r\n  },\r\n  tooltips: chartTooltip\r\n}\r\n\r\nexport const pieChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12\r\n    }\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: false\r\n  },\r\n  layout: {\r\n    padding: {\r\n      bottom: 20\r\n    }\r\n  },\r\n  tooltips: chartTooltip\r\n}\r\n\r\nexport const doughnutChartOptions = {\r\n  legend: {\r\n    position: 'bottom',\r\n    labels: {\r\n      padding: 30,\r\n      usePointStyle: true,\r\n      fontSize: 12\r\n    }\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  title: {\r\n    display: false\r\n  },\r\n  cutoutPercentage: 80,\r\n  layout: {\r\n    padding: {\r\n      bottom: 20\r\n    }\r\n  },\r\n  tooltips: chartTooltip\r\n}\r\n\r\nexport const smallLineChartOptions = {\r\n  layout: {\r\n    padding: {\r\n      left: 5,\r\n      right: 5,\r\n      top: 10,\r\n      bottom: 10\r\n    }\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: false\r\n      }\r\n    ]\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { areaChartOptions } from \"./config\";\r\n\r\nexport default class Area extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.lineWithShadow = Chart.defaults.line;\r\n      Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.line.prototype.draw.call(this, ease);\r\n          var ctx = this.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\r\n          ctx.shadowBlur = 10;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 10;\r\n          ctx.responsive = true;\r\n          ctx.stroke();\r\n          Chart.controllers.line.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"lineWithShadow\" : \"line\"}\r\n        options={{\r\n          ...areaChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { barChartOptions } from \"./config\";\r\n\r\nexport default class Bar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.barWithShadow = Chart.defaults.bar;\r\n      Chart.controllers.barWithShadow = Chart.controllers.bar.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.bar.prototype.draw.call(this, ease);\r\n          var ctx = this.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\r\n          ctx.shadowBlur = 7;\r\n          ctx.shadowOffsetX = 5;\r\n          ctx.shadowOffsetY = 7;\r\n          ctx.responsive = true;\r\n          Chart.controllers.bar.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"barWithShadow\" : \"bar\"}\r\n        options={{\r\n          ...barChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { centerTextPlugin } from \"./util\";\r\nimport { doughnutChartOptions } from \"./config\";\r\n\r\nexport default class Doughnut extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\r\n      Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.doughnut.prototype.draw.call(this, ease);\r\n          let ctx = this.chart.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\r\n          ctx.shadowBlur = 10;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 10;\r\n          ctx.responsive = true;\r\n          Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"doughnutWithShadow\" : \"doughnut\"}\r\n        plugins={[centerTextPlugin]}\r\n        options={{\r\n          ...doughnutChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { lineChartOptions } from \"./config\";\r\n\r\nexport default class Line extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.lineWithShadow = Chart.defaults.line;\r\n      Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.line.prototype.draw.call(this, ease);\r\n          var ctx = this.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\r\n          ctx.shadowBlur = 10;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 10;\r\n          ctx.responsive = true;\r\n          ctx.stroke();\r\n          Chart.controllers.line.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"lineWithShadow\" : \"line\"}\r\n        options={{\r\n          ...lineChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { pieChartOptions } from \"./config\";\r\n\r\nexport default class Pie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.pieWithShadow = Chart.defaults.pie;\r\n      Chart.controllers.pieWithShadow = Chart.controllers.pie.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.pie.prototype.draw.call(this, ease);\r\n          let ctx = this.chart.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\r\n          ctx.shadowBlur = 10;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 10;\r\n          ctx.responsive = true;\r\n          Chart.controllers.pie.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"pieWithShadow\" : \"pie\"}\r\n        options={{\r\n          ...pieChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { polarAreaChartOptions } from \"./config\";\r\n\r\nexport default class PolarArea extends React.Component {\r\n   constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.polarWithShadow = Chart.defaults.polarArea;\r\n      Chart.controllers.polarWithShadow = Chart.controllers.polarArea.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.radar.prototype.draw.call(this, ease);\r\n          let ctx = this.chart.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\r\n          ctx.shadowBlur = 7;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 7;\r\n          ctx.responsive = true;\r\n          Chart.controllers.radar.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data,shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow?\"polarWithShadow\":\"polarArea\"}\r\n        options={{\r\n          ...polarAreaChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { radarChartOptions } from \"./config\";\r\n\r\nexport default class Radar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.radarWithShadow = Chart.defaults.radar;\r\n      Chart.controllers.radarWithShadow = Chart.controllers.radar.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.radar.prototype.draw.call(this, ease);\r\n          let ctx = this.chart.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\r\n          ctx.shadowBlur = 7;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 7;\r\n          ctx.responsive = true;\r\n          Chart.controllers.radar.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"radarWithShadow\" : \"radar\"}\r\n        options={{\r\n          ...radarChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { scatterChartOptions } from \"./config\";\r\n\r\nexport default class Scatter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.scatterWithShadow = Chart.defaults.scatter;\r\n      Chart.controllers.scatterWithShadow = Chart.controllers.scatter.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.scatter.prototype.draw.call(this, ease);\r\n          let ctx = this.chart.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.2)\";\r\n          ctx.shadowBlur = 7;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 7;\r\n          ctx.responsive = true;\r\n          Chart.controllers.scatter.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"scatterWithShadow\" : \"scatter\"}\r\n        options={{\r\n          ...scatterChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport {smallLineChartOptions} from \"./config\"\r\n\r\nconst addCommas = nStr => {\r\n  nStr += \"\";\r\n  var x = nStr.split(\".\");\r\n  var x1 = x[0];\r\n  var x2 = x.length > 1 ? \".\" + x[1] : \"\";\r\n  var rgx = /(\\d+)(\\d{3})/;\r\n  while (rgx.test(x1)) {\r\n    x1 = x1.replace(rgx, \"$1,$2\");\r\n  }\r\n  return x1 + x2;\r\n};\r\n\r\nexport default class SmallLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeState = this.changeState.bind(this);\r\n    this.state = {\r\n      currentValue: \"\",\r\n      currentLabel: \"\"\r\n    };\r\n    Chart.defaults.lineWithLine = Chart.defaults.line;\r\n    Chart.controllers.lineWithLine = Chart.controllers.line.extend({\r\n      draw: function(ease) {\r\n        Chart.controllers.line.prototype.draw.call(this, ease);\r\n\r\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n          var activePoint = this.chart.tooltip._active[0];\r\n          var ctx = this.chart.ctx;\r\n          var x = activePoint.tooltipPosition().x;\r\n          var topY = this.chart.scales[\"y-axis-0\"].top;\r\n          var bottomY = this.chart.scales[\"y-axis-0\"].bottom;\r\n\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, topY);\r\n          ctx.lineTo(x, bottomY);\r\n          ctx.lineWidth = 1;\r\n          ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  changeState(yLabel, xLabel) {\r\n    this.setState({ currentValue: yLabel, currentLabel: xLabel });\r\n  }\r\n\r\n  render() {\r\n    const changeState = this.changeState;\r\n    const {data} = this.props\r\n    \r\n    return (\r\n      <Fragment>\r\n        <div>\r\n          <p className=\"lead color-theme-1 mb-1 value\">\r\n            {this.state.currentValue}\r\n          </p>\r\n          <p className=\"mb-0 label text-small\">{this.state.currentLabel}</p>\r\n        </div>\r\n        <div className=\"chart\">\r\n          <ChartComponent\r\n            ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n            type=\"lineWithLine\"\r\n            options={{\r\n              ...smallLineChartOptions,\r\n              tooltips: {\r\n                intersect: false,\r\n                enabled: false,\r\n                custom: function(tooltipModel) {\r\n                  if (tooltipModel && tooltipModel.dataPoints) {\r\n                    var yLabel = tooltipModel.dataPoints[0].yLabel;\r\n                    var xLabel = tooltipModel.dataPoints[0].xLabel;\r\n                    var label = tooltipModel.body[0].lines[0].split(\":\")[0];\r\n                    changeState(\"$\" + addCommas(yLabel), label + \"-\" + xLabel);\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n            plugins={[\r\n              {\r\n                afterInit: function(chart, options) {\r\n                  var yLabel = chart.data.datasets[0].data[0];\r\n                  var xLabel = chart.data.labels[0];\r\n                  var label = chart.data.datasets[0].label;\r\n                  changeState(\"$\" + addCommas(yLabel), label + \"-\" + xLabel);\r\n                }\r\n              }\r\n            ]}\r\n            data={data}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n"," export const ThemeColors = () => {\r\n     let rootStyle = getComputedStyle(document.body);\r\n     return {\r\n        themeColor1 : rootStyle.getPropertyValue(\"--theme-color-1\").trim(),\r\n        themeColor2 : rootStyle.getPropertyValue(\"--theme-color-2\").trim(),\r\n        themeColor3 : rootStyle.getPropertyValue(\"--theme-color-3\").trim(),\r\n        themeColor4 : rootStyle.getPropertyValue(\"--theme-color-4\").trim(),\r\n        themeColor5 : rootStyle.getPropertyValue(\"--theme-color-5\").trim(),\r\n        themeColor6 : rootStyle.getPropertyValue(\"--theme-color-6\").trim(),\r\n        themeColor1_10 : rootStyle.getPropertyValue(\"--theme-color-1-10\").trim(),\r\n        themeColor2_10 : rootStyle.getPropertyValue(\"--theme-color-2-10\").trim(),\r\n        themeColor3_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\r\n        themeColor4_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\r\n        themeColor5_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\r\n        themeColor6_10 : rootStyle.getPropertyValue(\"--theme-color-3-10\").trim(),\r\n        primaryColor: rootStyle.getPropertyValue(\"--primary-color\").trim(),\r\n        foregroundColor: rootStyle.getPropertyValue(\"--foreground-color\").trim(),\r\n        separatorColor: rootStyle.getPropertyValue(\"--separator-color\").trim()\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu\r\n} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { AreaChart } from \"../../components/charts\";\r\n\r\nimport { areaChartData } from \"../../data/charts\";\r\n\r\nconst WebsiteVisitsChartCard = ({ className = \"\", controls = true }) => {\r\n  return (\r\n    <Card className={`${className} dashboard-filled-line-chart`}>\r\n      <CardBody>\r\n        <div className=\"float-left float-none-xs\">\r\n          <div className=\"d-inline-block\">\r\n            <h5 className=\"d-inline\">\r\n              <IntlMessages id=\"dashboards.website-visits\" />\r\n            </h5>\r\n            <span className=\"text-muted text-small d-block\">\r\n              <IntlMessages id=\"dashboards.unique-visitors\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {controls && (\r\n          <div className=\"btn-group float-right float-none-xs mt-2\">\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\r\n                <IntlMessages id=\"dashboards.this-week\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  <IntlMessages id=\"dashboards.last-week\" />\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  <IntlMessages id=\"dashboards.this-month\" />\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        )}\r\n      </CardBody>\r\n\r\n      <div className=\"chart card-body pt-0\">\r\n        <AreaChart shadow data={areaChartData} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WebsiteVisitsChartCard;\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardTitle, CardHeader } from \"reactstrap\";\r\nimport {CircularProgressbar} from \"react-circular-progressbar\";\r\n\r\nconst RadialProgressCard = ({\r\n  title = \"title\",\r\n  percent = 50,\r\n  isSortable = false\r\n}) => {\r\n  return (\r\n    <Card>\r\n      {isSortable && (\r\n        <CardHeader className=\"p-0 position-relative\">\r\n          <div className=\"position-absolute handle card-icon\">\r\n            <i className=\"simple-icon-shuffle\" />\r\n          </div>\r\n        </CardHeader>\r\n      )}\r\n      <CardBody className=\"d-flex justify-content-between align-items-center\">\r\n        <CardTitle className=\"mb-0\">{title}</CardTitle>\r\n        <div className=\"progress-bar-circle\">\r\n          <CircularProgressbar\r\n            strokeWidth={4}\r\n            value={percent}\r\n            text={`${percent}%`}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default RadialProgressCard;\r\n","import React from \"react\";\r\nimport { Row, Card, CardBody } from \"reactstrap\";\r\n\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport  {SmallLineChart}  from \"../../components/charts\";\r\n\r\nimport {\r\n  smallChartData1,\r\n  smallChartData2,\r\n  smallChartData3,\r\n  smallChartData4\r\n} from \"../../data/charts\";\r\n\r\nconst SmallLineCharts = ({itemClass=\"dashboard-small-chart\"}) => {\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData1} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData2} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData3} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Colxx xxs=\"6\" className=\"mb-4\">\r\n        <Card className={itemClass}>\r\n          <CardBody>\r\n            <SmallLineChart data={smallChartData4} />\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SmallLineCharts;\r\n"],"sourceRoot":""}