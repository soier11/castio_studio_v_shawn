{"version":3,"sources":["components/common/VideoPlayer.js","containers/pages/DataListView.js","containers/pages/Pagination.js","containers/pages/ContextMenuContainer.js","containers/pages/ListPageHeading.js","containers/pages/ImageListView.js","containers/pages/ThumbListView.js","containers/pages/AddNewModal.js","views/studio/storege.js","containers/navs/Breadcrumb.js","components/common/CustomSelectInput.js"],"names":["VideoPlayer","React","Component","componentDidMount","this","player","videojs","videoNode","props","componentWillUnmount","dispose","render","data-vjs-player","ref","node","poster","className","memo","product","isSelect","collect","onCheckItem","servicePath","xxs","id","data","onClick","event","classnames","active","to","title","category","date","color","statusColor","pill","status","type","checked","onChange","label","Pagination","onChangePage","e","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","map","key","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","action","ListPageHeading","constructor","super","toggleDisplayOptions","setState","prevState","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","state","messages","intl","displayMode","changeDisplayMode","handleChangeSelectAll","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","match","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","orderOptions","pageSizes","toggleModal","heading","size","isOpen","toggle","caret","right","href","order","index","column","name","placeholder","onKeyPress","injectIntl","onClickItem","sm","lg","xl","top","alt","src","img","AddNewModal","modalOpen","categories","wrapClassName","backdrop","components","Input","CustomSelectInput","classNamePrefix","options","outline","apiUrl","StoregePage","find","x","dataListRender","mode","page","search","target","value","toLowerCase","tagName","parentElement","lastChecked","selectedItems","includes","filter","shiftKey","items","start","getIndex","end","slice","Math","min","max","item","Array","from","Set","document","activeElement","blur","isToggle","length","console","log","clickedProductId","select_id","select_item","Boolean","profilePic","image","video","modal","mouseTrap","require","isLoading","undefined","bind","unbind","arr","prop","axios","get","then","res","totalItem","autoplay","controls","sources","getMenuTitle","sub","getUrl","path","split","BreadcrumbItems","substr","paths","indexOf","BreadcrumbContainer","customProps","Object","assign","autoCorrect","autoCapitalize"],"mappings":"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","file":"static/js/storege.fd95c416.chunk.js","sourcesContent":["import React from 'react';\r\nimport videojs from 'video.js'\r\nexport default class VideoPlayer extends React.Component {\r\n  componentDidMount() {\r\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.player) {\r\n      this.player.dispose()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>    \r\n        <div data-vjs-player>\r\n          <video ref={ node => this.videoNode = node } poster={\"/assets/img/detail-1.jpg\"} className={this.props.className || \"\"}></video>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Card, CustomInput, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst DataListView = ({ product, isSelect, collect, onCheckItem=null, servicePath='/' }) => {\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem ? onCheckItem(event, product.id) : null}\r\n          className={classnames(\"d-flex flex-row\", {\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <NavLink to={servicePath} className=\"w-40 w-sm-100\">\r\n                <p className=\"list-item-heading mb-1 truncate\">\r\n                  {product.title}\r\n                </p>\r\n              </NavLink>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n              </p>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n              </p>\r\n              <div className=\"w-15 w-sm-100\">\r\n                <Badge color={product.statusColor} pill>\r\n                  {product.status}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            {onCheckItem &&\r\n              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                <CustomInput\r\n                  className=\"item-check mb-0\"\r\n                  type=\"checkbox\"\r\n                  id={`check_${product.id}`}\r\n                  checked={isSelect}\r\n                  onChange={() => {}}\r\n                  label=\"\"\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(DataListView);\r\n","import React from \"react\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass Pagination extends React.Component {\r\n  componentDidMount() {}\r\n  onChangePage(e) {\r\n    this.props.onChangePage(e);\r\n  }\r\n  render() {\r\n    const {\r\n      totalPage = 0,\r\n      currentPage = 1,\r\n      numberLimit = 5,\r\n      lastIsActive = true,\r\n      firstIsActive = true\r\n    } = this.props;\r\n\r\n    let startPoint = 1;\r\n    let endPoint = numberLimit;\r\n\r\n    if (numberLimit > totalPage) {\r\n      startPoint = 1;\r\n      endPoint = totalPage;\r\n    } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n      startPoint = 1;\r\n      endPoint = numberLimit;\r\n    } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n      startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n      endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n    } else {\r\n      startPoint = totalPage - (numberLimit - 1);\r\n      endPoint = totalPage;\r\n    }\r\n    startPoint = startPoint === 0 ? 1 : startPoint;\r\n    const points = [];\r\n    for (var i = startPoint; i <= endPoint; i++) {\r\n      points.push(i);\r\n    }\r\n\r\n    let firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    let prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    return totalPage > 1 ? (\r\n      <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n        <Nav className=\"pagination justify-content-center\">\r\n          {firstIsActive && (\r\n            <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link first\"\r\n                onClick={() => this.onChangePage(1)}>\r\n                <i className=\"simple-icon-control-start\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n\r\n          <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link prev\"\r\n              onClick={() => this.onChangePage(currentPage - 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {points.map(i => {\r\n            return (\r\n              <NavItem\r\n                key={i}\r\n                className={`page-item ${currentPage === i && \"active\"}`}>\r\n                <NavLink\r\n                  className=\"page-link\"\r\n                  onClick={() => this.onChangePage(i)}\r\n                >\r\n                  {i}\r\n                </NavLink>\r\n              </NavItem>\r\n            );\r\n          })}\r\n          <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link next\"\r\n              onClick={() => this.onChangePage(currentPage + 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {lastIsActive && (\r\n            <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link last\"\r\n                onClick={() => this.onChangePage(totalPage)}>\r\n                <i className=\"simple-icon-control-end\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n        </Nav>\r\n      </Colxx>\r\n    ) : (\r\n      <Colxx xxs=\"12\" className=\"mt-2\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\r\n\r\nconst ContextMenuContainer = ({onContextMenu,onContextMenuClick}) => {\r\n  return (\r\n    <ContextMenu\r\n      id=\"menu_id\"\r\n      onShow={e => onContextMenu(e, e.detail.data)}\r\n    >\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"copy\" }}>\r\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\r\n      </MenuItem>\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"move\" }}>\r\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\r\n      </MenuItem>\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"delete\" }}>\r\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\r\n      </MenuItem>\r\n    </ContextMenu>\r\n  );\r\n};\r\n\r\nexport default ContextMenuContainer;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  ButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  CustomInput,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../navs/Breadcrumb';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  DataListIcon,\r\n  ThumbListIcon,\r\n  ImageListIcon,\r\n} from '../../components/svg';\r\nclass ListPageHeading extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      displayOptionsIsOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState((prevState) => ({\r\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen,\r\n    }));\r\n  };\r\n  toggleSplit = () => {\r\n    this.setState((prevState) => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    const {\r\n      displayMode,\r\n      changeDisplayMode,\r\n      handleChangeSelectAll,\r\n      changeOrderBy,\r\n      changePageSize,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      match,\r\n      startIndex,\r\n      endIndex,\r\n      selectedItemsLength,\r\n      itemsLength,\r\n      onSearchKey,\r\n      orderOptions,\r\n      pageSizes,\r\n      toggleModal,\r\n      heading,\r\n    } = this.props;\r\n\r\n    const { displayOptionsIsOpen, dropdownSplitOpen } = this.state;\r\n    return (\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <div className=\"mb-2\">\r\n            <h1>\r\n              <IntlMessages id={heading} />\r\n            </h1>\r\n\r\n            <div className=\"text-zero top-right-button-container\">\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                className=\"top-right-button\"\r\n                onClick={() => toggleModal()}>\r\n                <IntlMessages id=\"pages.add-file\" />\r\n              </Button>\r\n              {'  '}\r\n              <ButtonDropdown\r\n                isOpen={dropdownSplitOpen}\r\n                toggle={this.toggleSplit}>\r\n                <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\r\n                  <CustomInput\r\n                    className=\"custom-checkbox mb-0 d-inline-block\"\r\n                    type=\"checkbox\"\r\n                    id=\"checkAll\"\r\n                    checked={selectedItemsLength >= itemsLength}\r\n                    onChange={() => handleChangeSelectAll(true)}\r\n                    label={\r\n                      <span\r\n                        className={`custom-control-label ${\r\n                          selectedItemsLength > 0 &&\r\n                          selectedItemsLength < itemsLength\r\n                            ? 'indeterminate'\r\n                            : ''\r\n                        }`}\r\n                      />\r\n                    }\r\n                  />\r\n                </div>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"primary\"\r\n                  className=\"dropdown-toggle-split btn-lg\"\r\n                />\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.delete\" />\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.another-action\" />\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </ButtonDropdown>\r\n            </div>\r\n            <Breadcrumb match={match} />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <Button\r\n              color=\"empty\"\r\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n              onClick={this.toggleDisplayOptions}>\r\n              <IntlMessages id=\"pages.display-options\" />{' '}\r\n              <i className=\"simple-icon-arrow-down align-middle\" />\r\n            </Button>\r\n            <Collapse\r\n              isOpen={displayOptionsIsOpen}\r\n              className=\"d-md-block\"\r\n              id=\"displayOptions\">\r\n              <span className=\"mr-3 d-inline-block float-md-left\">\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'list' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('list')}>\r\n                  <DataListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'thumblist' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('thumblist')}>\r\n                  <ThumbListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'imagelist' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('imagelist')}>\r\n                  <ImageListIcon />\r\n                </a>\r\n              </span>\r\n\r\n              <div className=\"d-block d-md-inline-block pt-1\">\r\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    <IntlMessages id=\"pages.orderby\" />\r\n                    {selectedOrderOption.label}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {orderOptions.map((order, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changeOrderBy(order.column)}>\r\n                          {order.label}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    id=\"search\"\r\n                    placeholder={messages['menu.search']}\r\n                    onKeyPress={(e) => onSearchKey(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"float-md-right pt-1\">\r\n                <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    {selectedPageSize}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    {pageSizes.map((size, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changePageSize(size)}>\r\n                          {size}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ListPageHeading);\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardImg,\r\n  CardText,\r\n  CustomInput,\r\n  Badge\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst ImageListView = ({ product, isSelect, collect, onCheckItem=null, onClickItem=null, servicePath='#'}) => {\r\n  return (\r\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem ? onCheckItem(event, product.id) : null}\r\n          className={classnames({\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <NavLink to={servicePath} className=\"w-40 w-sm-100\" onClick={onClickItem}>\r\n              <CardImg top alt={product.title} src={product.img} />\r\n            </NavLink>\r\n            <Badge\r\n              color={product.statusColor}\r\n              pill\r\n              className=\"position-absolute badge-top-left\"\r\n            >\r\n              {product.status}\r\n            </Badge>\r\n          </div>\r\n          <CardBody>\r\n            <Row>\r\n              {onCheckItem &&\r\n                <Colxx xxs=\"2\">\r\n                  <CustomInput\r\n                    className=\"item-check mb-0\"\r\n                    type=\"checkbox\"\r\n                    id={`check_${product.id}`}\r\n                    checked={isSelect}\r\n                    onChange={() => {}}\r\n                    label=\"\"/>\r\n                </Colxx>\r\n              }\r\n              <Colxx xxs=\"10\" className=\"mb-3\">\r\n                <CardSubtitle>{product.title}</CardSubtitle>\r\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                  {product.date}\r\n                </CardText>\r\n              </Colxx>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ImageListView);\r\n","import React from \"react\";\r\nimport { Card, CustomInput, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem=null, servicePath='/' }) => {\r\n  return (\r\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem ? onCheckItem(event, product.id) : null}\r\n          className={classnames(\"d-flex flex-row\", {\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <NavLink to={servicePath} className=\"d-flex\">\r\n            <img\r\n              alt={product.title}\r\n              src={product.img}\r\n              className=\"list-thumbnail responsive border-0 card-img-left\"\r\n            />\r\n          </NavLink>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <NavLink to={servicePath} className=\"w-40 w-sm-100\">\r\n                <p className=\"list-item-heading mb-1 truncate\">\r\n                  {product.title}\r\n                </p>\r\n              </NavLink>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n              </p>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n              </p>\r\n              <div className=\"w-15 w-sm-100\">\r\n                <Badge color={product.statusColor} pill>\r\n                  {product.status}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            {onCheckItem &&\r\n              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                <CustomInput\r\n                  className=\"item-check mb-0\"\r\n                  type=\"checkbox\"\r\n                  id={`check_${product.id}`}\r\n                  checked={isSelect}\r\n                  onChange={()=>{}}\r\n                  label=\"\"\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ThumbListView);\r\n","import React from \"react\";\r\nimport {\r\n  CustomInput,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      toggle={toggleModal}\r\n      wrapClassName=\"modal-right\"\r\n      backdrop=\"static\"\r\n    >\r\n      <ModalHeader toggle={toggleModal}>\r\n        <IntlMessages id=\"pages.add-new-modal-title\" />\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Label>\r\n          <IntlMessages id=\"pages.product-name\" />\r\n        </Label>\r\n        <Input />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.category\" />\r\n        </Label>\r\n        <Select\r\n          components={{ Input: CustomSelectInput }}\r\n          className=\"react-select\"\r\n          classNamePrefix=\"react-select\"\r\n          name=\"form-field-name\"\r\n          options={categories}\r\n        />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.description\" />\r\n        </Label>\r\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.status\" />\r\n        </Label>\r\n        <CustomInput\r\n          type=\"radio\"\r\n          id=\"exCustomRadio\"\r\n          name=\"customRadio\"\r\n          label=\"ON HOLD\"\r\n        />\r\n        <CustomInput\r\n          type=\"radio\"\r\n          id=\"exCustomRadio2\"\r\n          name=\"customRadio\"\r\n          label=\"PROCESSED\"\r\n        />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"secondary\" outline onClick={toggleModal}>\r\n          <IntlMessages id=\"pages.cancel\" />\r\n        </Button>\r\n        <Button color=\"primary\" onClick={toggleModal}>\r\n          <IntlMessages id=\"pages.submit\" />\r\n        </Button>{\" \"}\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewModal;\r\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Row,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nimport axios from \"axios\";\n\nimport { servicePath } from \"../../constants/defaultValues\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport VideoPlayer from \"../../components/common/VideoPlayer\";\n\nimport DataListView from \"../../containers/pages/DataListView\";\nimport Pagination from \"../../containers/pages/Pagination\";\nimport ContextMenuContainer from \"../../containers/pages/ContextMenuContainer\";\nimport ListPageHeading from \"../../containers/pages/ListPageHeading\";\nimport ImageListView from \"../../containers/pages/ImageListView\";\nimport ThumbListView from \"../../containers/pages/ThumbListView\";\nimport AddNewModal from \"../../containers/pages/AddNewModal\";\n\nfunction collect(props) {\n  return { data: props.data };\n}\nconst apiUrl = servicePath + \"/cakes/paging\";\n\nclass StoregePage extends Component {\n  constructor(props) {\n    super(props);\n    this.mouseTrap = require('mousetrap');\n\n\n    this.state = {\n      displayMode: \"imagelist\",\n\n      selectedPageSize: 8,\n      orderOptions: [\n        { column: \"title\", label: \"Product Name\" },\n        { column: \"category\", label: \"Category\" },\n        { column: \"status\", label: \"Status\" }\n      ],\n      pageSizes: [8, 12, 24],\n\n      categories: [\n        { label: \"Cakes\", value: \"Cakes\", key: 0 },\n        { label: \"Cupcakes\", value: \"Cupcakes\", key: 1 },\n        { label: \"Desserts\", value: \"Desserts\", key: 2 }\n      ],\n\n      selectedOrderOption: { column: \"title\", label: \"Product Name\" },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalItemCount: 0,\n      totalPage: 1,\n      search: \"\",\n      selectedItems: [],\n      lastChecked: null,\n      isLoading: false,\n      modal: false,\n      select_item: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.dataListRender();\n    this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () =>\n      this.handleChangeSelectAll(false)\n    );\n    this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\n      this.setState({\n        selectedItems: []\n      });\n      return false;\n    });\n  }\n\n  componentWillUnmount() {\n    this.mouseTrap.unbind(\"ctrl+a\");\n    this.mouseTrap.unbind(\"command+a\");\n    this.mouseTrap.unbind(\"ctrl+d\");\n    this.mouseTrap.unbind(\"command+d\");\n  }\n\n\n  toggleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen,\n    });\n  };\n\n  changeOrderBy = column => {\n    this.setState(\n      {\n        selectedOrderOption: this.state.orderOptions.find(\n          x => x.column === column\n        )\n      },\n      () => this.dataListRender()\n    );\n  };\n  changePageSize = size => {\n    this.setState(\n      {\n        selectedPageSize: size,\n        currentPage: 1\n      },\n      () => this.dataListRender()\n    );\n  };\n  changeDisplayMode = mode => {\n    this.setState({\n      displayMode: mode\n    });\n    return false;\n  };\n  onChangePage = page => {\n    this.setState(\n      {\n        currentPage: page\n      },\n      () => this.dataListRender()\n    );\n  };\n\n  onSearchKey = e => {\n    if (e.key === \"Enter\") {\n      this.setState(\n        {\n          search: e.target.value.toLowerCase()\n        },\n        () => this.dataListRender()\n      );\n    }\n  };\n\n  onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === \"A\" ||\n      (event.target.parentElement && event.target.parentElement.tagName === \"A\")\n    ) {\n      return true;\n    }\n    if (this.state.lastChecked === null) {\n      this.setState({\n        lastChecked: id\n      });\n    }\n\n    let selectedItems = this.state.selectedItems;\n    if (selectedItems.includes(id)) {\n      selectedItems = selectedItems.filter(x => x !== id);\n    } else {\n      selectedItems.push(id);\n    }\n    this.setState({\n      selectedItems\n    });\n\n    if (event.shiftKey) {\n      var items = this.state.items;\n      var start = this.getIndex(id, items, \"id\");\n      var end = this.getIndex(this.state.lastChecked, items, \"id\");\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...items.map(item => {\n          return item.id;\n        })\n      );\n      selectedItems = Array.from(new Set(selectedItems));\n      this.setState({\n        selectedItems\n      });\n    }\n    document.activeElement.blur();\n  };\n\n  getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  handleChangeSelectAll = isToggle => {\n    if (this.state.selectedItems.length >= this.state.items.length) {\n      if (isToggle) {\n        this.setState({\n          selectedItems: []\n        });\n      }\n    } else {\n      this.setState({\n        selectedItems: this.state.items.map(x => x.id)\n      });\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  dataListRender() {\n    const {\n      selectedPageSize,\n      currentPage,\n      selectedOrderOption,\n      search\n    } = this.state;\n    axios\n      .get(\n        `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${\n          selectedOrderOption.column\n        }&search=${search}`\n      )\n      .then(res => {\n        return res.data;\n      })\n      .then(data => {\n        this.setState({\n          totalPage: data.totalPage,\n          items: data.data,\n          selectedItems: [],\n          totalItemCount: data.totalItem,\n          isLoading: true\n        });\n      });\n  }\n\n  onContextMenuClick = (e, data, target) => {\n    console.log(\n      \"onContextMenuClick - selected items\",\n      this.state.selectedItems\n    );\n    console.log(\"onContextMenuClick - action : \", data.action);\n  };\n\n  onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!this.state.selectedItems.includes(clickedProductId)) {\n      this.setState({\n        selectedItems: [clickedProductId]\n      });\n    }\n\n    return true;\n  };\n\n  toggle = (select_id = undefined) => {\n    let select_item = Boolean(select_id) ? {\n      type: \"video\",\n        // type: \"image\",\n        name: 'Mayra Sibley',\n        date: '10 minutes ago',\n        profilePic: '/assets/img/profile-pic-l.jpg',\n        detail: 'I’m a web developer. I spend my whole day, practically every day, experimenting with HTML, CSS, and JavaScript; dabbling with Python and Ruby; and inhaling a wide variety of potentially useless information through a few hundred RSS feeds. I build websites that delight and inform. I do it well.',\n        image: \"/assets/img/detail-5.jpg\",\n        video: \"http://distribution.bbb3d.renderfarming.net/video/mp4/bbb_sunflower_1080p_30fps_normal.mp4\",\n    } : select_id\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      select_item,\n    }));\n  };\n\n  render() {\n    const {\n      currentPage,\n      items,\n      displayMode,\n      selectedPageSize,\n      totalItemCount,\n      selectedOrderOption,\n      selectedItems,\n      orderOptions,\n      pageSizes,\n      modalOpen,\n      categories\n    } = this.state;\n    const { match } = this.props;\n    const startIndex = (currentPage - 1) * selectedPageSize;\n    const endIndex = currentPage * selectedPageSize;\n\n    return !this.state.isLoading ? (\n      <div className=\"loading\" />\n    ) : (\n      <Fragment>\n        <div className=\"disable-text-selection\">\n          <ListPageHeading\n            heading=\"menu.storege\"\n            displayMode={displayMode}\n            changeDisplayMode={this.changeDisplayMode}\n            handleChangeSelectAll={this.handleChangeSelectAll}\n            changeOrderBy={this.changeOrderBy}\n            changePageSize={this.changePageSize}\n            selectedPageSize={selectedPageSize}\n            totalItemCount={totalItemCount}\n            selectedOrderOption={selectedOrderOption}\n            match={match}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            itemsLength={items ? items.length : 0}\n            onSearchKey={this.onSearchKey}\n            orderOptions={orderOptions}\n            pageSizes={pageSizes}\n            toggleModal={this.toggleModal}\n          />\n          <AddNewModal\n            modalOpen={modalOpen}\n            toggleModal={this.toggleModal}\n            categories={categories}\n          />\n          <Row>\n            {this.state.items.map(product => {\n              if (this.state.displayMode === \"imagelist\") {\n                return (\n                  <ImageListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    collect={collect}\n                    onCheckItem={this.onCheckItem}\n                    onClickItem={() => this.toggle(product.id)}\n                  />\n                );\n              } else if (this.state.displayMode === \"thumblist\") {\n                return (\n                  <ThumbListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    collect={collect}\n                    onCheckItem={this.onCheckItem}\n                  />\n                );\n              } else {\n                return (\n                  <DataListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    onCheckItem={this.onCheckItem}\n                    collect={collect}\n                  />\n                );\n              }\n            })}{\" \"}\n            <Pagination\n              currentPage={this.state.currentPage}\n              totalPage={this.state.totalPage}\n              onChangePage={i => this.onChangePage(i)}\n            />\n            <ContextMenuContainer\n              onContextMenuClick={this.onContextMenuClick}\n              onContextMenu={this.onContextMenu}\n            />\n          </Row>\n        </div>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            <IntlMessages id=\"modal.modal-title\" />\n          </ModalHeader>\n          <ModalBody>\n            {Boolean(this.state.select_item) &&\n              <VideoPlayer autoplay={false} controls={true} className=\"video-js card-img video-content\" poster={this.state.select_item.image}\n                sources={[{\n                  src: this.state.select_item.video,\n                  type: 'video/mp4'\n              }]} />\n            }\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>\n              Do Something\n            </Button>{\" \"}\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\nexport default StoregePage;\n","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  console.log(match)\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (match.path.includes('/studio/class')) {\r\n    paths = paths.filter(x => x.indexOf(\"classes\") === -1);\r\n  } else if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  console.log(paths)\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from \"react\";\r\nimport { components } from \"react-select\";\r\n\r\nconst CustomSelectInput = props => {\r\n  var customProps = Object.assign({}, props);\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput\r\n"],"sourceRoot":""}