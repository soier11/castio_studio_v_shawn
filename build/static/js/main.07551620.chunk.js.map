{"version":3,"sources":["index.js","assets/css/sass/themes lazy /^/.//gogo/..*/.scss$/ groupOptions: {} namespace object","serviceWorker.js","redux/settings/reducer.js","redux/menu/reducer.js","redux/reducers.js","redux/sagas.js","redux/store.js","AppRenderer.js","constants/defaultValues.js","redux/menu/actions.js","redux/settings/actions.js","redux/actions.js"],"names":["color","isMultiColorActive","isDarkSwitchActive","localStorage","getItem","themeColorStorageKey","defaultColor","setItem","then","x","require","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","id","t","keys","Object","module","exports","Boolean","window","location","hostname","match","INIT_STATE","locale","localeOptions","filter","length","defaultLocale","containerClassnames","defaultMenuType","subHiddenBreakpoint","menuHiddenBreakpoint","menuClickCount","selectedMenuHasSubItems","reducers","combineReducers","menu","state","action","type","MENU_CHANGE_HAS_SUB_ITEM_STATUS","assign","payload","MENU_SET_CLASSNAMES","MENU_CLICK_MOBILE_MENU","MENU_CONTAINER_ADD_CLASSNAME","MENU_CHANGE_DEFAULT_CLASSES","settings","CHANGE_LOCALE","rootSaga","getState","all","sagaMiddleware","createSagaMiddleware","middlewares","App","React","lazy","ReactDOM","render","store","initialState","createStore","compose","applyMiddleware","run","sagas","configureStore","fallback","className","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","name","direction","searchPath","servicePath","defaultDirection","themeRadiusStorageKey","changeSelectedMenuHasSubItems","changeDefaultClassnames","strCurrentClasses","addContainerClassname","classname","newClasses","indexOf","clickOnMobileMenu","currentClasses","split","nextClasses","includes","join","setContainerClassnames","clickIndex","changeLocale"],"mappings":"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","file":"static/js/main.07551620.chunk.js","sourcesContent":["import \"./assets/css/vendor/bootstrap.min.css\";\nimport \"./assets/css/vendor/bootstrap.rtl.only.min.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-table/react-table.css\";\nimport 'react-image-lightbox/style.css';\nimport \"video.js/dist/video-js.css\";\n\n\nimport { isMultiColorActive, defaultColor,themeColorStorageKey,isDarkSwitchActive } from \"./constants/defaultValues\";\nconst color =\n  (isMultiColorActive||isDarkSwitchActive ) && localStorage.getItem(themeColorStorageKey)\n    ? localStorage.getItem(themeColorStorageKey)\n    : defaultColor;\n\nlocalStorage.setItem(themeColorStorageKey, color);\nlet render = () => {\n  import('./assets/css/sass/themes/gogo.' + color + '.scss').then(x => {\n     require('./AppRenderer');\n  });\n};\nrender();","var map = {\n\t\"./gogo.dark.blue.scss\": [\n\t\t44,\n\t\t33\n\t],\n\t\"./gogo.dark.green.scss\": [\n\t\t45,\n\t\t34\n\t],\n\t\"./gogo.dark.orange.scss\": [\n\t\t46,\n\t\t35\n\t],\n\t\"./gogo.dark.purple.scss\": [\n\t\t47,\n\t\t36\n\t],\n\t\"./gogo.dark.red.scss\": [\n\t\t48,\n\t\t37\n\t],\n\t\"./gogo.light.blue.scss\": [\n\t\t49,\n\t\t38\n\t],\n\t\"./gogo.light.green.scss\": [\n\t\t50,\n\t\t39\n\t],\n\t\"./gogo.light.orange.scss\": [\n\t\t51,\n\t\t40\n\t],\n\t\"./gogo.light.purple.scss\": [\n\t\t52,\n\t\t41\n\t],\n\t\"./gogo.light.red.scss\": [\n\t\t53,\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 34;\nmodule.exports = webpackAsyncContext;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport {defaultLocale,localeOptions} from '../../constants/defaultValues'\r\n\r\nimport {\r\n    CHANGE_LOCALE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tlocale: (localStorage.getItem('currentLanguage') && localeOptions.filter(x=>x.id===localStorage.getItem('currentLanguage')).length>0) ? localStorage.getItem('currentLanguage') : defaultLocale,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_LOCALE:\r\n\t\treturn { ...state, locale:action.payload};\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}","import {\r\n\r\n\tMENU_SET_CLASSNAMES,\r\n\tMENU_CONTAINER_ADD_CLASSNAME,\r\n\tMENU_CLICK_MOBILE_MENU,\r\n\tMENU_CHANGE_DEFAULT_CLASSES,\r\n\tMENU_CHANGE_HAS_SUB_ITEM_STATUS\r\n} from '../actions';\r\n\r\nimport {defaultMenuType,  subHiddenBreakpoint, menuHiddenBreakpoint } from '../../constants/defaultValues'\r\n\r\n\r\nconst INIT_STATE = {\r\n\tcontainerClassnames: defaultMenuType,\r\n\tsubHiddenBreakpoint,\r\n\tmenuHiddenBreakpoint,\r\n\tmenuClickCount: 0,\r\n\tselectedMenuHasSubItems: defaultMenuType===\"menu-default\" //if you use menu-sub-hidden as default menu type, set value of this variable to false\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase MENU_CHANGE_HAS_SUB_ITEM_STATUS:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tselectedMenuHasSubItems: action.payload\r\n\t\t})\r\n\r\n\t\tcase MENU_SET_CLASSNAMES:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload.containerClassnames,\r\n\t\t\tmenuClickCount:action.payload.menuClickCount\r\n\t\t})\r\n\r\n\t\tcase MENU_CLICK_MOBILE_MENU:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload.containerClassnames,\r\n\t\t\tmenuClickCount:action.payload.menuClickCount\r\n\t\t})\r\n\r\n\t\tcase MENU_CONTAINER_ADD_CLASSNAME:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload\r\n\t\t})\r\n\r\n\t\tcase MENU_CHANGE_DEFAULT_CLASSES:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcontainerClassnames: action.payload\r\n\t\t\t})\r\n\t\t\t\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport settings from './settings/reducer';\r\nimport menu from './menu/reducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n  menu,\r\n  settings\r\n});\r\n\r\nexport default reducers;","import { all } from 'redux-saga/effects';\r\n\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n   \r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from './reducers';\r\nimport sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(sagas);\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nconst App = React.lazy(() => import(/* webpackChunkName: \"App\" */'./App' ));\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n      <App />\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\n * If you want your app to work offline and load faster, you can change\r\n * unregister() to register() below. Note this comes with some pitfalls.\r\n * Learn more about service workers: https://bit.ly/CRA-PWA\r\n */\r\nserviceWorker.unregister();\r\n","/*\r\nMenu Types:\r\n\"menu-default\", \"menu-sub-hidden\", \"menu-hidden\"\r\n*/\r\nexport const defaultMenuType = \"menu-default\";\r\n\r\nexport const subHiddenBreakpoint = 1440;\r\nexport const menuHiddenBreakpoint = 768;\r\nexport const defaultLocale = \"ko\";\r\nexport const localeOptions = [\r\n  { id: \"ko\", name: \"한국어\", direction: \"ltr\" },\r\n  { id: \"en\", name: \"English\", direction: \"ltr\" },\r\n  // { id: \"es\", name: \"Español\", direction: \"ltr\" },\r\n  // { id: \"enrtl\", name: \"English - RTL\", direction: \"rtl\" }\r\n];\r\n\r\nexport const searchPath = \"/app/pages/search\";\r\nexport const servicePath = \"https://api.coloredstrategies.com\";\r\n\r\n/*\r\nColor Options:\r\n\"light.purple\", \"light.blue\", \"light.green\", \"light.orange\", \"light.red\", \"dark.purple\", \"dark.blue\", \"dark.green\", \"dark.orange\", \"dark.red\"\r\n*/\r\nexport const themeColorStorageKey=\"__theme_color\"\r\nexport const isMultiColorActive = true;\r\nexport const isDarkSwitchActive = true;\r\n// export const defaultColor = \"light.purple\";\r\nexport const defaultColor = \"dark.blue\";\r\nexport const defaultDirection = \"ltr\";\r\nexport const themeRadiusStorageKey = \"__theme_radius\";\r\nexport const isDemo = true;","import {\r\n    MENU_SET_CLASSNAMES,\r\n    MENU_CONTAINER_ADD_CLASSNAME,\r\n    MENU_CLICK_MOBILE_MENU,\r\n    MENU_CHANGE_DEFAULT_CLASSES,\r\n    MENU_CHANGE_HAS_SUB_ITEM_STATUS\r\n} from '../actions';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n    return (\r\n        {\r\n            type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n            payload: payload\r\n        }\r\n    )\r\n}\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n    return (\r\n        {\r\n            type: MENU_CHANGE_DEFAULT_CLASSES,\r\n            payload: strCurrentClasses\r\n        }\r\n    )\r\n}\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n    const newClasses = !strCurrentClasses.indexOf(classname) > -1 ? strCurrentClasses + ' ' + classname : strCurrentClasses;\r\n    return (\r\n        {\r\n            type: MENU_CONTAINER_ADD_CLASSNAME,\r\n            payload: newClasses\r\n        }\r\n    )\r\n}\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n    const currentClasses = strCurrentClasses ? strCurrentClasses.split(' ').filter(x => x !== '' && x !== 'sub-show-temporary') : '';\r\n    let nextClasses = '';\r\n    if (currentClasses.includes('main-show-temporary')) {\r\n        nextClasses = (currentClasses.filter(x => x !== 'main-show-temporary')).join(' ');\r\n    } else {\r\n        nextClasses = currentClasses.join(' ') + ' main-show-temporary';\r\n    }\r\n    return (\r\n        {\r\n            type: MENU_CLICK_MOBILE_MENU,\r\n            payload: { containerClassnames: nextClasses, menuClickCount: 0 }\r\n        }\r\n    )\r\n}\r\n\r\nexport const setContainerClassnames = (clickIndex, strCurrentClasses,selectedMenuHasSubItems) => {\r\n    const currentClasses = strCurrentClasses ? strCurrentClasses.split(' ').filter(x => x !== '') : '';\r\n    let nextClasses = '';\r\n    if (!selectedMenuHasSubItems) {\r\n        if (currentClasses.includes(\"menu-default\") && (clickIndex % 4 === 0 || clickIndex % 4 === 3)) {\r\n          clickIndex=1;\r\n        }\r\n        if (currentClasses.includes(\"menu-sub-hidden\") && (clickIndex % 4 === 2)) {\r\n          clickIndex=0;\r\n        }\r\n        if (currentClasses.includes(\"menu-hidden\") && (clickIndex % 4 === 2 || clickIndex % 4 === 3 )) {\r\n            clickIndex=0;\r\n          }\r\n\r\n      }\r\n\r\n\r\n\r\n    if (clickIndex % 4 === 0) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden';\r\n        }\r\n        clickIndex = 0;\r\n    } else if (clickIndex % 4 === 1) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary';\r\n        }\r\n    } else if (clickIndex % 4 === 2) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n        }\r\n    } else if (clickIndex % 4 === 3) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary';\r\n        }\r\n    }\r\n    if (currentClasses.includes('menu-mobile')) {\r\n        nextClasses += ' menu-mobile';\r\n    }\r\n    return (\r\n        {\r\n            type: MENU_SET_CLASSNAMES,\r\n            payload: { containerClassnames: nextClasses, menuClickCount: clickIndex }\r\n        }\r\n    )\r\n}","import {\r\n    CHANGE_LOCALE\r\n} from '../actions';\r\n\r\n\r\nexport const changeLocale = (locale) => {\r\n    localStorage.setItem('currentLanguage', locale);\r\n    return (\r\n        {\r\n            type: CHANGE_LOCALE,\r\n            payload: locale\r\n        }\r\n    )\r\n}\r\n\r\n","/* SETTINGS */\r\nexport const CHANGE_LOCALE = \"CHANGE_LOCALE\";\r\n\r\n\r\n/* MENU */\r\nexport const MENU_SET_CLASSNAMES = \"MENU_SET_CLASSNAMES\";\r\nexport const MENU_CONTAINER_ADD_CLASSNAME = \"MENU_CONTAINER_ADD_CLASSNAME\";\r\nexport const MENU_CLICK_MOBILE_MENU = \"MENU_CLICK_MOBILE_MENU\";\r\nexport const MENU_CHANGE_DEFAULT_CLASSES = \"MENU_CHANGE_DEFAULT_CLASSES\";\r\nexport const MENU_CHANGE_HAS_SUB_ITEM_STATUS =\r\n  \"MENU_CHANGE_HAS_SUB_ITEM_STATUS\";\r\n\r\n\r\n\r\nexport * from \"./menu/actions\";\r\nexport * from \"./settings/actions\";\r\n"],"sourceRoot":""}