{"ast":null,"code":"var _jsxFileName = \"/Users/soier/Code/santa/studio_v2/src/components/common/react-notifications/NotificationContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationManager from './NotificationManager';\nimport Notifications from './Notifications';\n\nclass NotificationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: []\n    };\n\n    this.componentWillUnmount = () => {\n      NotificationManager.removeChangeListener(this.handleStoreChange);\n    };\n\n    this.handleStoreChange = notifications => {\n      this.setState({\n        notifications\n      });\n    };\n\n    this.handleRequestHide = notification => {\n      NotificationManager.remove(notification);\n    };\n\n    NotificationManager.addChangeListener(this.handleStoreChange);\n  }\n\n  render() {\n    const notifications = this.state.notifications;\n    const _this$props = this.props,\n          enterTimeout = _this$props.enterTimeout,\n          leaveTimeout = _this$props.leaveTimeout;\n    return /*#__PURE__*/React.createElement(Notifications, {\n      enterTimeout: enterTimeout,\n      leaveTimeout: leaveTimeout,\n      notifications: notifications,\n      onRequestHide: this.handleRequestHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nNotificationContainer.propTypes = {\n  enterTimeout: PropTypes.number,\n  leaveTimeout: PropTypes.number\n};\nNotificationContainer.defaultProps = {\n  enterTimeout: 400,\n  leaveTimeout: 400\n};\nexport default NotificationContainer;","map":{"version":3,"sources":["/Users/soier/Code/santa/studio_v2/src/components/common/react-notifications/NotificationContainer.js"],"names":["React","PropTypes","NotificationManager","Notifications","NotificationContainer","Component","constructor","props","state","notifications","componentWillUnmount","removeChangeListener","handleStoreChange","setState","handleRequestHide","notification","remove","addChangeListener","render","enterTimeout","leaveTimeout","propTypes","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,qBAAN,SAAoCJ,KAAK,CAACK,SAA1C,CAAoD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAenBC,KAfmB,GAeX;AACNC,MAAAA,aAAa,EAAE;AADT,KAfW;;AAAA,SAmBnBC,oBAnBmB,GAmBI,MAAM;AAC3BR,MAAAA,mBAAmB,CAACS,oBAApB,CAAyC,KAAKC,iBAA9C;AACD,KArBkB;;AAAA,SAuBnBA,iBAvBmB,GAuBEH,aAAD,IAAmB;AACrC,WAAKI,QAAL,CAAc;AACZJ,QAAAA;AADY,OAAd;AAGD,KA3BkB;;AAAA,SA6BnBK,iBA7BmB,GA6BEC,YAAD,IAAkB;AACpCb,MAAAA,mBAAmB,CAACc,MAApB,CAA2BD,YAA3B;AACD,KA/BkB;;AAEjBb,IAAAA,mBAAmB,CAACe,iBAApB,CAAsC,KAAKL,iBAA3C;AACD;;AA8BDM,EAAAA,MAAM,GAAG;AAAA,UACCT,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;AAAA,wBAEgC,KAAKF,KAFrC;AAAA,UAECY,YAFD,eAECA,YAFD;AAAA,UAEeC,YAFf,eAEeA,YAFf;AAGP,wBACE,oBAAC,aAAD;AACE,MAAA,YAAY,EAAED,YADhB;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,aAAa,EAAEX,aAHjB;AAIE,MAAA,aAAa,EAAE,KAAKK,iBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AA7CiD;;AAA9CV,qB,CAMGiB,S,GAAY;AACjBF,EAAAA,YAAY,EAAElB,SAAS,CAACqB,MADP;AAEjBF,EAAAA,YAAY,EAAEnB,SAAS,CAACqB;AAFP,C;AANflB,qB,CAWGmB,Y,GAAe;AACpBJ,EAAAA,YAAY,EAAE,GADM;AAEpBC,EAAAA,YAAY,EAAE;AAFM,C;AAqCxB,eAAehB,qBAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationManager from './NotificationManager';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    NotificationManager.addChangeListener(this.handleStoreChange);\r\n  }\r\n\r\n  static propTypes = {\r\n    enterTimeout: PropTypes.number,\r\n    leaveTimeout: PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    enterTimeout: 400,\r\n    leaveTimeout: 400\r\n  };\r\n\r\n  state = {\r\n    notifications: []\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    NotificationManager.removeChangeListener(this.handleStoreChange);\r\n  };\r\n\r\n  handleStoreChange = (notifications) => {\r\n    this.setState({\r\n      notifications\r\n    });\r\n  };\r\n\r\n  handleRequestHide = (notification) => {\r\n    NotificationManager.remove(notification);\r\n  };\r\n\r\n  render() {\r\n    const { notifications } = this.state;\r\n    const { enterTimeout, leaveTimeout } = this.props;\r\n    return (\r\n      <Notifications\r\n        enterTimeout={enterTimeout}\r\n        leaveTimeout={leaveTimeout}\r\n        notifications={notifications}\r\n        onRequestHide={this.handleRequestHide}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotificationContainer;\r\n"]},"metadata":{},"sourceType":"module"}