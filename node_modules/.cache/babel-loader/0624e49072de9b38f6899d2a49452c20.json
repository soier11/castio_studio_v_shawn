{"ast":null,"code":"import{createStore,applyMiddleware,compose}from'redux';import createSagaMiddleware from\"redux-saga\";import reducers from'./reducers';import sagas from\"./sagas\";const sagaMiddleware=createSagaMiddleware();const middlewares=[sagaMiddleware];export function configureStore(initialState){const store=createStore(reducers,initialState,compose(applyMiddleware(...middlewares)));sagaMiddleware.run(sagas);if(module.hot){module.hot.accept('./reducers',()=>{const nextRootReducer=require('./reducers');store.replaceReducer(nextRootReducer);});}return store;}","map":{"version":3,"sources":["/Users/soier/Code/studio_v_shawn/studio_v2/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","reducers","sagas","sagaMiddleware","middlewares","configureStore","initialState","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,KAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CAEA,KAAMI,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,MAAO,SAASE,CAAAA,cAAT,CAAwBC,YAAxB,CAAsC,CAEzC,KAAMC,CAAAA,KAAK,CAAGV,WAAW,CACrBI,QADqB,CAErBK,YAFqB,CAGrBP,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAHc,CAAzB,CAMAD,cAAc,CAACK,GAAf,CAAmBN,KAAnB,EAEA,GAAIO,MAAM,CAACC,GAAX,CAAgB,CACZD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,CAAgC,IAAM,CAClC,KAAMC,CAAAA,eAAe,CAAGC,OAAO,CAAC,YAAD,CAA/B,CACAN,KAAK,CAACO,cAAN,CAAqBF,eAArB,EACH,CAHD,EAIH,CAED,MAAOL,CAAAA,KAAP,CACH","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from './reducers';\r\nimport sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(sagas);\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}