{"ast":null,"code":"var _jsxFileName = \"/Users/soier/Code/santa/studio_v2/src/containers/dashboards/BestSellers.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Card, CardBody, CardTitle, CustomInput } from \"reactstrap\";\nimport Pagination from \"../../components/DatatablePagination\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport data from \"../../data/products\";\n\nclass BestSellers extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = () => {\n      var selectAll = !this.state.selectAll;\n      this.setState({\n        selectAll: selectAll\n      });\n      var checkedCopy = [];\n      this.state.data.forEach(function (e, index) {\n        checkedCopy.push(selectAll);\n      });\n      this.setState({\n        checked: checkedCopy\n      }, () => {\n        console.log(this.state.checked);\n      });\n    };\n\n    this.handleSingleCheckboxChange = index => {\n      console.log(index);\n      var checkedCopy = this.state.checked;\n      checkedCopy[index] = !this.state.checked[index];\n\n      if (checkedCopy[index] === false) {\n        this.setState({\n          selectAll: false\n        });\n      }\n\n      this.setState({\n        checked: checkedCopy\n      }, () => {\n        console.log(this.state.checked);\n      });\n    };\n\n    this.state = {\n      selectAll: false,\n      data: [],\n      checked: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSingleCheckboxChange = this.handleSingleCheckboxChange.bind(this);\n  }\n\n  componentDidMount() {\n    const dataEdited = data.slice(0, 12);\n    var checkedCopy = [];\n    var selectAll = this.state.selectAll;\n    dataEdited.forEach(function (e, index) {\n      checkedCopy.push(selectAll);\n    });\n    this.setState({\n      data: dataEdited,\n      checked: checkedCopy,\n      selectAll: selectAll\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"dashboards.best-sellers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ReactTable, {\n      data: this.state.data,\n      defaultPageSize: 6,\n      showPageJump: false,\n      showPageSizeOptions: false,\n      PaginationComponent: Pagination,\n      columns: [{\n        sortable: false,\n        Header: /*#__PURE__*/React.createElement(CustomInput, {\n          type: \"checkbox\",\n          id: \"checkAll\",\n          label: \"All\",\n          onChange: this.handleChange,\n          checked: this.state.selectAll,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        }),\n        Cell: row => /*#__PURE__*/React.createElement(CustomInput, {\n          type: \"checkbox\",\n          id: \"check\" + row.index,\n          label: \"\",\n          checked: this.state.checked[row.index],\n          onChange: () => this.handleSingleCheckboxChange(row.index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }\n        }),\n        filterable: false\n      }, {\n        Header: \"Name\",\n        accessor: \"title\",\n        Cell: props => /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 34\n          }\n        }, props.value)\n      }, {\n        Header: \"Sales\",\n        accessor: \"sales\",\n        Cell: props => /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 34\n          }\n        }, props.value)\n      }, {\n        Header: \"Stock\",\n        accessor: \"stock\",\n        Cell: props => /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 34\n          }\n        }, props.value)\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default BestSellers;","map":{"version":3,"sources":["/Users/soier/Code/santa/studio_v2/src/containers/dashboards/BestSellers.js"],"names":["React","Component","ReactTable","Card","CardBody","CardTitle","CustomInput","Pagination","IntlMessages","data","BestSellers","constructor","handleChange","selectAll","state","setState","checkedCopy","forEach","e","index","push","checked","console","log","handleSingleCheckboxChange","bind","componentDidMount","dataEdited","slice","render","sortable","Header","Cell","row","filterable","accessor","props","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Card, CardBody, CardTitle, CustomInput } from \"reactstrap\";\r\nimport Pagination from \"../../components/DatatablePagination\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nimport data from \"../../data/products\";\r\n\r\n\r\nclass BestSellers extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectAll: false,\r\n      data: [],\r\n      checked: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSingleCheckboxChange = this.handleSingleCheckboxChange.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  handleChange = () => {\r\n    var selectAll = !this.state.selectAll;\r\n    this.setState({ selectAll: selectAll });\r\n    var checkedCopy = [];\r\n    this.state.data.forEach(function (e, index) {\r\n      checkedCopy.push(selectAll);\r\n    });\r\n    this.setState({\r\n      checked: checkedCopy\r\n    }, () => {\r\n      console.log(this.state.checked);\r\n    });\r\n  };\r\n\r\n  handleSingleCheckboxChange = index => {\r\n    console.log(index);\r\n    var checkedCopy = this.state.checked;\r\n    checkedCopy[index] = !this.state.checked[index];\r\n    if (checkedCopy[index] === false) {\r\n      this.setState({ selectAll: false });\r\n    }\r\n    this.setState({\r\n      checked: checkedCopy\r\n    }, () => {\r\n      console.log(this.state.checked);\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const dataEdited = data.slice(0, 12);\r\n    var checkedCopy = [];\r\n    var selectAll = this.state.selectAll;\r\n    dataEdited.forEach(function (e, index) {\r\n      checkedCopy.push(selectAll);\r\n    });\r\n    this.setState({\r\n      data: dataEdited,\r\n      checked: checkedCopy,\r\n      selectAll: selectAll\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"h-100\">\r\n        <CardBody>\r\n          <CardTitle>\r\n            <IntlMessages id={\"dashboards.best-sellers\"} />\r\n          </CardTitle>\r\n            <ReactTable\r\n              data={this.state.data}\r\n              defaultPageSize={6}\r\n              showPageJump={false}\r\n              showPageSizeOptions={false}\r\n              PaginationComponent={Pagination}\r\n              columns={[\r\n                {\r\n                  sortable: false,\r\n                  Header: (\r\n                    <CustomInput\r\n                      type=\"checkbox\"\r\n                      id=\"checkAll\"\r\n                      label=\"All\"\r\n                      onChange={this.handleChange}\r\n                      checked={this.state.selectAll}\r\n                    />\r\n                  ),\r\n                  Cell: row => (\r\n                    <CustomInput\r\n                      type=\"checkbox\"\r\n                      id={\"check\"+row.index}\r\n                      label=\"\"\r\n                      checked={this.state.checked[row.index]}\r\n                      onChange={() => this.handleSingleCheckboxChange(row.index)}\r\n                    />\r\n                  ),\r\n                  filterable: false\r\n                },\r\n                {\r\n                  Header: \"Name\",\r\n                  accessor: \"title\",\r\n                  Cell: props => <p className=\"text-muted\">{props.value}</p>\r\n                },\r\n                {\r\n                  Header: \"Sales\",\r\n                  accessor: \"sales\",\r\n                  Cell: props => <p className=\"text-muted\">{props.value}</p>\r\n                },\r\n                {\r\n                  Header: \"Stock\",\r\n                  accessor: \"stock\",\r\n                  Cell: props => <p className=\"text-muted\">{props.value}</p>\r\n                }\r\n              ]}\r\n            />\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BestSellers;"]},"metadata":{},"sourceType":"module"}