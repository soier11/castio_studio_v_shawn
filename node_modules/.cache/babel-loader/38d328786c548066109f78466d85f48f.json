{"ast":null,"code":"var _jsxFileName = \"/Users/soier/Code/santa/studio_v2/src/views/studio/classpage/class.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport axios from \"axios\";\nimport { servicePath } from \"../../../constants/defaultValues\";\nimport classesData from \"../../../data/classes\";\nimport DataListView from \"../../../containers/pages/DataListView\";\nimport Pagination from \"../../../containers/pages/Pagination\";\nimport ContextMenuContainer from \"../../../containers/pages/ContextMenuContainer\";\nimport ListPageHeading from \"../../../containers/pages/ListPageHeading\";\nimport ImageListView from \"../../../containers/pages/ImageListView\";\nimport ThumbListView from \"../../../containers/pages/ThumbListView\";\nimport AddNewModal from \"../../../containers/pages/AddNewModal\";\n\nfunction collect(props) {\n  return {\n    data: props.data\n  };\n}\n\nconst apiUrl = servicePath + \"/cakes/paging\";\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = () => {\n      this.setState({\n        modalOpen: !this.state.modalOpen\n      });\n    };\n\n    this.changeOrderBy = column => {\n      this.setState({\n        selectedOrderOption: this.state.orderOptions.find(x => x.column === column)\n      }, () => this.dataListRender());\n    };\n\n    this.changePageSize = size => {\n      this.setState({\n        selectedPageSize: size,\n        currentPage: 1\n      }, () => this.dataListRender());\n    };\n\n    this.changeDisplayMode = mode => {\n      this.setState({\n        displayMode: mode\n      });\n      return false;\n    };\n\n    this.onChangePage = page => {\n      this.setState({\n        currentPage: page\n      }, () => this.dataListRender());\n    };\n\n    this.onSearchKey = e => {\n      if (e.key === \"Enter\") {\n        this.setState({\n          search: e.target.value.toLowerCase()\n        }, () => this.dataListRender());\n      }\n    };\n\n    this.onCheckItem = (event, id) => {\n      if (event.target.tagName === \"A\" || event.target.parentElement && event.target.parentElement.tagName === \"A\") {\n        return true;\n      }\n\n      if (this.state.lastChecked === null) {\n        this.setState({\n          lastChecked: id\n        });\n      }\n\n      let selectedItems = this.state.selectedItems;\n\n      if (selectedItems.includes(id)) {\n        selectedItems = selectedItems.filter(x => x !== id);\n      } else {\n        selectedItems.push(id);\n      }\n\n      this.setState({\n        selectedItems\n      });\n\n      if (event.shiftKey) {\n        var items = this.state.items;\n        var start = this.getIndex(id, items, \"id\");\n        var end = this.getIndex(this.state.lastChecked, items, \"id\");\n        items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n        selectedItems.push(...items.map(item => {\n          return item.id;\n        }));\n        selectedItems = Array.from(new Set(selectedItems));\n        this.setState({\n          selectedItems\n        });\n      }\n\n      document.activeElement.blur();\n    };\n\n    this.handleChangeSelectAll = isToggle => {\n      if (this.state.selectedItems.length >= this.state.items.length) {\n        if (isToggle) {\n          this.setState({\n            selectedItems: []\n          });\n        }\n      } else {\n        this.setState({\n          selectedItems: this.state.items.map(x => x.id)\n        });\n      }\n\n      document.activeElement.blur();\n      return false;\n    };\n\n    this.onContextMenuClick = (e, data, target) => {\n      console.log(\"onContextMenuClick - selected items\", this.state.selectedItems);\n      console.log(\"onContextMenuClick - action : \", data.action);\n    };\n\n    this.onContextMenu = (e, data) => {\n      const clickedProductId = data.data;\n\n      if (!this.state.selectedItems.includes(clickedProductId)) {\n        this.setState({\n          selectedItems: [clickedProductId]\n        });\n      }\n\n      return true;\n    };\n\n    this.mouseTrap = require('mousetrap');\n    this.state = {\n      displayMode: \"imagelist\",\n      selectedPageSize: 8,\n      orderOptions: [{\n        column: \"title\",\n        label: \"Product Name\"\n      }, {\n        column: \"category\",\n        label: \"Category\"\n      }, {\n        column: \"status\",\n        label: \"Status\"\n      }],\n      pageSizes: [8, 12, 24],\n      categories: [{\n        label: \"Cakes\",\n        value: \"Cakes\",\n        key: 0\n      }, {\n        label: \"Cupcakes\",\n        value: \"Cupcakes\",\n        key: 1\n      }, {\n        label: \"Desserts\",\n        value: \"Desserts\",\n        key: 2\n      }],\n      selectedOrderOption: {\n        column: \"title\",\n        label: \"Product Name\"\n      },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalItemCount: 0,\n      totalPage: 1,\n      search: \"\",\n      selectedItems: [],\n      lastChecked: null,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.dataListRender();\n    this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () => this.handleChangeSelectAll(false));\n    this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\n      this.setState({\n        selectedItems: []\n      });\n      return false;\n    });\n  }\n\n  componentWillUnmount() {\n    this.mouseTrap.unbind(\"ctrl+a\");\n    this.mouseTrap.unbind(\"command+a\");\n    this.mouseTrap.unbind(\"ctrl+d\");\n    this.mouseTrap.unbind(\"command+d\");\n  }\n\n  getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  dataListRender() {\n    const _this$state = this.state,\n          selectedPageSize = _this$state.selectedPageSize,\n          currentPage = _this$state.currentPage,\n          selectedOrderOption = _this$state.selectedOrderOption,\n          search = _this$state.search;\n    axios.get(\"\".concat(apiUrl, \"?pageSize=\").concat(selectedPageSize, \"&currentPage=\").concat(currentPage, \"&orderBy=\").concat(selectedOrderOption.column, \"&search=\").concat(search)).then(res => {\n      return res.data;\n    }).then(data => {\n      this.setState({\n        totalPage: data.totalPage,\n        items: data.data,\n        selectedItems: [],\n        totalItemCount: data.totalItem,\n        isLoading: true\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          currentPage = _this$state2.currentPage,\n          items = _this$state2.items,\n          displayMode = _this$state2.displayMode,\n          selectedPageSize = _this$state2.selectedPageSize,\n          totalItemCount = _this$state2.totalItemCount,\n          selectedOrderOption = _this$state2.selectedOrderOption,\n          selectedItems = _this$state2.selectedItems,\n          orderOptions = _this$state2.orderOptions,\n          pageSizes = _this$state2.pageSizes,\n          modalOpen = _this$state2.modalOpen,\n          categories = _this$state2.categories;\n    const match = this.props.match;\n    const startIndex = (currentPage - 1) * selectedPageSize;\n    const endIndex = currentPage * selectedPageSize;\n    console.log(match);\n    return !this.state.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"disable-text-selection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListPageHeading, {\n      heading: \"menu.class\",\n      displayMode: displayMode,\n      changeDisplayMode: this.changeDisplayMode,\n      handleChangeSelectAll: this.handleChangeSelectAll,\n      changeOrderBy: this.changeOrderBy,\n      changePageSize: this.changePageSize,\n      selectedPageSize: selectedPageSize,\n      totalItemCount: totalItemCount,\n      selectedOrderOption: selectedOrderOption,\n      match: match,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      selectedItemsLength: selectedItems ? selectedItems.length : 0,\n      itemsLength: items ? items.length : 0,\n      onSearchKey: this.onSearchKey,\n      orderOptions: orderOptions,\n      pageSizes: pageSizes,\n      toggleModal: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AddNewModal, {\n      modalOpen: modalOpen,\n      toggleModal: this.toggleModal,\n      categories: categories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, this.state.items.map(product => {\n      if (this.state.displayMode === \"imagelist\") {\n        return /*#__PURE__*/React.createElement(ImageListView, {\n          key: product.id,\n          product: product,\n          isSelect: this.state.selectedItems.includes(product.id),\n          collect: collect,\n          onCheckItem: this.onCheckItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }\n        });\n      } else if (this.state.displayMode === \"thumblist\") {\n        return /*#__PURE__*/React.createElement(ThumbListView, {\n          key: product.id,\n          product: product,\n          isSelect: this.state.selectedItems.includes(product.id),\n          collect: collect,\n          onCheckItem: this.onCheckItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(DataListView, {\n          key: product.id,\n          product: product,\n          isSelect: this.state.selectedItems.includes(product.id),\n          onCheckItem: this.onCheckItem,\n          collect: collect,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 19\n          }\n        });\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Pagination, {\n      currentPage: this.state.currentPage,\n      totalPage: this.state.totalPage,\n      onChangePage: i => this.onChangePage(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ContextMenuContainer, {\n      onContextMenuClick: this.onContextMenuClick,\n      onContextMenu: this.onContextMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default ClassPage;","map":{"version":3,"sources":["/Users/soier/Code/santa/studio_v2/src/views/studio/classpage/class.js"],"names":["React","Component","Fragment","Row","axios","servicePath","classesData","DataListView","Pagination","ContextMenuContainer","ListPageHeading","ImageListView","ThumbListView","AddNewModal","collect","props","data","apiUrl","ClassPage","constructor","toggleModal","setState","modalOpen","state","changeOrderBy","column","selectedOrderOption","orderOptions","find","x","dataListRender","changePageSize","size","selectedPageSize","currentPage","changeDisplayMode","mode","displayMode","onChangePage","page","onSearchKey","e","key","search","target","value","toLowerCase","onCheckItem","event","id","tagName","parentElement","lastChecked","selectedItems","includes","filter","push","shiftKey","items","start","getIndex","end","slice","Math","min","max","map","item","Array","from","Set","document","activeElement","blur","handleChangeSelectAll","isToggle","length","onContextMenuClick","console","log","action","onContextMenu","clickedProductId","mouseTrap","require","label","pageSizes","categories","dropdownSplitOpen","totalItemCount","totalPage","isLoading","componentDidMount","bind","componentWillUnmount","unbind","arr","prop","i","get","then","res","totalItem","render","match","startIndex","endIndex","product"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport axios from \"axios\";\n\nimport { servicePath } from \"../../../constants/defaultValues\";\nimport classesData from \"../../../data/classes\";\n\nimport DataListView from \"../../../containers/pages/DataListView\";\nimport Pagination from \"../../../containers/pages/Pagination\";\nimport ContextMenuContainer from \"../../../containers/pages/ContextMenuContainer\";\nimport ListPageHeading from \"../../../containers/pages/ListPageHeading\";\nimport ImageListView from \"../../../containers/pages/ImageListView\";\nimport ThumbListView from \"../../../containers/pages/ThumbListView\";\nimport AddNewModal from \"../../../containers/pages/AddNewModal\";\n\nfunction collect(props) {\n  return { data: props.data };\n}\nconst apiUrl = servicePath + \"/cakes/paging\";\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n    this.mouseTrap = require('mousetrap');\n\n    this.state = {\n      displayMode: \"imagelist\",\n\n      selectedPageSize: 8,\n      orderOptions: [\n        { column: \"title\", label: \"Product Name\" },\n        { column: \"category\", label: \"Category\" },\n        { column: \"status\", label: \"Status\" }\n      ],\n      pageSizes: [8, 12, 24],\n\n      categories: [\n        { label: \"Cakes\", value: \"Cakes\", key: 0 },\n        { label: \"Cupcakes\", value: \"Cupcakes\", key: 1 },\n        { label: \"Desserts\", value: \"Desserts\", key: 2 }\n      ],\n\n      selectedOrderOption: { column: \"title\", label: \"Product Name\" },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalItemCount: 0,\n      totalPage: 1,\n      search: \"\",\n      selectedItems: [],\n      lastChecked: null,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.dataListRender();\n    this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () =>\n      this.handleChangeSelectAll(false)\n    );\n    this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\n      this.setState({\n        selectedItems: []\n      });\n      return false;\n    });\n  }\n\n  componentWillUnmount() {\n    this.mouseTrap.unbind(\"ctrl+a\");\n    this.mouseTrap.unbind(\"command+a\");\n    this.mouseTrap.unbind(\"ctrl+d\");\n    this.mouseTrap.unbind(\"command+d\");\n  }\n\n\n  toggleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    });\n  };\n\n  changeOrderBy = column => {\n    this.setState(\n      {\n        selectedOrderOption: this.state.orderOptions.find(\n          x => x.column === column\n        )\n      },\n      () => this.dataListRender()\n    );\n  };\n  changePageSize = size => {\n    this.setState(\n      {\n        selectedPageSize: size,\n        currentPage: 1\n      },\n      () => this.dataListRender()\n    );\n  };\n  changeDisplayMode = mode => {\n    this.setState({\n      displayMode: mode\n    });\n    return false;\n  };\n  onChangePage = page => {\n    this.setState(\n      {\n        currentPage: page\n      },\n      () => this.dataListRender()\n    );\n  };\n\n  onSearchKey = e => {\n    if (e.key === \"Enter\") {\n      this.setState(\n        {\n          search: e.target.value.toLowerCase()\n        },\n        () => this.dataListRender()\n      );\n    }\n  };\n\n  onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === \"A\" ||\n      (event.target.parentElement && event.target.parentElement.tagName === \"A\")\n    ) {\n      return true;\n    }\n    if (this.state.lastChecked === null) {\n      this.setState({\n        lastChecked: id\n      });\n    }\n\n    let selectedItems = this.state.selectedItems;\n    if (selectedItems.includes(id)) {\n      selectedItems = selectedItems.filter(x => x !== id);\n    } else {\n      selectedItems.push(id);\n    }\n    this.setState({\n      selectedItems\n    });\n\n    if (event.shiftKey) {\n      var items = this.state.items;\n      var start = this.getIndex(id, items, \"id\");\n      var end = this.getIndex(this.state.lastChecked, items, \"id\");\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...items.map(item => {\n          return item.id;\n        })\n      );\n      selectedItems = Array.from(new Set(selectedItems));\n      this.setState({\n        selectedItems\n      });\n    }\n    document.activeElement.blur();\n  };\n\n  getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  handleChangeSelectAll = isToggle => {\n    if (this.state.selectedItems.length >= this.state.items.length) {\n      if (isToggle) {\n        this.setState({\n          selectedItems: []\n        });\n      }\n    } else {\n      this.setState({\n        selectedItems: this.state.items.map(x => x.id)\n      });\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  dataListRender() {\n    const {\n      selectedPageSize,\n      currentPage,\n      selectedOrderOption,\n      search\n    } = this.state;\n    axios\n      .get(\n        `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${\n          selectedOrderOption.column\n        }&search=${search}`\n      )\n      .then(res => {\n        return res.data;\n      })\n      .then(data => {\n        this.setState({\n          totalPage: data.totalPage,\n          items: data.data,\n          selectedItems: [],\n          totalItemCount: data.totalItem,\n          isLoading: true\n        });\n      });\n  }\n\n  onContextMenuClick = (e, data, target) => {\n    console.log(\n      \"onContextMenuClick - selected items\",\n      this.state.selectedItems\n    );\n    console.log(\"onContextMenuClick - action : \", data.action);\n  };\n\n  onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!this.state.selectedItems.includes(clickedProductId)) {\n      this.setState({\n        selectedItems: [clickedProductId]\n      });\n    }\n\n    return true;\n  };\n\n  render() {\n    const {\n      currentPage,\n      items,\n      displayMode,\n      selectedPageSize,\n      totalItemCount,\n      selectedOrderOption,\n      selectedItems,\n      orderOptions,\n      pageSizes,\n      modalOpen,\n      categories\n    } = this.state;\n    const { match } = this.props;\n    const startIndex = (currentPage - 1) * selectedPageSize;\n    const endIndex = currentPage * selectedPageSize;\n\n    console.log(match)\n\n    return !this.state.isLoading ? (\n      <div className=\"loading\" />\n    ) : (\n      <Fragment>\n        <div className=\"disable-text-selection\">\n          <ListPageHeading\n            heading=\"menu.class\"\n            displayMode={displayMode}\n            changeDisplayMode={this.changeDisplayMode}\n            handleChangeSelectAll={this.handleChangeSelectAll}\n            changeOrderBy={this.changeOrderBy}\n            changePageSize={this.changePageSize}\n            selectedPageSize={selectedPageSize}\n            totalItemCount={totalItemCount}\n            selectedOrderOption={selectedOrderOption}\n            match={match}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            itemsLength={items ? items.length : 0}\n            onSearchKey={this.onSearchKey}\n            orderOptions={orderOptions}\n            pageSizes={pageSizes}\n            toggleModal={this.toggleModal}\n          />\n          <AddNewModal\n            modalOpen={modalOpen}\n            toggleModal={this.toggleModal}\n            categories={categories}\n          />\n          <Row>\n            {this.state.items.map(product => {\n              if (this.state.displayMode === \"imagelist\") {\n                return (\n                  <ImageListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    collect={collect}\n                    onCheckItem={this.onCheckItem}\n                  />\n                );\n              } else if (this.state.displayMode === \"thumblist\") {\n                return (\n                  <ThumbListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    collect={collect}\n                    onCheckItem={this.onCheckItem}\n                  />\n                );\n              } else {\n                return (\n                  <DataListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    onCheckItem={this.onCheckItem}\n                    collect={collect}\n                  />\n                );\n              }\n            })}{\" \"}\n            <Pagination\n              currentPage={this.state.currentPage}\n              totalPage={this.state.totalPage}\n              onChangePage={i => this.onChangePage(i)}\n            />\n            <ContextMenuContainer\n              onContextMenuClick={this.onContextMenuClick}\n              onContextMenu={this.onContextMenu}\n            />\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default ClassPage;"]},"metadata":{},"sourceType":"module"}