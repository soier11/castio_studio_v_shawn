{"ast":null,"code":"import React,{Component,Suspense}from'react';import{connect}from'react-redux';import{BrowserRouter as Router,Route,Switch,Redirect}from'react-router-dom';import{IntlProvider}from'react-intl';import AppLocale from'./lang';import ColorSwitcher from'./components/common/ColorSwitcher';import NotificationContainer from'./components/common/react-notifications/NotificationContainer';import{isMultiColorActive}from'./constants/defaultValues';import{getDirection}from'./helpers/Utils';const ViewMain=React.lazy(()=>import(/* webpackChunkName: \"views\" */'./views'));const ViewStudio=React.lazy(()=>import(/* webpackChunkName: \"views-app\" */'./views/studio'));const ViewApp=React.lazy(()=>import(/* webpackChunkName: \"views-app\" */'./views/app'));const ViewError=React.lazy(()=>import(/* webpackChunkName: \"views-error\" */'./views/error'));class App extends Component{constructor(props){super(props);const direction=getDirection();if(direction.isRtl){document.body.classList.add('rtl');document.body.classList.remove('ltr');}else{document.body.classList.add('ltr');document.body.classList.remove('rtl');}}render(){const locale=this.props.locale;const currentAppLocale=AppLocale[locale];return/*#__PURE__*/React.createElement(\"div\",{className:\"h-100\"},/*#__PURE__*/React.createElement(IntlProvider,{locale:currentAppLocale.locale,messages:currentAppLocale.messages},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(NotificationContainer,null),isMultiColorActive&&/*#__PURE__*/React.createElement(ColorSwitcher,null),/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",{className:\"loading\"})},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/studio\",render:props=>/*#__PURE__*/React.createElement(ViewStudio,props)}),/*#__PURE__*/React.createElement(Route,{path:\"/app\",render:props=>/*#__PURE__*/React.createElement(ViewApp,props)}),/*#__PURE__*/React.createElement(Route,{path:\"/error\",exact:true,render:props=>/*#__PURE__*/React.createElement(ViewError,props)}),/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true,render:props=>/*#__PURE__*/React.createElement(ViewMain,props)}),/*#__PURE__*/React.createElement(Redirect,{to:\"/error\"})))))));}}const mapStateToProps=({settings})=>{const locale=settings.locale;return{locale};};const mapActionsToProps={};export default connect(mapStateToProps,mapActionsToProps)(App);","map":{"version":3,"sources":["/Users/soier/Code/studio_v_shawn/studio_v2/src/App.js"],"names":["React","Component","Suspense","connect","BrowserRouter","Router","Route","Switch","Redirect","IntlProvider","AppLocale","ColorSwitcher","NotificationContainer","isMultiColorActive","getDirection","ViewMain","lazy","ViewStudio","ViewApp","ViewError","App","constructor","props","direction","isRtl","document","body","classList","add","remove","render","locale","currentAppLocale","messages","mapStateToProps","settings","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { IntlProvider } from 'react-intl';\r\nimport AppLocale from './lang';\r\nimport ColorSwitcher from './components/common/ColorSwitcher';\r\nimport NotificationContainer from './components/common/react-notifications/NotificationContainer';\r\nimport { isMultiColorActive } from './constants/defaultValues';\r\nimport { getDirection } from './helpers/Utils';\r\n\r\nconst ViewMain = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views\" */ './views')\r\n);\r\nconst ViewStudio = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ './views/studio')\r\n);\r\nconst ViewApp = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ './views/app')\r\n);\r\nconst ViewError = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-error\" */ './views/error')\r\n);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const direction = getDirection();\r\n    if (direction.isRtl) {\r\n      document.body.classList.add('rtl');\r\n      document.body.classList.remove('ltr');\r\n    } else {\r\n      document.body.classList.add('ltr');\r\n      document.body.classList.remove('rtl');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { locale } = this.props;\r\n    const currentAppLocale = AppLocale[locale];\r\n\r\n    return (\r\n      <div className=\"h-100\">\r\n        <IntlProvider\r\n          locale={currentAppLocale.locale}\r\n          messages={currentAppLocale.messages}\r\n        >\r\n          <React.Fragment>\r\n            <NotificationContainer />\r\n            {isMultiColorActive && <ColorSwitcher />}\r\n            <Suspense fallback={<div className=\"loading\" />}>\r\n              <Router>\r\n                <Switch>\r\n                  <Route\r\n                    path=\"/studio\"\r\n                    render={props => <ViewStudio {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/app\"\r\n                    render={props => <ViewApp {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/error\"\r\n                    exact\r\n                    render={props => <ViewError {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={props => <ViewMain {...props} />}\r\n                  />\r\n                  <Redirect to=\"/error\" />\r\n                </Switch>\r\n              </Router>\r\n            </Suspense>\r\n          </React.Fragment>\r\n        </IntlProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ settings }) => {\r\n  const { locale } = settings;\r\n  return { locale };\r\n};\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(App);\r\n"]},"metadata":{},"sourceType":"module"}