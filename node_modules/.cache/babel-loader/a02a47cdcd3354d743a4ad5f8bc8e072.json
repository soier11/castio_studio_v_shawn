{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from './reducers';\nimport sagas from \"./sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nexport function configureStore(initialState) {\n  const store = createStore(reducers, initialState, compose(applyMiddleware(...middlewares)));\n  sagaMiddleware.run(sagas);\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextRootReducer = require('./reducers');\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/soier/Code/santa/studio_v2/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","reducers","sagas","sagaMiddleware","middlewares","configureStore","initialState","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,OAAO,SAASE,cAAT,CAAwBC,YAAxB,EAAsC;AAEzC,QAAMC,KAAK,GAAGV,WAAW,CACrBI,QADqB,EAErBK,YAFqB,EAGrBP,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAHc,CAAzB;AAMAD,EAAAA,cAAc,CAACK,GAAf,CAAmBN,KAAnB;;AAEA,MAAIO,MAAM,CAACC,GAAX,EAAgB;AACZD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,MAAM;AAClC,YAAMC,eAAe,GAAGC,OAAO,CAAC,YAAD,CAA/B;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBF,eAArB;AACH,KAHD;AAIH;;AAED,SAAOL,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from './reducers';\r\nimport sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(sagas);\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}