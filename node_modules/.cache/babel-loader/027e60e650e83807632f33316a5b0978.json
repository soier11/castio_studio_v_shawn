{"ast":null,"code":"var _jsxFileName = \"/Users/soier/Code/santa/studio_v2/src/components/pages/SingleLightbox.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Lightbox from 'react-image-lightbox';\n\nclass SingleLightbox extends Component {\n  constructor(props) {\n    super(props);\n    this.onThumbClick = this.onThumbClick.bind(this);\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n  }\n\n  onThumbClick() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    const isOpen = this.state.isOpen;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"#\",\n      location: {},\n      onClick: () => this.onThumbClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.thumb,\n      alt: \"thumbnail\",\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    })), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n      mainSrc: this.props.large,\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default SingleLightbox;","map":{"version":3,"sources":["/Users/soier/Code/santa/studio_v2/src/components/pages/SingleLightbox.js"],"names":["React","Component","Fragment","NavLink","Lightbox","SingleLightbox","constructor","props","onThumbClick","bind","state","photoIndex","isOpen","setState","render","thumb","className","large"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAEnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CADH;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAID;;AAEDJ,EAAAA,YAAY,GAAG;AACb,SAAKK,QAAL,CAAc;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAd;AACH;;AAGDE,EAAAA,MAAM,GAAG;AAAA,UACGF,MADH,GACc,KAAKF,KADnB,CACGE,MADH;AAEL,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAgB,MAAA,QAAQ,EAAE,EAA1B;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKJ,YAAL,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWQ,KAArB;AAA4B,MAAA,GAAG,EAAC,WAAhC;AAA4C,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWS,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKKJ,MAAM,iBACH,oBAAC,QAAD;AACI,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWU,KADxB;AAEI,MAAA,cAAc,EAAE,MAAM,KAAKJ,QAAL,CAAc;AAAED,QAAAA,MAAM,EAAE;AAAV,OAAd,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CADJ;AAcH;;AAhCkC;;AAmCvC,eAAeP,cAAf","sourcesContent":["import React, { Component, Fragment }  from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Lightbox from 'react-image-lightbox';\r\n\r\nclass SingleLightbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onThumbClick = this.onThumbClick.bind(this);\r\n        this.state = {\r\n            photoIndex: 0,\r\n            isOpen: false,\r\n        };\r\n      }\r\n\r\n      onThumbClick() {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isOpen } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <NavLink to=\"#\" location={{}} onClick={() => this.onThumbClick()}>\r\n                    <img src={this.props.thumb} alt=\"thumbnail\" className={this.props.className}/>\r\n                </NavLink>\r\n\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={this.props.large}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                )}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleLightbox;"]},"metadata":{},"sourceType":"module"}