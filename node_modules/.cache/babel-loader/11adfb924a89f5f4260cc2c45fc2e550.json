{"ast":null,"code":"var _jsxFileName = \"/Users/soier/Code/santa/studio_v2/src/containers/pages/ListPageHeading.js\";\nimport React, { Component } from 'react';\nimport { Row, Button, ButtonDropdown, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, CustomInput, Collapse } from 'reactstrap';\nimport { injectIntl } from 'react-intl';\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../navs/Breadcrumb';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from '../../components/svg';\n\nclass ListPageHeading extends Component {\n  constructor(props) {\n    super();\n\n    this.toggleDisplayOptions = () => {\n      this.setState(prevState => ({\n        displayOptionsIsOpen: !prevState.displayOptionsIsOpen\n      }));\n    };\n\n    this.toggleSplit = () => {\n      this.setState(prevState => ({\n        dropdownSplitOpen: !prevState.dropdownSplitOpen\n      }));\n    };\n\n    this.state = {\n      dropdownSplitOpen: false,\n      displayOptionsIsOpen: false\n    };\n  }\n\n  render() {\n    const messages = this.props.intl.messages;\n    const _this$props = this.props,\n          displayMode = _this$props.displayMode,\n          changeDisplayMode = _this$props.changeDisplayMode,\n          handleChangeSelectAll = _this$props.handleChangeSelectAll,\n          changeOrderBy = _this$props.changeOrderBy,\n          changePageSize = _this$props.changePageSize,\n          selectedPageSize = _this$props.selectedPageSize,\n          totalItemCount = _this$props.totalItemCount,\n          selectedOrderOption = _this$props.selectedOrderOption,\n          match = _this$props.match,\n          startIndex = _this$props.startIndex,\n          endIndex = _this$props.endIndex,\n          selectedItemsLength = _this$props.selectedItemsLength,\n          itemsLength = _this$props.itemsLength,\n          onSearchKey = _this$props.onSearchKey,\n          orderOptions = _this$props.orderOptions,\n          pageSizes = _this$props.pageSizes,\n          toggleModal = _this$props.toggleModal,\n          heading = _this$props.heading;\n    const _this$state = this.state,\n          displayOptionsIsOpen = _this$state.displayOptionsIsOpen,\n          dropdownSplitOpen = _this$state.dropdownSplitOpen;\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Colxx, {\n      xxs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-zero top-right-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"lg\",\n      className: \"top-right-button\",\n      onClick: () => toggleModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"pages.add-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    })), '  ', /*#__PURE__*/React.createElement(ButtonDropdown, {\n      isOpen: dropdownSplitOpen,\n      toggle: this.toggleSplit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      className: \"custom-checkbox mb-0 d-inline-block\",\n      type: \"checkbox\",\n      id: \"checkAll\",\n      checked: selectedItemsLength >= itemsLength,\n      onChange: () => handleChangeSelectAll(true),\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"custom-control-label \".concat(selectedItemsLength > 0 && selectedItemsLength < itemsLength ? 'indeterminate' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"primary\",\n      className: \"dropdown-toggle-split btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DropdownMenu, {\n      right: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DropdownItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"pages.delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DropdownItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"pages.another-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(Breadcrumb, {\n      match: match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"empty\",\n      className: \"pt-0 pl-0 d-inline-block d-md-none\",\n      onClick: this.toggleDisplayOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"pages.display-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), ' ', /*#__PURE__*/React.createElement(\"i\", {\n      className: \"simple-icon-arrow-down align-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: displayOptionsIsOpen,\n      className: \"d-md-block\",\n      id: \"displayOptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mr-3 d-inline-block float-md-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#/\",\n      className: \"mr-2 view-icon \".concat(displayMode === 'list' ? 'active' : ''),\n      onClick: () => changeDisplayMode('list'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataListIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#/\",\n      className: \"mr-2 view-icon \".concat(displayMode === 'thumblist' ? 'active' : ''),\n      onClick: () => changeDisplayMode('thumblist'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ThumbListIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#/\",\n      className: \"mr-2 view-icon \".concat(displayMode === 'imagelist' ? 'active' : ''),\n      onClick: () => changeDisplayMode('imagelist'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ImageListIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-block d-md-inline-block pt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      className: \"mr-1 float-md-left btn-group mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"outline-dark\",\n      size: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"pages.orderby\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }), selectedOrderOption.label), /*#__PURE__*/React.createElement(DropdownMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, orderOptions.map((order, index) => {\n      return /*#__PURE__*/React.createElement(DropdownItem, {\n        key: index,\n        onClick: () => changeOrderBy(order.column),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, order.label);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"keyword\",\n      id: \"search\",\n      placeholder: messages['menu.search'],\n      onKeyPress: e => onSearchKey(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-md-right pt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted text-small mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, \"\".concat(startIndex, \"-\").concat(endIndex, \" of \").concat(totalItemCount, \" \")), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n      className: \"d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"outline-dark\",\n      size: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, selectedPageSize), /*#__PURE__*/React.createElement(DropdownMenu, {\n      right: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, pageSizes.map((size, index) => {\n      return /*#__PURE__*/React.createElement(DropdownItem, {\n        key: index,\n        onClick: () => changePageSize(size),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      }, size);\n    })))))), /*#__PURE__*/React.createElement(Separator, {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(ListPageHeading);","map":{"version":3,"sources":["/Users/soier/Code/santa/studio_v2/src/containers/pages/ListPageHeading.js"],"names":["React","Component","Row","Button","ButtonDropdown","UncontrolledDropdown","DropdownMenu","DropdownItem","DropdownToggle","CustomInput","Collapse","injectIntl","Colxx","Separator","Breadcrumb","IntlMessages","DataListIcon","ThumbListIcon","ImageListIcon","ListPageHeading","constructor","props","toggleDisplayOptions","setState","prevState","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","state","render","messages","intl","displayMode","changeDisplayMode","handleChangeSelectAll","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","match","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","orderOptions","pageSizes","toggleModal","heading","label","map","order","index","column","e","size"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  ButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  CustomInput,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../navs/Breadcrumb';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  DataListIcon,\r\n  ThumbListIcon,\r\n  ImageListIcon,\r\n} from '../../components/svg';\r\nclass ListPageHeading extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      displayOptionsIsOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState((prevState) => ({\r\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen,\r\n    }));\r\n  };\r\n  toggleSplit = () => {\r\n    this.setState((prevState) => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    const {\r\n      displayMode,\r\n      changeDisplayMode,\r\n      handleChangeSelectAll,\r\n      changeOrderBy,\r\n      changePageSize,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      match,\r\n      startIndex,\r\n      endIndex,\r\n      selectedItemsLength,\r\n      itemsLength,\r\n      onSearchKey,\r\n      orderOptions,\r\n      pageSizes,\r\n      toggleModal,\r\n      heading,\r\n    } = this.props;\r\n\r\n    const { displayOptionsIsOpen, dropdownSplitOpen } = this.state;\r\n    return (\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <div className=\"mb-2\">\r\n            <h1>\r\n              <IntlMessages id={heading} />\r\n            </h1>\r\n\r\n            <div className=\"text-zero top-right-button-container\">\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                className=\"top-right-button\"\r\n                onClick={() => toggleModal()}>\r\n                <IntlMessages id=\"pages.add-file\" />\r\n              </Button>\r\n              {'  '}\r\n              <ButtonDropdown\r\n                isOpen={dropdownSplitOpen}\r\n                toggle={this.toggleSplit}>\r\n                <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\r\n                  <CustomInput\r\n                    className=\"custom-checkbox mb-0 d-inline-block\"\r\n                    type=\"checkbox\"\r\n                    id=\"checkAll\"\r\n                    checked={selectedItemsLength >= itemsLength}\r\n                    onChange={() => handleChangeSelectAll(true)}\r\n                    label={\r\n                      <span\r\n                        className={`custom-control-label ${\r\n                          selectedItemsLength > 0 &&\r\n                          selectedItemsLength < itemsLength\r\n                            ? 'indeterminate'\r\n                            : ''\r\n                        }`}\r\n                      />\r\n                    }\r\n                  />\r\n                </div>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"primary\"\r\n                  className=\"dropdown-toggle-split btn-lg\"\r\n                />\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.delete\" />\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.another-action\" />\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </ButtonDropdown>\r\n            </div>\r\n            <Breadcrumb match={match} />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <Button\r\n              color=\"empty\"\r\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n              onClick={this.toggleDisplayOptions}>\r\n              <IntlMessages id=\"pages.display-options\" />{' '}\r\n              <i className=\"simple-icon-arrow-down align-middle\" />\r\n            </Button>\r\n            <Collapse\r\n              isOpen={displayOptionsIsOpen}\r\n              className=\"d-md-block\"\r\n              id=\"displayOptions\">\r\n              <span className=\"mr-3 d-inline-block float-md-left\">\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'list' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('list')}>\r\n                  <DataListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'thumblist' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('thumblist')}>\r\n                  <ThumbListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'imagelist' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('imagelist')}>\r\n                  <ImageListIcon />\r\n                </a>\r\n              </span>\r\n\r\n              <div className=\"d-block d-md-inline-block pt-1\">\r\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    <IntlMessages id=\"pages.orderby\" />\r\n                    {selectedOrderOption.label}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {orderOptions.map((order, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changeOrderBy(order.column)}>\r\n                          {order.label}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    id=\"search\"\r\n                    placeholder={messages['menu.search']}\r\n                    onKeyPress={(e) => onSearchKey(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"float-md-right pt-1\">\r\n                <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    {selectedPageSize}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    {pageSizes.map((size, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changePageSize(size)}>\r\n                          {size}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ListPageHeading);\r\n"]},"metadata":{},"sourceType":"module"}