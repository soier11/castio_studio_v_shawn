{"ast":null,"code":"import _objectSpread from\"/Users/soier/Code/studio_v_shawn/studio_v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import ChartComponent,{Chart}from\"react-chartjs-2\";import{centerTextPlugin}from\"./util\";import{doughnutChartOptions}from\"./config\";export default class Doughnut extends React.Component{constructor(props){super(props);if(this.props.shadow){Chart.defaults.doughnutWithShadow=Chart.defaults.doughnut;Chart.controllers.doughnutWithShadow=Chart.controllers.doughnut.extend({draw:function draw(ease){Chart.controllers.doughnut.prototype.draw.call(this,ease);let ctx=this.chart.chart.ctx;ctx.save();ctx.shadowColor=\"rgba(0,0,0,0.15)\";ctx.shadowBlur=10;ctx.shadowOffsetX=0;ctx.shadowOffsetY=10;ctx.responsive=true;Chart.controllers.doughnut.prototype.draw.apply(this,arguments);ctx.restore();}});}}render(){const _this$props=this.props,data=_this$props.data,shadow=_this$props.shadow;return/*#__PURE__*/React.createElement(ChartComponent,{ref:_ref=>this.chart_instance=_ref&&_ref.chart_instance,type:shadow?\"doughnutWithShadow\":\"doughnut\",plugins:[centerTextPlugin],options:_objectSpread({},doughnutChartOptions),data:data});}}","map":{"version":3,"sources":["/Users/soier/Code/studio_v_shawn/studio_v2/src/components/charts/Doughnut.js"],"names":["React","ChartComponent","Chart","centerTextPlugin","doughnutChartOptions","Doughnut","Component","constructor","props","shadow","defaults","doughnutWithShadow","doughnut","controllers","extend","draw","ease","prototype","call","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","responsive","apply","arguments","restore","render","data","ref","chart_instance"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,EAAyBC,KAAzB,KAAsC,iBAAtC,CAEA,OAASC,gBAAT,KAAiC,QAAjC,CACA,OAASC,oBAAT,KAAqC,UAArC,CAEA,cAAe,MAAMC,CAAAA,QAAN,QAAuBL,CAAAA,KAAK,CAACM,SAAU,CACpDC,WAAW,CAACC,KAAD,CAAQ,CACjB,MAAMA,KAAN,EACA,GAAI,KAAKA,KAAL,CAAWC,MAAf,CAAuB,CACrBP,KAAK,CAACQ,QAAN,CAAeC,kBAAf,CAAoCT,KAAK,CAACQ,QAAN,CAAeE,QAAnD,CACAV,KAAK,CAACW,WAAN,CAAkBF,kBAAlB,CAAuCT,KAAK,CAACW,WAAN,CAAkBD,QAAlB,CAA2BE,MAA3B,CAAkC,CACvEC,IAAI,CAAE,cAASC,IAAT,CAAe,CACnBd,KAAK,CAACW,WAAN,CAAkBD,QAAlB,CAA2BK,SAA3B,CAAqCF,IAArC,CAA0CG,IAA1C,CAA+C,IAA/C,CAAqDF,IAArD,EACA,GAAIG,CAAAA,GAAG,CAAG,KAAKC,KAAL,CAAWA,KAAX,CAAiBD,GAA3B,CACAA,GAAG,CAACE,IAAJ,GACAF,GAAG,CAACG,WAAJ,CAAkB,kBAAlB,CACAH,GAAG,CAACI,UAAJ,CAAiB,EAAjB,CACAJ,GAAG,CAACK,aAAJ,CAAoB,CAApB,CACAL,GAAG,CAACM,aAAJ,CAAoB,EAApB,CACAN,GAAG,CAACO,UAAJ,CAAiB,IAAjB,CACAxB,KAAK,CAACW,WAAN,CAAkBD,QAAlB,CAA2BK,SAA3B,CAAqCF,IAArC,CAA0CY,KAA1C,CAAgD,IAAhD,CAAsDC,SAAtD,EACAT,GAAG,CAACU,OAAJ,GACD,CAZsE,CAAlC,CAAvC,CAcD,CACF,CAEDC,MAAM,EAAG,mBACkB,KAAKtB,KADvB,CACCuB,IADD,aACCA,IADD,CACOtB,MADP,aACOA,MADP,CAEP,mBACE,oBAAC,cAAD,EACE,GAAG,CAAEuB,IAAG,EAAK,KAAKC,cAAL,CAAsBD,IAAG,EAAIA,IAAG,CAACC,cADhD,CAEE,IAAI,CAAExB,MAAM,CAAG,oBAAH,CAA0B,UAFxC,CAGE,OAAO,CAAE,CAACN,gBAAD,CAHX,CAIE,OAAO,kBACFC,oBADE,CAJT,CAOE,IAAI,CAAE2B,IAPR,EADF,CAWD,CAnCmD","sourcesContent":["import React from \"react\";\r\nimport ChartComponent, { Chart } from \"react-chartjs-2\";\r\n\r\nimport { centerTextPlugin } from \"./util\";\r\nimport { doughnutChartOptions } from \"./config\";\r\n\r\nexport default class Doughnut extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (this.props.shadow) {\r\n      Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\r\n      Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend({\r\n        draw: function(ease) {\r\n          Chart.controllers.doughnut.prototype.draw.call(this, ease);\r\n          let ctx = this.chart.chart.ctx;\r\n          ctx.save();\r\n          ctx.shadowColor = \"rgba(0,0,0,0.15)\";\r\n          ctx.shadowBlur = 10;\r\n          ctx.shadowOffsetX = 0;\r\n          ctx.shadowOffsetY = 10;\r\n          ctx.responsive = true;\r\n          Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\r\n          ctx.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, shadow } = this.props;\r\n    return (\r\n      <ChartComponent\r\n        ref={ref => (this.chart_instance = ref && ref.chart_instance)}\r\n        type={shadow ? \"doughnutWithShadow\" : \"doughnut\"}\r\n        plugins={[centerTextPlugin]}\r\n        options={{\r\n          ...doughnutChartOptions\r\n        }}\r\n        data={data}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}