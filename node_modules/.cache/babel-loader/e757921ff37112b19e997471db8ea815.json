{"ast":null,"code":"import React,{Component}from\"react\";import Switch from\"rc-switch\";import\"rc-switch/assets/index.css\";import{Tooltip}from\"reactstrap\";import{defaultColor,themeColorStorageKey}from\"../../constants/defaultValues\";export default class TopnavDarkSwitch extends Component{constructor(props){super(props);this.toggle=()=>{this.setState(prevState=>({tooltipOpen:!prevState.tooltipOpen}));};this.getColor=()=>{return localStorage.getItem(themeColorStorageKey)?localStorage.getItem(themeColorStorageKey):defaultColor;};this.changeMode=()=>{let color=this.getColor();if(color.indexOf('dark')>-1){color=color.replace('dark','light');}else if(color.indexOf('light')>-1){color=color.replace('light','dark');}this.setState({switchChecked:color.indexOf('dark')>-1},()=>{localStorage.setItem(themeColorStorageKey,color);setTimeout(()=>{window.location.reload();},500);});};this.state={switchChecked:false,tooltipOpen:false};}componentDidMount(){const color=this.getColor();this.setState({switchChecked:color.indexOf('dark')>-1});}render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"d-none d-md-inline-block align-middle mr-3\"},/*#__PURE__*/React.createElement(Switch,{id:\"Tooltip-Switch\",className:\"custom-switch custom-switch-primary custom-switch-small\",checked:this.state.switchChecked,onChange:this.changeMode}),/*#__PURE__*/React.createElement(Tooltip,{placement:\"left\",isOpen:this.state.tooltipOpen,target:\"Tooltip-Switch\",toggle:this.toggle},\"Dark Mode\"));}}","map":{"version":3,"sources":["/Users/soier/Code/studio_v_shawn/studio_v2/src/containers/navs/Topnav.DarkSwitch.js"],"names":["React","Component","Switch","Tooltip","defaultColor","themeColorStorageKey","TopnavDarkSwitch","constructor","props","toggle","setState","prevState","tooltipOpen","getColor","localStorage","getItem","changeMode","color","indexOf","replace","switchChecked","setItem","setTimeout","window","location","reload","state","componentDidMount","render"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAO,4BAAP,CACA,OAASC,OAAT,KAAwB,YAAxB,CAEA,OAASC,YAAT,CAAsBC,oBAAtB,KAAkD,+BAAlD,CAEA,cAAe,MAAMC,CAAAA,gBAAN,QAA+BL,CAAAA,SAAU,CACtDM,WAAW,CAACC,KAAD,CAAQ,CACjB,MAAMA,KAAN,EADiB,KAcnBC,MAdmB,CAcV,IAAM,CACb,KAAKC,QAAL,CAAcC,SAAS,GAAK,CAC1BC,WAAW,CAAE,CAACD,SAAS,CAACC,WADE,CAAL,CAAvB,EAGD,CAlBkB,MAoBnBC,QApBmB,CAoBR,IAAM,CACf,MAAOC,CAAAA,YAAY,CAACC,OAAb,CAAqBV,oBAArB,EACHS,YAAY,CAACC,OAAb,CAAqBV,oBAArB,CADG,CAEHD,YAFJ,CAGD,CAxBkB,MAyBnBY,UAzBmB,CAyBN,IAAM,CACjB,GAAIC,CAAAA,KAAK,CAAG,KAAKJ,QAAL,EAAZ,CAEA,GAAGI,KAAK,CAACC,OAAN,CAAc,MAAd,EAAsB,CAAC,CAA1B,CAA4B,CACxBD,KAAK,CAAEA,KAAK,CAACE,OAAN,CAAc,MAAd,CAAqB,OAArB,CAAP,CACH,CAFD,IAEM,IAAGF,KAAK,CAACC,OAAN,CAAc,OAAd,EAAuB,CAAC,CAA3B,CAA6B,CAC/BD,KAAK,CAAEA,KAAK,CAACE,OAAN,CAAc,OAAd,CAAsB,MAAtB,CAAP,CACH,CAED,KAAKT,QAAL,CAAc,CACVU,aAAa,CAACH,KAAK,CAACC,OAAN,CAAc,MAAd,EAAsB,CAAC,CAD3B,CAAd,CAEI,IAAI,CACFJ,YAAY,CAACO,OAAb,CAAqBhB,oBAArB,CAA0CY,KAA1C,EACFK,UAAU,CAAC,IAAM,CACbC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CAFO,CAEL,GAFK,CAAV,CAGD,CAPH,EAQD,CA1CkB,CAEjB,KAAKC,KAAL,CAAa,CACXN,aAAa,CAAE,KADJ,CAEXR,WAAW,CAAE,KAFF,CAAb,CAID,CACDe,iBAAiB,EAAE,CACf,KAAMV,CAAAA,KAAK,CAAG,KAAKJ,QAAL,EAAd,CACI,KAAKH,QAAL,CAAc,CACZU,aAAa,CAACH,KAAK,CAACC,OAAN,CAAc,MAAd,EAAsB,CAAC,CADzB,CAAd,EAGP,CAgCDU,MAAM,EAAG,CACP,mBACE,2BAAK,SAAS,CAAC,4CAAf,eACE,oBAAC,MAAD,EACE,EAAE,CAAC,gBADL,CAEE,SAAS,CAAC,yDAFZ,CAGE,OAAO,CAAE,KAAKF,KAAL,CAAWN,aAHtB,CAIE,QAAQ,CAAE,KAAKJ,UAJjB,EADF,cAQE,oBAAC,OAAD,EACE,SAAS,CAAC,MADZ,CAEE,MAAM,CAAE,KAAKU,KAAL,CAAWd,WAFrB,CAGE,MAAM,CAAE,gBAHV,CAIE,MAAM,CAAE,KAAKH,MAJf,cARF,CADF,CAmBD,CAjEqD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Switch from \"rc-switch\";\r\nimport \"rc-switch/assets/index.css\";\r\nimport { Tooltip } from \"reactstrap\";\r\n\r\nimport { defaultColor,themeColorStorageKey } from \"../../constants/defaultValues\";\r\n\r\nexport default class TopnavDarkSwitch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      switchChecked: false,\r\n      tooltipOpen: false\r\n    };\r\n  }\r\n  componentDidMount(){\r\n      const color = this.getColor();\r\n          this.setState({\r\n            switchChecked:color.indexOf('dark')>-1\r\n          })\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      tooltipOpen: !prevState.tooltipOpen\r\n    }));\r\n  };\r\n\r\n  getColor = () => {\r\n    return localStorage.getItem(themeColorStorageKey)\r\n      ? localStorage.getItem(themeColorStorageKey)\r\n      : defaultColor;\r\n  };\r\n  changeMode = () => {\r\n    let color = this.getColor();\r\n\r\n    if(color.indexOf('dark')>-1){\r\n        color= color.replace('dark','light')\r\n    }else if(color.indexOf('light')>-1){\r\n        color= color.replace('light','dark')\r\n    }\r\n\r\n    this.setState({\r\n        switchChecked:color.indexOf('dark')>-1\r\n      },()=>{\r\n          localStorage.setItem(themeColorStorageKey,color)\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n          }, 500);\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n        <Switch\r\n          id=\"Tooltip-Switch\"\r\n          className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n          checked={this.state.switchChecked}\r\n          onChange={this.changeMode}\r\n        />\r\n\r\n        <Tooltip\r\n          placement=\"left\"\r\n          isOpen={this.state.tooltipOpen}\r\n          target={\"Tooltip-Switch\"}\r\n          toggle={this.toggle}\r\n        >\r\n          Dark Mode\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}