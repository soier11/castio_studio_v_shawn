{"ast":null,"code":"import { unpad } from 'pkcs7';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0; // Compute double and third tables\n\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x; // Compute MixColumns\n\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  } // Compactify. Considerable speedup on Firefox.\n\n\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n\n  return tables;\n};\n\nvar aesTables = null;\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n\n    if (!aesTables) {\n      aesTables = precompute();\n    } // then make a copy of that object for use\n\n\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey]; // schedule encryption keys\n\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1]; // apply sbox\n\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    } // schedule decryption keys\n\n\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0; // key.length === 2 ?\n\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1]; // load up the tables\n\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;\n      b = b2;\n      c = c2;\n    } // Last round.\n\n\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;\n      a = b;\n      b = c;\n      c = d;\n      d = a2;\n    }\n  };\n\n  return AES;\n}();\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file async-stream.js\n */\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\n\n\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\n\n\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n  var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0; // iteration variable\n\n  var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n    this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    } // invoke the done() callback when everything is finished\n\n\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  /**\n   * @private\n   */\n\n\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\n\nexport { decrypt, Decrypter, AsyncStream };","map":{"version":3,"sources":["/Users/soier/Code/santa/studio_v2/node_modules/aes-decrypter/dist/aes-decrypter.es.js"],"names":["unpad","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","precompute","tables","encTable","decTable","sbox","sboxInv","x","xInv","d","th","x2","x4","x8","s","tEnc","tDec","slice","aesTables","AES","_tables","j","tmp","encKey","decKey","keyLen","rcon","Error","_key","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","offset","a","b","c","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","Stream","listeners","on","type","listener","push","off","index","indexOf","splice","trigger","callbacks","arguments","args","Array","_length","_i","apply","dispose","pipe","destination","data","AsyncStream","_Stream","_this","jobs","delay","timeout_","processJob_","shift","setTimeout","bind","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","buffer","byteOffset","byteLength","decipher","decrypted","Uint8Array","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","done","step","STEP","asyncStream_","decryptChunk_","subarray","Uint32Array","bytes","set","get","get$$1"],"mappings":"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","sourcesContent":["import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n"]},"metadata":{},"sourceType":"module"}