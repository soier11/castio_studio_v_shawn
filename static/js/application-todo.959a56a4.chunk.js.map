{"version":3,"sources":["components/common/ApplicationMenu.js","../node_modules/reactstrap/es/Badge.js","../node_modules/reactstrap/es/NavLink.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/ModalHeader.js","../node_modules/reactstrap/es/ModalBody.js","../node_modules/reactstrap/es/ModalFooter.js","../node_modules/reactstrap/es/Portal.js","../node_modules/reactstrap/es/Modal.js","components/applications/TodoListItem.js","containers/applications/AddNewTodoModal.js","containers/applications/TodoApplicationMenu.js","views/app/applications/todo.js","containers/navs/Breadcrumb.js","components/common/CustomSelectInput.js"],"names":["ApplicationMenu","React","Component","constructor","params","super","this","handleDocumentClick","bind","toggle","state","isOpen","e","container","ReactDOM","findDOMNode","contains","target","preventDefault","removeEvents","addEvents","setState","componentWillUnmount","forEach","event","document","addEventListener","removeEventListener","render","className","props","children","onClick","propTypes","color","PropTypes","string","pill","bool","tag","tagPropType","innerRef","oneOfType","object","func","node","cssModule","Badge","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","href","createElement","_extends","ref","defaultProps","disabled","active","any","NavLink","_React$Component","_this","call","_assertThisInitialized","_inheritsLoose","_proto","prototype","_this$props","ButtonDropdown","Dropdown","group","wrapTag","closeAriaLabel","charCode","number","close","ModalHeader","closeButton","WrapTag","closeIcon","String","fromCharCode","type","ModalBody","ModalFooter","isRequired","Portal","apply","arguments","defaultNode","body","removeChild","canUseDOM","appendChild","createPortal","noop","FadePropTypes","shape","Fade","autoFocus","centered","scrollable","size","keyboard","role","labelledBy","backdrop","oneOf","onEnter","onExit","onOpened","onClosed","wrapClassName","modalClassName","backdropClassName","contentClassName","external","fade","zIndex","backdropTransition","modalTransition","unmountOnClose","returnFocusAfterClose","propsToOmit","Object","keys","timeout","TransitionTimeouts","Modal","mountOnEnter","_element","_originalBodyPadding","getFocusableChildren","handleBackdropClick","handleBackdropMouseDown","handleEscape","handleStaticBackdropAnimation","handleTab","manageFocusAfterClose","clearBackdropAnimationTimeout","showStaticBackdropAnimation","componentDidMount","init","setFocus","_isMounted","componentDidUpdate","prevProps","prevState","style","destroy","isAppearing","onEntered","onExited","_dialog","parentNode","focus","querySelectorAll","focusableElements","join","getFocusedChild","currentFocus","focusableChildren","activeElement","err","_mouseDownElement","stopPropagation","which","totalFocusable","length","focusedIndex","i","shiftKey","keyCode","keyCodes","esc","_this2","_backdropAnimationTimeout","setTimeout","_triggeringElement","setAttribute","position","getOriginalBodyPadding","conditionallyUpdateScrollbar","openCount","modalOpenClassName","modalOpenClassNameRegex","RegExp","replace","trim","Math","max","setScrollbarWidth","renderModalDialog","_classNames","_this3","omit","dialogBaseClass","c","isModalHidden","display","_this$props2","modalAttributes","onMouseDown","onKeyUp","onKeyDown","tabIndex","hasTransition","_objectSpread2","baseClass","Backdrop","in","clearTimeout","undefined","memo","item","handleCheckChange","isSelected","xxs","Card","CardBody","to","location","id","status","title","category","createDate","labelColor","label","CustomInput","checked","onChange","detail","AddNewTodoModal","addNetItem","newItem","value","addTodoItem","toggleModal","todoApp","labels","categories","modalOpen","IntlMessages","Label","Input","defaultValue","components","CustomSelectInput","classNamePrefix","name","options","map","x","key","val","defaultChecked","Button","outline","connect","TodoApplicationMenu","addFilter","column","getTodoListWithFilter","todoItems","filter","allTodoItems","loading","suppressScrollX","wheelPropagation","NavItem","classnames","index","l","TodoApp","toggleDisplayOptions","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","changeOrderBy","getTodoListWithOrder","handleKeyPress","getTodoListSearch","lastChecked","selectedItems","assign","includes","push","selectedTodoItemsChange","items","start","getIndex","end","slice","min","Array","from","Set","handleChangeSelectAll","getTodoList","classList","add","remove","arr","prop","searchKeyword","orderColumn","orderColumns","messages","intl","Row","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Breadcrumb","match","Collapse","UncontrolledDropdown","o","placeholder","onKeyPress","injectIntl","getMenuTitle","sub","getUrl","path","split","BreadcrumbItems","console","log","substr","paths","indexOf","BreadcrumbContainer","heading","customProps","autoCorrect","autoCapitalize"],"mappings":"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","file":"static/js/application-todo.959a56a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { NavLink } from \"reactstrap\";\r\nexport default class ApplicationMenu extends React.Component {\r\n  constructor(...params) {\r\n    super(...params);\r\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  handleDocumentClick(e) {\r\n    const container = ReactDOM.findDOMNode(this);\r\n    if (container.contains(e.target) || container === e.target) {\r\n      return;\r\n    }\r\n\r\n    this.toggle(e);\r\n  }\r\n\r\n  toggle(e) {\r\n    e.preventDefault();\r\n    const isOpen = this.state.isOpen;\r\n    if (!isOpen) {\r\n      this.addEvents();\r\n    } else {\r\n      this.removeEvents();\r\n    }\r\n    this.setState({\r\n      isOpen: !isOpen\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n  }\r\n\r\n  addEvents() {\r\n    [\"click\", \"touchstart\"].forEach(event =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  }\r\n\r\n  removeEvents() {\r\n    [\"click\", \"touchstart\"].forEach(event =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`app-menu ${this.state.isOpen ? \"shown\" : \"\"}`}>\r\n        {this.props.children}\r\n\r\n        <NavLink\r\n          className=\"app-menu-button d-inline-block d-xl-none\"\r\n          onClick={this.toggle}\r\n        >\r\n          <i className=\"simple-icon-options\" />\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  onClick: PropTypes.func,\n  href: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar NavLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavLink, _React$Component);\n\n  function NavLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = NavLink.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.href === '#') {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        active = _this$props.active,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"active\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, 'nav-link', {\n      disabled: attributes.disabled,\n      active: active\n    }), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      onClick: this.onClick,\n      className: classes\n    }));\n  };\n\n  return NavLink;\n}(React.Component);\n\nNavLink.propTypes = propTypes;\nNavLink.defaultProps = defaultProps;\nexport default NavLink;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      charCode = props.charCode,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    closeButton = React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('close', cssModule),\n      \"aria-label\": closeAriaLabel\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, closeIcon));\n  }\n\n  return React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalBody = function ModalBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalBody.propTypes = propTypes;\nModalBody.defaultProps = defaultProps;\nexport default ModalBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { canUseDOM } from './utils';\nvar propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nvar Portal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Portal, _React$Component);\n\n  function Portal() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Portal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.defaultNode) {\n      document.body.removeChild(this.defaultNode);\n    }\n\n    this.defaultNode = null;\n  };\n\n  _proto.render = function render() {\n    if (!canUseDOM) {\n      return null;\n    }\n\n    if (!this.props.node && !this.defaultNode) {\n      this.defaultNode = document.createElement('div');\n      document.body.appendChild(this.defaultNode);\n    }\n\n    return ReactDOM.createPortal(this.props.children, this.props.node || this.defaultNode);\n  };\n\n  return Portal;\n}(React.Component);\n\nPortal.propTypes = propTypes;\nexport default Portal;","import _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from './Portal';\nimport Fade from './Fade';\nimport { getOriginalBodyPadding, conditionallyUpdateScrollbar, setScrollbarWidth, mapToCssModules, omit, focusableElements, TransitionTimeouts, keyCodes } from './utils';\n\nfunction noop() {}\n\nvar FadePropTypes = PropTypes.shape(Fade.propTypes);\nvar propTypes = {\n  isOpen: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  centered: PropTypes.bool,\n  scrollable: PropTypes.bool,\n  size: PropTypes.string,\n  toggle: PropTypes.func,\n  keyboard: PropTypes.bool,\n  role: PropTypes.string,\n  labelledBy: PropTypes.string,\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n  onEnter: PropTypes.func,\n  onExit: PropTypes.func,\n  onOpened: PropTypes.func,\n  onClosed: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  wrapClassName: PropTypes.string,\n  modalClassName: PropTypes.string,\n  backdropClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  external: PropTypes.node,\n  fade: PropTypes.bool,\n  cssModule: PropTypes.object,\n  zIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  backdropTransition: FadePropTypes,\n  modalTransition: FadePropTypes,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  unmountOnClose: PropTypes.bool,\n  returnFocusAfterClose: PropTypes.bool\n};\nvar propsToOmit = Object.keys(propTypes);\nvar defaultProps = {\n  isOpen: false,\n  autoFocus: true,\n  centered: false,\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  modalTransition: {\n    timeout: TransitionTimeouts.Modal\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade // uses standard fade transition\n\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true\n};\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Modal, _React$Component);\n\n  function Modal(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this._element = null;\n    _this._originalBodyPadding = null;\n    _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_this));\n    _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_this));\n    _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_this));\n    _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_this));\n    _this.handleStaticBackdropAnimation = _this.handleStaticBackdropAnimation.bind(_assertThisInitialized(_this));\n    _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_this));\n    _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_this));\n    _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));\n    _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind(_assertThisInitialized(_this));\n    _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: false,\n      showStaticBackdropAnimation: false\n    };\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n        isOpen = _this$props.isOpen,\n        autoFocus = _this$props.autoFocus,\n        onEnter = _this$props.onEnter;\n\n    if (isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      });\n\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    }\n\n    this._isMounted = true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      }); // let render() renders Modal Dialog first\n\n      return;\n    } // now Modal Dialog is rendered and we can refer this._element and this._dialog\n\n\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n\n      if (this.props.isOpen) {\n        this.close();\n      }\n    }\n\n    this._isMounted = false;\n  };\n\n  _proto.onOpened = function onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.modalTransition.onEntered || noop)(node, isAppearing);\n  };\n\n  _proto.onClosed = function onClosed(node) {\n    var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted\n\n    this.props.onClosed();\n    (this.props.modalTransition.onExited || noop)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  _proto.setFocus = function setFocus() {\n    if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {\n      this._dialog.parentNode.focus();\n    }\n  };\n\n  _proto.getFocusableChildren = function getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  };\n\n  _proto.getFocusedChild = function getFocusedChild() {\n    var currentFocus;\n    var focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n\n    return currentFocus;\n  } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  ;\n\n  _proto.handleBackdropClick = function handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n      var backdrop = this._dialog ? this._dialog.parentNode : null;\n\n      if (backdrop && e.target === backdrop && this.props.backdrop === 'static') {\n        this.handleStaticBackdropAnimation();\n      }\n\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  };\n\n  _proto.handleTab = function handleTab(e) {\n    if (e.which !== 9) return;\n    var focusableChildren = this.getFocusableChildren();\n    var totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    var currentFocus = this.getFocusedChild();\n    var focusedIndex = 0;\n\n    for (var i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  };\n\n  _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  };\n\n  _proto.handleEscape = function handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.toggle(e);\n      } else if (this.props.backdrop === 'static') {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleStaticBackdropAnimation();\n      }\n    }\n  };\n\n  _proto.handleStaticBackdropAnimation = function handleStaticBackdropAnimation() {\n    var _this2 = this;\n\n    this.clearBackdropAnimationTimeout();\n    this.setState({\n      showStaticBackdropAnimation: true\n    });\n    this._backdropAnimationTimeout = setTimeout(function () {\n      _this2.setState({\n        showStaticBackdropAnimation: false\n      });\n    }, 100);\n  };\n\n  _proto.init = function init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n\n      this._element.setAttribute('tabindex', '-1');\n\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      document.body.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n\n    if (Modal.openCount === 0) {\n      document.body.className = classNames(document.body.className, mapToCssModules('modal-open', this.props.cssModule));\n    }\n\n    Modal.openCount += 1;\n  };\n\n  _proto.destroy = function destroy() {\n    if (this._element) {\n      document.body.removeChild(this._element);\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  };\n\n  _proto.manageFocusAfterClose = function manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      var returnFocusAfterClose = this.props.returnFocusAfterClose;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  };\n\n  _proto.close = function close() {\n    if (Modal.openCount <= 1) {\n      var modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule); // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n\n      var modalOpenClassNameRegex = new RegExp(\"(^| )\" + modalOpenClassName + \"( |$)\");\n      document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();\n    }\n\n    this.manageFocusAfterClose();\n    Modal.openCount = Math.max(0, Modal.openCount - 1);\n    setScrollbarWidth(this._originalBodyPadding);\n  };\n\n  _proto.renderModalDialog = function renderModalDialog() {\n    var _classNames,\n        _this3 = this;\n\n    var attributes = omit(this.props, propsToOmit);\n    var dialogBaseClass = 'modal-dialog';\n    return React.createElement(\"div\", _extends({}, attributes, {\n      className: mapToCssModules(classNames(dialogBaseClass, this.props.className, (_classNames = {}, _classNames[\"modal-\" + this.props.size] = this.props.size, _classNames[dialogBaseClass + \"-centered\"] = this.props.centered, _classNames[dialogBaseClass + \"-scrollable\"] = this.props.scrollable, _classNames)), this.props.cssModule),\n      role: \"document\",\n      ref: function ref(c) {\n        _this3._dialog = c;\n      }\n    }), React.createElement(\"div\", {\n      className: mapToCssModules(classNames('modal-content', this.props.contentClassName), this.props.cssModule)\n    }, this.props.children));\n  };\n\n  _proto.render = function render() {\n    var unmountOnClose = this.props.unmountOnClose;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      var isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isModalHidden ? 'none' : 'block';\n      var _this$props2 = this.props,\n          wrapClassName = _this$props2.wrapClassName,\n          modalClassName = _this$props2.modalClassName,\n          backdropClassName = _this$props2.backdropClassName,\n          cssModule = _this$props2.cssModule,\n          isOpen = _this$props2.isOpen,\n          backdrop = _this$props2.backdrop,\n          role = _this$props2.role,\n          labelledBy = _this$props2.labelledBy,\n          external = _this$props2.external,\n          innerRef = _this$props2.innerRef;\n      var modalAttributes = {\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown,\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        style: {\n          display: 'block'\n        },\n        'aria-labelledby': labelledBy,\n        role: role,\n        tabIndex: '-1'\n      };\n      var hasTransition = this.props.fade;\n\n      var modalTransition = _objectSpread2({}, Fade.defaultProps, {}, this.props.modalTransition, {\n        baseClass: hasTransition ? this.props.modalTransition.baseClass : '',\n        timeout: hasTransition ? this.props.modalTransition.timeout : 0\n      });\n\n      var backdropTransition = _objectSpread2({}, Fade.defaultProps, {}, this.props.backdropTransition, {\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0\n      });\n\n      var Backdrop = backdrop && (hasTransition ? React.createElement(Fade, _extends({}, backdropTransition, {\n        in: isOpen && !!backdrop,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames('modal-backdrop', backdropClassName), cssModule)\n      })) : React.createElement(\"div\", {\n        className: mapToCssModules(classNames('modal-backdrop', 'show', backdropClassName), cssModule)\n      }));\n      return React.createElement(Portal, {\n        node: this._element\n      }, React.createElement(\"div\", {\n        className: mapToCssModules(wrapClassName)\n      }, React.createElement(Fade, _extends({}, modalAttributes, modalTransition, {\n        in: isOpen,\n        onEntered: this.onOpened,\n        onExited: this.onClosed,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule),\n        innerRef: innerRef\n      }), external, this.renderModalDialog()), Backdrop));\n    }\n\n    return null;\n  };\n\n  _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  };\n\n  return Modal;\n}(React.Component);\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.openCount = 0;\nexport default Modal;","import React from \"react\";\r\nimport { Card, CardBody, Badge, CustomInput } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Colxx } from \"../common/CustomBootstrap\";\r\n\r\nconst TodoListItem = ({ item, handleCheckChange,isSelected }) => {\r\n  return (\r\n    <Colxx xxs=\"12\">\r\n      <Card className=\"card d-flex mb-3\">\r\n        <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n          <CardBody className=\"align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\r\n            <NavLink\r\n              to=\"#\"\r\n              location={{}}\r\n              id={`toggler${item.id}`}\r\n              className=\"list-item-heading mb-0 truncate w-40 w-xs-100  mb-1 mt-1\"\r\n            >\r\n              <i\r\n                className={`${\r\n                  item.status === \"COMPLETED\"\r\n                    ? \"simple-icon-check heading-icon\"\r\n                    : \"simple-icon-refresh heading-icon\"\r\n                }`}\r\n              />\r\n              <span className=\"align-middle d-inline-block\">{item.title}</span>\r\n            </NavLink>\r\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\r\n              {item.category}\r\n            </p>\r\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\r\n              {item.createDate}\r\n            </p>\r\n            <div className=\"w-15 w-xs-100\">\r\n              <Badge color={item.labelColor} pill>\r\n                {item.label}\r\n              </Badge>\r\n            </div>\r\n          </CardBody>\r\n          <div className=\"custom-control custom-checkbox pl-1 align-self-center mr-4\">\r\n            <CustomInput\r\n              className=\"itemCheck mb-0\"\r\n              type=\"checkbox\"\r\n              id={`check_${item.id}`}\r\n              checked={isSelected}\r\n              onChange={event => handleCheckChange(event, item.id)}\r\n              label=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body pt-1\">\r\n          <p className=\"mb-0\">{item.detail}</p>\r\n        </div>\r\n      </Card>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  CustomInput,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nimport { addTodoItem } from \"../../redux/actions\";\r\n\r\nclass AddNewTodoModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      detail: \"\",\r\n      label: {},\r\n      labelColor: \"\",\r\n      category: {},\r\n      status: \"PENDING\"\r\n    };\r\n  }\r\n\r\n  addNetItem = () => {\r\n    const newItem = {\r\n      title: this.state.title,\r\n      detail: this.state.detail,\r\n      label: this.state.label.value,\r\n      labelColor: this.state.label.color,\r\n      category: this.state.category.value,\r\n      status: this.state.status\r\n    };\r\n    this.props.addTodoItem(newItem);\r\n    this.props.toggleModal();\r\n    this.setState({\r\n      title: \"\",\r\n      detail: \"\",\r\n      label: {},\r\n      category: {},\r\n      status: \"PENDING\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { labels, categories } = this.props.todoApp;\r\n    const { modalOpen, toggleModal } = this.props;\r\n    return (\r\n      <Modal\r\n        isOpen={modalOpen}\r\n        toggle={toggleModal}\r\n        wrapClassName=\"modal-right\"\r\n        backdrop=\"static\"\r\n      >\r\n        <ModalHeader toggle={toggleModal}>\r\n          <IntlMessages id=\"todo.add-new-title\" />\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.title\" />\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            defaultValue={this.state.title}\r\n            onChange={event => {\r\n              this.setState({ title: event.target.value });\r\n            }}\r\n          />\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.detail\" />\r\n          </Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            defaultValue={this.state.detail}\r\n            onChange={event => {\r\n              this.setState({ detail: event.target.value });\r\n            }}\r\n          />\r\n\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.category\" />\r\n          </Label>\r\n          <Select\r\n            components={{ Input: CustomSelectInput }}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"react-select\"\r\n            name=\"form-field-name\"\r\n            options={categories.map((x, i) => {\r\n              return { label: x, value: x, key: i };\r\n            })}\r\n            value={this.state.category}\r\n            onChange={val => {\r\n              this.setState({ category: val });\r\n            }}\r\n          />\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.label\" />\r\n          </Label>\r\n          <Select\r\n            components={{ Input: CustomSelectInput }}\r\n            className=\"react-select\"\r\n            classNamePrefix=\"react-select\"\r\n            name=\"form-field-name\"\r\n            options={labels.map((x, i) => {\r\n              return {\r\n                label: x.label,\r\n                value: x.label,\r\n                key: i,\r\n                color: x.color\r\n              };\r\n            })}\r\n            value={this.state.label}\r\n            onChange={val => {\r\n              this.setState({ label: val });\r\n            }}\r\n          />\r\n\r\n          <Label className=\"mt-4\">\r\n            <IntlMessages id=\"todo.status\" />\r\n          </Label>\r\n          <CustomInput\r\n            type=\"radio\"\r\n            id=\"exCustomRadio\"\r\n            name=\"customRadio\"\r\n            label=\"COMPLETED\"\r\n            checked={this.state.status === \"COMPLETED\"}\r\n            onChange={event => {\r\n              this.setState({\r\n                status: event.target.value === \"on\" ? \"COMPLETED\" : \"PENDING\"\r\n              });\r\n            }}\r\n          />\r\n          <CustomInput\r\n            type=\"radio\"\r\n            id=\"exCustomRadio2\"\r\n            name=\"customRadio2\"\r\n            label=\"PENDING\"\r\n            defaultChecked={this.state.status === \"PENDING\"}\r\n            onChange={event => {\r\n              this.setState({\r\n                status: event.target.value !== \"on\" ? \"COMPLETED\" : \"PENDING\"\r\n              });\r\n            }}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" outline onClick={toggleModal}>\r\n            <IntlMessages id=\"todo.cancel\" />\r\n          </Button>\r\n          <Button color=\"primary\" onClick={() => this.addNetItem()}>\r\n            <IntlMessages id=\"todo.submit\" />\r\n          </Button>{\" \"}\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ todoApp }) => {\r\n  return {\r\n    todoApp\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    addTodoItem\r\n  }\r\n)(AddNewTodoModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavItem, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport classnames from \"classnames\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport ApplicationMenu from \"../../components/common/ApplicationMenu\";\r\nimport { getTodoListWithFilter } from \"../../redux/actions\";\r\nclass TodoApplicationMenu extends Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  addFilter = (column, value) => {\r\n    this.props.getTodoListWithFilter(column, value);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      todoItems,\r\n      filter,\r\n      allTodoItems,\r\n      loading,\r\n      labels,\r\n      categories\r\n    } = this.props.todoApp;\r\n\r\n    return (\r\n      <ApplicationMenu>\r\n        <PerfectScrollbar\r\n          options={{ suppressScrollX: true, wheelPropagation: false }}\r\n        >\r\n          <div className=\"p-4\">\r\n            <p className=\"text-muted text-small\">\r\n              <IntlMessages id=\"todo.status\" />\r\n            </p>\r\n            <ul className=\"list-unstyled mb-5\">\r\n              <NavItem className={classnames({ active: !filter })}>\r\n                <NavLink to=\"#\" onClick={e => this.addFilter(\"\", \"\")} location={{}}>\r\n                  <i className=\"simple-icon-reload\" />\r\n                  <IntlMessages id=\"todo.all-tasks\" />\r\n                  <span className=\"float-right\">\r\n                    {loading && allTodoItems.length}\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem\r\n                className={classnames({\r\n                  active:\r\n                    filter &&\r\n                    filter.column === \"status\" &&\r\n                    filter.value === \"PENDING\"\r\n                })}>\r\n                <NavLink\r\n                  location={{}}\r\n                  to=\"#\"\r\n                  onClick={e => this.addFilter(\"status\", \"PENDING\")}>\r\n                  <i className=\"simple-icon-refresh\" />\r\n                  <IntlMessages id=\"todo.pending-tasks\" />\r\n                  <span className=\"float-right\">\r\n                    {loading &&\r\n                      todoItems.filter(x => x.status === \"PENDING\").length}\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem\r\n                className={classnames({\r\n                  active:\r\n                    filter &&\r\n                    filter.column === \"status\" &&\r\n                    filter.value === \"COMPLETED\"\r\n                })}>\r\n                <NavLink\r\n                  to=\"#\"\r\n                  location={{}}\r\n                  onClick={e => this.addFilter(\"status\", \"COMPLETED\")}>\r\n                  <i className=\"simple-icon-check\" />\r\n                  <IntlMessages id=\"todo.completed-tasks\" />\r\n                  <span className=\"float-right\">\r\n                    {loading &&\r\n                      todoItems.filter(x => x.status === \"COMPLETED\").length}\r\n                  </span>\r\n                </NavLink>\r\n              </NavItem>\r\n            </ul>\r\n            <p className=\"text-muted text-small\">\r\n              <IntlMessages id=\"todo.categories\" />\r\n            </p>\r\n            <ul className=\"list-unstyled mb-5\">\r\n              {categories.map((c, index) => {\r\n                return (\r\n                  <NavItem key={index}>\r\n                    <div onClick={e => this.addFilter(\"category\", c)}>\r\n                      <div className=\"custom-control custom-radio\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"custom-control-input\"\r\n                          defaultChecked={\r\n                            filter &&\r\n                            filter.column === \"category\" &&\r\n                            filter.value === c\r\n                          }\r\n                        />\r\n                        <label className=\"custom-control-label\">{c}</label>\r\n                      </div>\r\n                    </div>\r\n                  </NavItem>\r\n                );\r\n              })}\r\n            </ul>\r\n            <p className=\"text-muted text-small\">\r\n              <IntlMessages id=\"todo.labels\" />\r\n            </p>\r\n            <div>\r\n              {labels.map((l, index) => {\r\n                return (\r\n                  <p className=\"d-sm-inline-block mb-1\" key={index}>\r\n                    <NavLink\r\n                      to=\"#\"\r\n                      location={{}}\r\n                      onClick={e => this.addFilter(\"label\", l.label)}\r\n                    >\r\n                      <Badge\r\n                        className=\"mb-1\"\r\n                        color={`${filter &&\r\n                          filter.column === \"label\" &&\r\n                          filter.value === l.label\r\n                          ? l.color\r\n                          : \"outline-\" + l.color\r\n                          }`}\r\n                        pill\r\n                      >\r\n                        {l.label}\r\n                      </Badge>\r\n                    </NavLink>\r\n                  </p>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </ApplicationMenu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ todoApp }) => {\r\n  return {\r\n    todoApp\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getTodoListWithFilter\r\n  }\r\n)(TodoApplicationMenu);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Collapse,\r\n  ButtonDropdown,\r\n  CustomInput\r\n} from \"reactstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\n\r\nimport {\r\n  getTodoList,\r\n  getTodoListWithOrder,\r\n  getTodoListSearch,\r\n  selectedTodoItemsChange\r\n} from \"../../../redux/actions\";\r\nimport TodoListItem from \"../../../components/applications/TodoListItem\";\r\nimport AddNewTodoModal from \"../../../containers/applications/AddNewTodoModal\";\r\nimport TodoApplicationMenu from \"../../../containers/applications/TodoApplicationMenu\";\r\n\r\nclass TodoApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      modalOpen: false,\r\n      lastChecked: null,\r\n\r\n      displayOptionsIsOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTodoList();\r\n    document.body.classList.add(\"right-menu\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.classList.remove(\"right-menu\");\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState({ displayOptionsIsOpen: !this.state.displayOptionsIsOpen });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen\r\n    });\r\n  };\r\n\r\n  toggleSplit = () => {\r\n    this.setState(prevState => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen\r\n    }));\r\n  };\r\n\r\n  changeOrderBy = column => {\r\n    this.props.getTodoListWithOrder(column);\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.props.getTodoListSearch(e.target.value);\r\n    }\r\n  };\r\n\r\n  handleCheckChange = (event, id) => {\r\n    if (this.state.lastChecked == null) {\r\n      this.setState({\r\n        lastChecked: id\r\n      });\r\n    }\r\n\r\n    let selectedItems = Object.assign([], this.props.todoApp.selectedItems);\r\n    if (selectedItems.includes(id)) {\r\n      selectedItems = selectedItems.filter(x => x !== id);\r\n    } else {\r\n      selectedItems.push(id);\r\n    }\r\n    this.props.selectedTodoItemsChange(selectedItems);\r\n\r\n    if (event.shiftKey) {\r\n      var items = this.props.todoApp.todoItems;\r\n      var start = this.getIndex(id, items, \"id\");\r\n      var end = this.getIndex(this.state.lastChecked, items, \"id\");\r\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\r\n      selectedItems.push(\r\n        ...items.map(item => {\r\n          return item.id;\r\n        })\r\n      );\r\n      selectedItems = Array.from(new Set(selectedItems));\r\n      this.props.selectedTodoItemsChange(selectedItems);\r\n    }\r\n    return;\r\n  };\r\n\r\n  handleChangeSelectAll = () => {\r\n    if (this.props.todoApp.loading) {\r\n      if (\r\n        this.props.todoApp.selectedItems.length >=\r\n        this.props.todoApp.todoItems.length\r\n      ) {\r\n        this.props.selectedTodoItemsChange([]);\r\n      } else {\r\n        this.props.selectedTodoItemsChange(\r\n          this.props.todoApp.todoItems.map(x => x.id)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  getIndex(value, arr, prop) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i][prop] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      todoItems,\r\n      searchKeyword,\r\n      loading,\r\n      orderColumn,\r\n      orderColumns,\r\n      selectedItems\r\n    } = this.props.todoApp;\r\n\r\n    const { messages } = this.props.intl;\r\n\r\n    const { modalOpen } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Row className=\"app-row survey-app\">\r\n          <Colxx xxs=\"12\">\r\n            <div className=\"mb-2\">\r\n              <h1>\r\n                <IntlMessages id=\"menu.todo\" />\r\n              </h1>\r\n              {loading && (\r\n                <div className=\"text-zero top-right-button-container\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"lg\"\r\n                    className=\"top-right-button\"\r\n                    onClick={this.toggleModal}\r\n                  >\r\n                    <IntlMessages id=\"todo.add-new\" />\r\n                  </Button>{\" \"}\r\n                  <ButtonDropdown\r\n                    isOpen={this.state.dropdownSplitOpen}\r\n                    toggle={this.toggleSplit}\r\n                  >\r\n                    <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\r\n                      <CustomInput\r\n                        className=\"custom-checkbox mb-0 d-inline-block\"\r\n                        type=\"checkbox\"\r\n                        id=\"checkAll\"\r\n                        checked={\r\n                          selectedItems.length >= todoItems.length\r\n                        }\r\n                        onClick={() => this.handleChangeSelectAll()}\r\n                        onChange={() => this.handleChangeSelectAll()}\r\n                        label={\r\n                          <span\r\n                            className={`custom-control-label ${selectedItems.length > 0 &&\r\n                              selectedItems.length < todoItems.length\r\n                              ? \"indeterminate\"\r\n                              : \"\"\r\n                              }`}\r\n                          />\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <DropdownToggle\r\n                      caret\r\n                      color=\"primary\"\r\n                      className=\"dropdown-toggle-split btn-lg\"\r\n                    />\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        <IntlMessages id=\"todo.action\" />\r\n                      </DropdownItem>\r\n                      <DropdownItem>\r\n                        <IntlMessages id=\"todo.another-action\" />\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </ButtonDropdown>\r\n                </div>\r\n              )}\r\n              <Breadcrumb match={this.props.match} />\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <Button\r\n                color=\"empty\"\r\n                className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n                onClick={this.toggleDisplayOptions}>\r\n                <IntlMessages id=\"todo.display-options\" />{\" \"}\r\n                <i className=\"simple-icon-arrow-down align-middle\" />\r\n              </Button>\r\n              <Collapse\r\n                id=\"displayOptions\"\r\n                className=\"d-md-block\"\r\n                isOpen={this.state.displayOptionsIsOpen}>\r\n                <div className=\"d-block mb-2 d-md-inline-block\">\r\n                  <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                    <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                      <IntlMessages id=\"todo.orderby\" />\r\n                      {orderColumn ? orderColumn.label : \"\"}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      {orderColumns.map((o, index) => {\r\n                        return (\r\n                          <DropdownItem\r\n                            key={index}\r\n                            onClick={() => this.changeOrderBy(o.column)}\r\n                          >\r\n                            {o.label}\r\n                          </DropdownItem>\r\n                        );\r\n                      })}\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"keyword\"\r\n                      id=\"search\"\r\n                      placeholder={messages[\"menu.search\"]}\r\n                      defaultValue={searchKeyword}\r\n                      onKeyPress={e => this.handleKeyPress(e)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n            <Separator className=\"mb-5\" />\r\n            <Row>\r\n              {loading ? (\r\n                todoItems.map((item, index) => (\r\n                  <TodoListItem\r\n                    key={`todo_item_${index}`}\r\n                    item={item}\r\n                    handleCheckChange={this.handleCheckChange}\r\n                    isSelected={\r\n                      loading ? selectedItems.includes(item.id) : false\r\n                    }\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div className=\"loading\" />\r\n              )}\r\n            </Row>\r\n          </Colxx>\r\n        </Row>\r\n        {loading && <TodoApplicationMenu />}\r\n        <AddNewTodoModal toggleModal={this.toggleModal} modalOpen={modalOpen} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ todoApp }) => {\r\n  return {\r\n    todoApp\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      getTodoList,\r\n      getTodoListWithOrder,\r\n      getTodoListSearch,\r\n      selectedTodoItemsChange\r\n    }\r\n  )(TodoApp)\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  console.log(match)\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (match.path.includes('/studio/class')) {\r\n    paths = paths.filter(x => x.indexOf(\"classes\") === -1);\r\n  } else if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  console.log(paths)\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from \"react\";\r\nimport { components } from \"react-select\";\r\n\r\nconst CustomSelectInput = props => {\r\n  var customProps = Object.assign({}, props);\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput\r\n"],"sourceRoot":""}