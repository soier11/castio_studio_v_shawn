{"version":3,"sources":["containers/pages/DataListView.js","containers/pages/Pagination.js","containers/pages/ContextMenuContainer.js","containers/pages/ListPageHeading.js","containers/pages/ImageListView.js","containers/pages/ThumbListView.js","containers/pages/AddNewModal.js","data/classes.js","views/studio/classpage/class.js","containers/navs/Breadcrumb.js","components/common/CustomSelectInput.js"],"names":["React","memo","product","isSelect","collect","onCheckItem","servicePath","xxs","className","id","data","onClick","event","classnames","active","to","title","category","date","color","statusColor","pill","status","type","checked","onChange","label","Pagination","Component","componentDidMount","onChangePage","e","this","props","render","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","map","key","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","action","ListPageHeading","constructor","super","toggleDisplayOptions","setState","prevState","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","state","messages","intl","displayMode","changeDisplayMode","handleChangeSelectAll","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","match","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","orderOptions","pageSizes","toggleModal","heading","size","isOpen","toggle","caret","right","href","order","index","column","name","placeholder","onKeyPress","injectIntl","onClickItem","sm","lg","xl","top","alt","src","img","AddNewModal","modalOpen","categories","wrapClassName","backdrop","components","Input","CustomSelectInput","classNamePrefix","options","outline","getData","apiUrl","ClassPage","find","x","dataListRender","mode","page","search","target","value","toLowerCase","tagName","parentElement","lastChecked","selectedItems","includes","filter","shiftKey","items","start","getIndex","end","slice","Math","min","max","item","Array","from","Set","document","activeElement","blur","isToggle","length","console","log","clickedProductId","mouseTrap","require","isLoading","bind","componentWillUnmount","unbind","arr","prop","axios","get","then","res","totalItem","Row","ImageListView","ThumbListView","DataListView","getMenuTitle","sub","getUrl","path","split","BreadcrumbItems","substr","paths","indexOf","BreadcrumbContainer","customProps","Object","assign","autoCorrect","autoCapitalize"],"mappings":"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","file":"static/js/channel-channel.a1b9590a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CustomInput, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst DataListView = ({ product, isSelect, collect, onCheckItem=null, servicePath='/' }) => {\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem ? onCheckItem(event, product.id) : null}\r\n          className={classnames(\"d-flex flex-row\", {\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <NavLink to={servicePath} className=\"w-40 w-sm-100\">\r\n                <p className=\"list-item-heading mb-1 truncate\">\r\n                  {product.title}\r\n                </p>\r\n              </NavLink>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n              </p>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n              </p>\r\n              <div className=\"w-15 w-sm-100\">\r\n                <Badge color={product.statusColor} pill>\r\n                  {product.status}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            {onCheckItem &&\r\n              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                <CustomInput\r\n                  className=\"item-check mb-0\"\r\n                  type=\"checkbox\"\r\n                  id={`check_${product.id}`}\r\n                  checked={isSelect}\r\n                  onChange={() => {}}\r\n                  label=\"\"\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(DataListView);\r\n","import React from \"react\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass Pagination extends React.Component {\r\n  componentDidMount() {}\r\n  onChangePage(e) {\r\n    this.props.onChangePage(e);\r\n  }\r\n  render() {\r\n    const {\r\n      totalPage = 0,\r\n      currentPage = 1,\r\n      numberLimit = 5,\r\n      lastIsActive = true,\r\n      firstIsActive = true\r\n    } = this.props;\r\n\r\n    let startPoint = 1;\r\n    let endPoint = numberLimit;\r\n\r\n    if (numberLimit > totalPage) {\r\n      startPoint = 1;\r\n      endPoint = totalPage;\r\n    } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n      startPoint = 1;\r\n      endPoint = numberLimit;\r\n    } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n      startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n      endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n    } else {\r\n      startPoint = totalPage - (numberLimit - 1);\r\n      endPoint = totalPage;\r\n    }\r\n    startPoint = startPoint === 0 ? 1 : startPoint;\r\n    const points = [];\r\n    for (var i = startPoint; i <= endPoint; i++) {\r\n      points.push(i);\r\n    }\r\n\r\n    let firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    let prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    return totalPage > 1 ? (\r\n      <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n        <Nav className=\"pagination justify-content-center\">\r\n          {firstIsActive && (\r\n            <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link first\"\r\n                onClick={() => this.onChangePage(1)}>\r\n                <i className=\"simple-icon-control-start\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n\r\n          <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link prev\"\r\n              onClick={() => this.onChangePage(currentPage - 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {points.map(i => {\r\n            return (\r\n              <NavItem\r\n                key={i}\r\n                className={`page-item ${currentPage === i && \"active\"}`}>\r\n                <NavLink\r\n                  className=\"page-link\"\r\n                  onClick={() => this.onChangePage(i)}\r\n                >\r\n                  {i}\r\n                </NavLink>\r\n              </NavItem>\r\n            );\r\n          })}\r\n          <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link next\"\r\n              onClick={() => this.onChangePage(currentPage + 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {lastIsActive && (\r\n            <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link last\"\r\n                onClick={() => this.onChangePage(totalPage)}>\r\n                <i className=\"simple-icon-control-end\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n        </Nav>\r\n      </Colxx>\r\n    ) : (\r\n      <Colxx xxs=\"12\" className=\"mt-2\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\r\n\r\nconst ContextMenuContainer = ({onContextMenu,onContextMenuClick}) => {\r\n  return (\r\n    <ContextMenu\r\n      id=\"menu_id\"\r\n      onShow={e => onContextMenu(e, e.detail.data)}\r\n    >\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"copy\" }}>\r\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\r\n      </MenuItem>\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"move\" }}>\r\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\r\n      </MenuItem>\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"delete\" }}>\r\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\r\n      </MenuItem>\r\n    </ContextMenu>\r\n  );\r\n};\r\n\r\nexport default ContextMenuContainer;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  ButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  CustomInput,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../navs/Breadcrumb';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  DataListIcon,\r\n  ThumbListIcon,\r\n  ImageListIcon,\r\n} from '../../components/svg';\r\nclass ListPageHeading extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      displayOptionsIsOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState((prevState) => ({\r\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen,\r\n    }));\r\n  };\r\n  toggleSplit = () => {\r\n    this.setState((prevState) => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    const {\r\n      displayMode,\r\n      changeDisplayMode,\r\n      handleChangeSelectAll,\r\n      changeOrderBy,\r\n      changePageSize,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      match,\r\n      startIndex,\r\n      endIndex,\r\n      selectedItemsLength,\r\n      itemsLength,\r\n      onSearchKey,\r\n      orderOptions,\r\n      pageSizes,\r\n      toggleModal,\r\n      heading,\r\n    } = this.props;\r\n\r\n    const { displayOptionsIsOpen, dropdownSplitOpen } = this.state;\r\n    return (\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <div className=\"mb-2\">\r\n            <h1>\r\n              <IntlMessages id={heading} />\r\n            </h1>\r\n\r\n            <div className=\"text-zero top-right-button-container\">\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                className=\"top-right-button\"\r\n                onClick={() => toggleModal()}>\r\n                <IntlMessages id=\"pages.add-file\" />\r\n              </Button>\r\n              {'  '}\r\n              <ButtonDropdown\r\n                isOpen={dropdownSplitOpen}\r\n                toggle={this.toggleSplit}>\r\n                <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\r\n                  <CustomInput\r\n                    className=\"custom-checkbox mb-0 d-inline-block\"\r\n                    type=\"checkbox\"\r\n                    id=\"checkAll\"\r\n                    checked={selectedItemsLength >= itemsLength}\r\n                    onChange={() => handleChangeSelectAll(true)}\r\n                    label={\r\n                      <span\r\n                        className={`custom-control-label ${\r\n                          selectedItemsLength > 0 &&\r\n                          selectedItemsLength < itemsLength\r\n                            ? 'indeterminate'\r\n                            : ''\r\n                        }`}\r\n                      />\r\n                    }\r\n                  />\r\n                </div>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"primary\"\r\n                  className=\"dropdown-toggle-split btn-lg\"\r\n                />\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.delete\" />\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.another-action\" />\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </ButtonDropdown>\r\n            </div>\r\n            <Breadcrumb match={match} />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <Button\r\n              color=\"empty\"\r\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n              onClick={this.toggleDisplayOptions}>\r\n              <IntlMessages id=\"pages.display-options\" />{' '}\r\n              <i className=\"simple-icon-arrow-down align-middle\" />\r\n            </Button>\r\n            <Collapse\r\n              isOpen={displayOptionsIsOpen}\r\n              className=\"d-md-block\"\r\n              id=\"displayOptions\">\r\n              <span className=\"mr-3 d-inline-block float-md-left\">\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'list' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('list')}>\r\n                  <DataListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'thumblist' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('thumblist')}>\r\n                  <ThumbListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === 'imagelist' ? 'active' : ''\r\n                  }`}\r\n                  onClick={() => changeDisplayMode('imagelist')}>\r\n                  <ImageListIcon />\r\n                </a>\r\n              </span>\r\n\r\n              <div className=\"d-block d-md-inline-block pt-1\">\r\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    <IntlMessages id=\"pages.orderby\" />\r\n                    {selectedOrderOption.label}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {orderOptions.map((order, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changeOrderBy(order.column)}>\r\n                          {order.label}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    id=\"search\"\r\n                    placeholder={messages['menu.search']}\r\n                    onKeyPress={(e) => onSearchKey(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"float-md-right pt-1\">\r\n                <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    {selectedPageSize}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    {pageSizes.map((size, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changePageSize(size)}>\r\n                          {size}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ListPageHeading);\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardImg,\r\n  CardText,\r\n  CustomInput,\r\n  Badge\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst ImageListView = ({ product, isSelect, collect, onCheckItem=null, onClickItem=null, servicePath='#'}) => {\r\n  return (\r\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem ? onCheckItem(event, product.id) : null}\r\n          className={classnames({\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <NavLink to={servicePath} className=\"w-40 w-sm-100\" onClick={onClickItem}>\r\n              <CardImg top alt={product.title} src={product.img} />\r\n            </NavLink>\r\n            <Badge\r\n              color={product.statusColor}\r\n              pill\r\n              className=\"position-absolute badge-top-left\"\r\n            >\r\n              {product.status}\r\n            </Badge>\r\n          </div>\r\n          <CardBody>\r\n            <Row>\r\n              {onCheckItem &&\r\n                <Colxx xxs=\"2\">\r\n                  <CustomInput\r\n                    className=\"item-check mb-0\"\r\n                    type=\"checkbox\"\r\n                    id={`check_${product.id}`}\r\n                    checked={isSelect}\r\n                    onChange={() => {}}\r\n                    label=\"\"/>\r\n                </Colxx>\r\n              }\r\n              <Colxx xxs=\"10\" className=\"mb-3\">\r\n                <CardSubtitle>{product.title}</CardSubtitle>\r\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                  {product.date}\r\n                </CardText>\r\n              </Colxx>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ImageListView);\r\n","import React from \"react\";\r\nimport { Card, CustomInput, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem=null, servicePath='/' }) => {\r\n  return (\r\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem ? onCheckItem(event, product.id) : null}\r\n          className={classnames(\"d-flex flex-row\", {\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <NavLink to={servicePath} className=\"d-flex\">\r\n            <img\r\n              alt={product.title}\r\n              src={product.img}\r\n              className=\"list-thumbnail responsive border-0 card-img-left\"\r\n            />\r\n          </NavLink>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <NavLink to={servicePath} className=\"w-40 w-sm-100\">\r\n                <p className=\"list-item-heading mb-1 truncate\">\r\n                  {product.title}\r\n                </p>\r\n              </NavLink>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n              </p>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n              </p>\r\n              <div className=\"w-15 w-sm-100\">\r\n                <Badge color={product.statusColor} pill>\r\n                  {product.status}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            {onCheckItem &&\r\n              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n                <CustomInput\r\n                  className=\"item-check mb-0\"\r\n                  type=\"checkbox\"\r\n                  id={`check_${product.id}`}\r\n                  checked={isSelect}\r\n                  onChange={()=>{}}\r\n                  label=\"\"\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ThumbListView);\r\n","import React from \"react\";\r\nimport {\r\n  CustomInput,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      toggle={toggleModal}\r\n      wrapClassName=\"modal-right\"\r\n      backdrop=\"static\"\r\n    >\r\n      <ModalHeader toggle={toggleModal}>\r\n        <IntlMessages id=\"pages.add-new-modal-title\" />\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Label>\r\n          <IntlMessages id=\"pages.product-name\" />\r\n        </Label>\r\n        <Input />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.category\" />\r\n        </Label>\r\n        <Select\r\n          components={{ Input: CustomSelectInput }}\r\n          className=\"react-select\"\r\n          classNamePrefix=\"react-select\"\r\n          name=\"form-field-name\"\r\n          options={categories}\r\n        />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.description\" />\r\n        </Label>\r\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.status\" />\r\n        </Label>\r\n        <CustomInput\r\n          type=\"radio\"\r\n          id=\"exCustomRadio\"\r\n          name=\"customRadio\"\r\n          label=\"ON HOLD\"\r\n        />\r\n        <CustomInput\r\n          type=\"radio\"\r\n          id=\"exCustomRadio2\"\r\n          name=\"customRadio\"\r\n          label=\"PROCESSED\"\r\n        />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"secondary\" outline onClick={toggleModal}>\r\n          <IntlMessages id=\"pages.cancel\" />\r\n        </Button>\r\n        <Button color=\"primary\" onClick={toggleModal}>\r\n          <IntlMessages id=\"pages.submit\" />\r\n        </Button>{\" \"}\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewModal;\r\n","const data = [\n  {\n    id: 1,\n    title: 'Marble Cake',\n    img: '/assets/img/marble-cake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '02.04.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake with flowers Macarons and blueberries',\n    sales: 1647,\n    stock: 62\n  },\n  {\n    id: 2,\n    title: 'Fat Rascal',\n    category: 'Cupcakes',\n    img: '/assets/img/fat-rascal-thumb.jpg',\n    createDate: '01.04.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Cheesecake with chocolate cookies and Cream biscuits',\n    sales: 1240,\n    stock: 48\n  },\n  {\n    id: 3,\n    title: 'Chocolate Cake',\n    img: '/assets/img/chocolate-cake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '25.03.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Homemade cheesecake with fresh berries and mint',\n    sales: 1080,\n    stock: 57\n  },\n  {\n    id: 4,\n    title: 'Goose Breast',\n    img: '/assets/img/goose-breast-thumb.jpg',\n    category: 'Cakes',\n    createDate: '21.03.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Chocolate cake with berries',\n    sales: 1014,\n    stock: 41\n  },\n  {\n    id: 5,\n    title: 'Petit Gâteau',\n    category: 'Cupcakes',\n    img: '/assets/img/petit-gateau-thumb.jpg',\n    createDate: '02.06.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Chocolate cake with mascarpone',\n    sales: 985,\n    stock: 23\n  },\n  {\n    id: 6,\n    title: 'Salzburger Nockerl',\n    img: '/assets/img/salzburger-nockerl-thumb.jpg',\n    category: 'Desserts',\n    createDate: '14.07.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Wedding cake decorated with donuts and wild berries',\n    sales: 962,\n    stock: 34\n  },\n  {\n    id: 7,\n    title: 'Napoleonshat',\n    img: '/assets/img/napoleonshat-thumb.jpg',\n    category: 'Desserts',\n    createDate: '05.02.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Cheesecake with fresh berries and mint for dessert',\n    sales: 921,\n    stock: 31\n  },\n  {\n    id: 8,\n    title: 'Cheesecake',\n    img: '/assets/img/cheesecake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '18.08.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Delicious vegan chocolate cake',\n    sales: 887,\n    stock: 21\n  },\n  {\n    id: 9,\n    title: 'Financier',\n    img: '/assets/img/financier-thumb.jpg',\n    category: 'Cakes',\n    createDate: '15.03.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description:\n      'White chocolate strawberry yogurt cake decorated with fresh fruits and chocolate',\n    sales: 865,\n    stock: 53\n  },\n  {\n    id: 10,\n    title: 'Genoise',\n    img: '/assets/img/genoise-thumb.jpg',\n    category: 'Cupcakes',\n    createDate: '11.06.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Christmas fruit cake, pudding on top',\n    sales: 824,\n    stock: 55\n  },\n  {\n    id: 11,\n    title: 'Gingerbread',\n    img: '/assets/img/gingerbread-thumb.jpg',\n    category: 'Cakes',\n    createDate: '10.04.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake decorated with donuts and wild berries',\n    sales: 714,\n    stock: 12\n  },\n  {\n    id: 12,\n    title: 'Magdalena',\n    img: '/assets/img/magdalena-thumb.jpg',\n    category: 'Cakes',\n    createDate: '22.07.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Christmas fruit cake, pudding on top',\n    sales: 702,\n    stock: 14\n  },\n  {\n    id: 13,\n    title: 'Parkin',\n    img: '/assets/img/parkin-thumb.jpg',\n    category: 'Cakes',\n    createDate: '22.08.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description:\n      'White chocolate strawberry yogurt cake decorated with fresh fruits and chocolate',\n    sales: 689,\n    stock: 78\n  },\n  {\n    id: 14,\n    title: 'Streuselkuchen',\n    img: '/assets/img/streuselkuchen-thumb.jpg',\n    category: 'Cakes',\n    createDate: '22.07.2018',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Delicious vegan chocolate cake',\n    sales: 645,\n    stock: 55\n  },\n  {\n    id: 15,\n    title: 'Tea loaf',\n    img: '/assets/img/tea-loaf-thumb.jpg',\n    category: 'Cakes',\n    createDate: '10.09.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Cheesecake with fresh berries and mint for dessert',\n    sales: 632,\n    stock: 20\n  },\n  {\n    id: 16,\n    title: 'Merveilleux',\n    img: '/assets/img/merveilleux-thumb.jpg',\n    category: 'Cakes',\n    createDate: '18.02.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Chocolate cake with mascarpone',\n    sales: 621,\n    stock: 6\n  },\n  {\n    id: 17,\n    title: 'Fruitcake',\n    img: '/assets/img/fruitcake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '12.01.2019',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Chocolate cake with berries',\n    sales: 595,\n    stock: 17\n  },\n  {\n    id: 18,\n    title: 'Bebinca',\n    img: '/assets/img/bebinca-thumb.jpg',\n    category: 'Cakes',\n    createDate: '04.02.2019',\n    status: 'PROCESSED',\n    statusColor: 'secondary',\n    description: 'Homemade cheesecake with fresh berries and mint',\n    sales: 574,\n    stock: 16\n  },\n  {\n    id: 19,\n    title: 'Cremeschnitte',\n    img: '/assets/img/cremeschnitte-thumb.jpg',\n    category: 'Desserts',\n    createDate: '04.03.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Cheesecake with chocolate cookies and Cream biscuits',\n    sales: 562,\n    stock: 9\n  },\n  {\n    id: 20,\n    title: 'Soufflé',\n    img: '/assets/img/souffle-thumb.jpg',\n    category: 'Cupcakes',\n    createDate: '16.01.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake with flowers Macarons and blueberries',\n    sales: 524,\n    stock: 14\n  }\n];\n\nconst getData = (props) => {\n  const { pageSize, currentPage, orderBy, search } = props;\n  let resultData = data.filter((row, idx) => idx < pageSize);\n\n  let obj = {\n    status: true,\n    totalItem: pageSize.length,\n    totalPage: 1,\n    pageSize: pageSize.toString(),\n    currentPage: currentPage.toString(),\n    data: resultData\n  };\n\n  return obj;\n};\nexport default getData;\n","import React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport axios from \"axios\";\n\nimport { servicePath } from \"../../../constants/defaultValues\";\nimport classesData from \"../../../data/classes\";\n\nimport DataListView from \"../../../containers/pages/DataListView\";\nimport Pagination from \"../../../containers/pages/Pagination\";\nimport ContextMenuContainer from \"../../../containers/pages/ContextMenuContainer\";\nimport ListPageHeading from \"../../../containers/pages/ListPageHeading\";\nimport ImageListView from \"../../../containers/pages/ImageListView\";\nimport ThumbListView from \"../../../containers/pages/ThumbListView\";\nimport AddNewModal from \"../../../containers/pages/AddNewModal\";\n\nfunction collect(props) {\n  return { data: props.data };\n}\nconst apiUrl = servicePath + \"/cakes/paging\";\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n    this.mouseTrap = require('mousetrap');\n\n    this.state = {\n      displayMode: \"imagelist\",\n\n      selectedPageSize: 8,\n      orderOptions: [\n        { column: \"title\", label: \"Product Name\" },\n        { column: \"category\", label: \"Category\" },\n        { column: \"status\", label: \"Status\" }\n      ],\n      pageSizes: [8, 12, 24],\n\n      categories: [\n        { label: \"Cakes\", value: \"Cakes\", key: 0 },\n        { label: \"Cupcakes\", value: \"Cupcakes\", key: 1 },\n        { label: \"Desserts\", value: \"Desserts\", key: 2 }\n      ],\n\n      selectedOrderOption: { column: \"title\", label: \"Product Name\" },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalItemCount: 0,\n      totalPage: 1,\n      search: \"\",\n      selectedItems: [],\n      lastChecked: null,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.dataListRender();\n    this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () =>\n      this.handleChangeSelectAll(false)\n    );\n    this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\n      this.setState({\n        selectedItems: []\n      });\n      return false;\n    });\n  }\n\n  componentWillUnmount() {\n    this.mouseTrap.unbind(\"ctrl+a\");\n    this.mouseTrap.unbind(\"command+a\");\n    this.mouseTrap.unbind(\"ctrl+d\");\n    this.mouseTrap.unbind(\"command+d\");\n  }\n\n\n  toggleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    });\n  };\n\n  changeOrderBy = column => {\n    this.setState(\n      {\n        selectedOrderOption: this.state.orderOptions.find(\n          x => x.column === column\n        )\n      },\n      () => this.dataListRender()\n    );\n  };\n  changePageSize = size => {\n    this.setState(\n      {\n        selectedPageSize: size,\n        currentPage: 1\n      },\n      () => this.dataListRender()\n    );\n  };\n  changeDisplayMode = mode => {\n    this.setState({\n      displayMode: mode\n    });\n    return false;\n  };\n  onChangePage = page => {\n    this.setState(\n      {\n        currentPage: page\n      },\n      () => this.dataListRender()\n    );\n  };\n\n  onSearchKey = e => {\n    if (e.key === \"Enter\") {\n      this.setState(\n        {\n          search: e.target.value.toLowerCase()\n        },\n        () => this.dataListRender()\n      );\n    }\n  };\n\n  onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === \"A\" ||\n      (event.target.parentElement && event.target.parentElement.tagName === \"A\")\n    ) {\n      return true;\n    }\n    if (this.state.lastChecked === null) {\n      this.setState({\n        lastChecked: id\n      });\n    }\n\n    let selectedItems = this.state.selectedItems;\n    if (selectedItems.includes(id)) {\n      selectedItems = selectedItems.filter(x => x !== id);\n    } else {\n      selectedItems.push(id);\n    }\n    this.setState({\n      selectedItems\n    });\n\n    if (event.shiftKey) {\n      var items = this.state.items;\n      var start = this.getIndex(id, items, \"id\");\n      var end = this.getIndex(this.state.lastChecked, items, \"id\");\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...items.map(item => {\n          return item.id;\n        })\n      );\n      selectedItems = Array.from(new Set(selectedItems));\n      this.setState({\n        selectedItems\n      });\n    }\n    document.activeElement.blur();\n  };\n\n  getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  handleChangeSelectAll = isToggle => {\n    if (this.state.selectedItems.length >= this.state.items.length) {\n      if (isToggle) {\n        this.setState({\n          selectedItems: []\n        });\n      }\n    } else {\n      this.setState({\n        selectedItems: this.state.items.map(x => x.id)\n      });\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  dataListRender() {\n    const {\n      selectedPageSize,\n      currentPage,\n      selectedOrderOption,\n      search\n    } = this.state;\n    axios\n      .get(\n        `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${\n          selectedOrderOption.column\n        }&search=${search}`\n      )\n      .then(res => {\n        return res.data;\n      })\n      .then(data => {\n        this.setState({\n          totalPage: data.totalPage,\n          items: data.data,\n          selectedItems: [],\n          totalItemCount: data.totalItem,\n          isLoading: true\n        });\n      });\n  }\n\n  onContextMenuClick = (e, data, target) => {\n    console.log(\n      \"onContextMenuClick - selected items\",\n      this.state.selectedItems\n    );\n    console.log(\"onContextMenuClick - action : \", data.action);\n  };\n\n  onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!this.state.selectedItems.includes(clickedProductId)) {\n      this.setState({\n        selectedItems: [clickedProductId]\n      });\n    }\n\n    return true;\n  };\n\n  render() {\n    const {\n      currentPage,\n      items,\n      displayMode,\n      selectedPageSize,\n      totalItemCount,\n      selectedOrderOption,\n      selectedItems,\n      orderOptions,\n      pageSizes,\n      modalOpen,\n      categories\n    } = this.state;\n    const { match } = this.props;\n    const startIndex = (currentPage - 1) * selectedPageSize;\n    const endIndex = currentPage * selectedPageSize;\n\n    console.log(match)\n\n    return !this.state.isLoading ? (\n      <div className=\"loading\" />\n    ) : (\n      <Fragment>\n        <div className=\"disable-text-selection\">\n          <ListPageHeading\n            heading=\"menu.class\"\n            displayMode={displayMode}\n            changeDisplayMode={this.changeDisplayMode}\n            handleChangeSelectAll={this.handleChangeSelectAll}\n            changeOrderBy={this.changeOrderBy}\n            changePageSize={this.changePageSize}\n            selectedPageSize={selectedPageSize}\n            totalItemCount={totalItemCount}\n            selectedOrderOption={selectedOrderOption}\n            match={match}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\n            itemsLength={items ? items.length : 0}\n            onSearchKey={this.onSearchKey}\n            orderOptions={orderOptions}\n            pageSizes={pageSizes}\n            toggleModal={this.toggleModal}\n          />\n          <AddNewModal\n            modalOpen={modalOpen}\n            toggleModal={this.toggleModal}\n            categories={categories}\n          />\n          <Row>\n            {this.state.items.map(product => {\n              if (this.state.displayMode === \"imagelist\") {\n                return (\n                  <ImageListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    collect={collect}\n                    // onCheckItem={null}\n                    servicePath={`./${product.id}`}\n                  />\n                );\n              } else if (this.state.displayMode === \"thumblist\") {\n                return (\n                  <ThumbListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    collect={collect}\n                    servicePath={`./${product.id}`}\n                    // onCheckItem={this.onCheckItem}\n                  />\n                );\n              } else {\n                return (\n                  <DataListView\n                    key={product.id}\n                    product={product}\n                    isSelect={this.state.selectedItems.includes(product.id)}\n                    collect={collect}\n                    servicePath={`./${product.id}`}\n                    // onCheckItem={this.onCheckItem}\n                  />\n                );\n              }\n            })}{\" \"}\n            <Pagination\n              currentPage={this.state.currentPage}\n              totalPage={this.state.totalPage}\n              onChangePage={i => this.onChangePage(i)}\n            />\n            <ContextMenuContainer\n              onContextMenuClick={this.onContextMenuClick}\n              onContextMenu={this.onContextMenu}\n            />\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default ClassPage;","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  console.log(match)\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (match.path.includes('/studio/class')) {\r\n    paths = paths.filter(x => x.indexOf(\"classes\") === -1);\r\n  } else if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  console.log(paths)\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from \"react\";\r\nimport { components } from \"react-select\";\r\n\r\nconst CustomSelectInput = props => {\r\n  var customProps = Object.assign({}, props);\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput\r\n"],"sourceRoot":""}